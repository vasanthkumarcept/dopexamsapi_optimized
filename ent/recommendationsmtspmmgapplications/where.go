// Code generated by ent, DO NOT EDIT.

package recommendationsmtspmmgapplications

import (
	"recruit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldID, id))
}

// ApplicationID applies equality check predicate on the "ApplicationID" field. It's identical to ApplicationIDEQ.
func ApplicationID(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldApplicationID, v))
}

// EmployeeID applies equality check predicate on the "EmployeeID" field. It's identical to EmployeeIDEQ.
func EmployeeID(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldEmployeeID, v))
}

// ExamNameCode applies equality check predicate on the "ExamNameCode" field. It's identical to ExamNameCodeEQ.
func ExamNameCode(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldExamNameCode, v))
}

// ExamYear applies equality check predicate on the "ExamYear" field. It's identical to ExamYearEQ.
func ExamYear(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldExamYear, v))
}

// ExamName applies equality check predicate on the "ExamName" field. It's identical to ExamNameEQ.
func ExamName(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldExamName, v))
}

// VacancyYear applies equality check predicate on the "VacancyYear" field. It's identical to VacancyYearEQ.
func VacancyYear(v int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldVacancyYear, v))
}

// CARecommendations applies equality check predicate on the "CA_Recommendations" field. It's identical to CARecommendationsEQ.
func CARecommendations(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCARecommendations, v))
}

// CAUpdatedAt applies equality check predicate on the "CA_UpdatedAt" field. It's identical to CAUpdatedAtEQ.
func CAUpdatedAt(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCAUpdatedAt, v))
}

// CAUserName applies equality check predicate on the "CA_UserName" field. It's identical to CAUserNameEQ.
func CAUserName(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCAUserName, v))
}

// CARemarks applies equality check predicate on the "CA_Remarks" field. It's identical to CARemarksEQ.
func CARemarks(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCARemarks, v))
}

// NORecommendations applies equality check predicate on the "NO_Recommendations" field. It's identical to NORecommendationsEQ.
func NORecommendations(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNORecommendations, v))
}

// NOUpdatedAt applies equality check predicate on the "NO_UpdatedAt" field. It's identical to NOUpdatedAtEQ.
func NOUpdatedAt(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNOUpdatedAt, v))
}

// NOUserName applies equality check predicate on the "NO_UserName" field. It's identical to NOUserNameEQ.
func NOUserName(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNOUserName, v))
}

// NORemarks applies equality check predicate on the "NO_Remarks" field. It's identical to NORemarksEQ.
func NORemarks(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNORemarks, v))
}

// ApplicationStatus applies equality check predicate on the "ApplicationStatus" field. It's identical to ApplicationStatusEQ.
func ApplicationStatus(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldApplicationStatus, v))
}

// UpdatedAt applies equality check predicate on the "UpdatedAt" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedBy applies equality check predicate on the "UpdatedBy" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldUpdatedBy, v))
}

// GenerateHallTicketFlag applies equality check predicate on the "GenerateHallTicketFlag" field. It's identical to GenerateHallTicketFlagEQ.
func GenerateHallTicketFlag(v bool) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldGenerateHallTicketFlag, v))
}

// ApplicationIDEQ applies the EQ predicate on the "ApplicationID" field.
func ApplicationIDEQ(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldApplicationID, v))
}

// ApplicationIDNEQ applies the NEQ predicate on the "ApplicationID" field.
func ApplicationIDNEQ(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldApplicationID, v))
}

// ApplicationIDIn applies the In predicate on the "ApplicationID" field.
func ApplicationIDIn(vs ...int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldApplicationID, vs...))
}

// ApplicationIDNotIn applies the NotIn predicate on the "ApplicationID" field.
func ApplicationIDNotIn(vs ...int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldApplicationID, vs...))
}

// ApplicationIDIsNil applies the IsNil predicate on the "ApplicationID" field.
func ApplicationIDIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldApplicationID))
}

// ApplicationIDNotNil applies the NotNil predicate on the "ApplicationID" field.
func ApplicationIDNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldApplicationID))
}

// EmployeeIDEQ applies the EQ predicate on the "EmployeeID" field.
func EmployeeIDEQ(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldEmployeeID, v))
}

// EmployeeIDNEQ applies the NEQ predicate on the "EmployeeID" field.
func EmployeeIDNEQ(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldEmployeeID, v))
}

// EmployeeIDIn applies the In predicate on the "EmployeeID" field.
func EmployeeIDIn(vs ...int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldEmployeeID, vs...))
}

// EmployeeIDNotIn applies the NotIn predicate on the "EmployeeID" field.
func EmployeeIDNotIn(vs ...int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldEmployeeID, vs...))
}

// EmployeeIDGT applies the GT predicate on the "EmployeeID" field.
func EmployeeIDGT(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldEmployeeID, v))
}

// EmployeeIDGTE applies the GTE predicate on the "EmployeeID" field.
func EmployeeIDGTE(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldEmployeeID, v))
}

// EmployeeIDLT applies the LT predicate on the "EmployeeID" field.
func EmployeeIDLT(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldEmployeeID, v))
}

// EmployeeIDLTE applies the LTE predicate on the "EmployeeID" field.
func EmployeeIDLTE(v int64) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldEmployeeID, v))
}

// EmployeeIDIsNil applies the IsNil predicate on the "EmployeeID" field.
func EmployeeIDIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldEmployeeID))
}

// EmployeeIDNotNil applies the NotNil predicate on the "EmployeeID" field.
func EmployeeIDNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldEmployeeID))
}

// ExamNameCodeEQ applies the EQ predicate on the "ExamNameCode" field.
func ExamNameCodeEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldExamNameCode, v))
}

// ExamNameCodeNEQ applies the NEQ predicate on the "ExamNameCode" field.
func ExamNameCodeNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldExamNameCode, v))
}

// ExamNameCodeIn applies the In predicate on the "ExamNameCode" field.
func ExamNameCodeIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldExamNameCode, vs...))
}

// ExamNameCodeNotIn applies the NotIn predicate on the "ExamNameCode" field.
func ExamNameCodeNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldExamNameCode, vs...))
}

// ExamNameCodeGT applies the GT predicate on the "ExamNameCode" field.
func ExamNameCodeGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldExamNameCode, v))
}

// ExamNameCodeGTE applies the GTE predicate on the "ExamNameCode" field.
func ExamNameCodeGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldExamNameCode, v))
}

// ExamNameCodeLT applies the LT predicate on the "ExamNameCode" field.
func ExamNameCodeLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldExamNameCode, v))
}

// ExamNameCodeLTE applies the LTE predicate on the "ExamNameCode" field.
func ExamNameCodeLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldExamNameCode, v))
}

// ExamNameCodeContains applies the Contains predicate on the "ExamNameCode" field.
func ExamNameCodeContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldExamNameCode, v))
}

// ExamNameCodeHasPrefix applies the HasPrefix predicate on the "ExamNameCode" field.
func ExamNameCodeHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldExamNameCode, v))
}

// ExamNameCodeHasSuffix applies the HasSuffix predicate on the "ExamNameCode" field.
func ExamNameCodeHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldExamNameCode, v))
}

// ExamNameCodeIsNil applies the IsNil predicate on the "ExamNameCode" field.
func ExamNameCodeIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldExamNameCode))
}

// ExamNameCodeNotNil applies the NotNil predicate on the "ExamNameCode" field.
func ExamNameCodeNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldExamNameCode))
}

// ExamNameCodeEqualFold applies the EqualFold predicate on the "ExamNameCode" field.
func ExamNameCodeEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldExamNameCode, v))
}

// ExamNameCodeContainsFold applies the ContainsFold predicate on the "ExamNameCode" field.
func ExamNameCodeContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldExamNameCode, v))
}

// ExamYearEQ applies the EQ predicate on the "ExamYear" field.
func ExamYearEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldExamYear, v))
}

// ExamYearNEQ applies the NEQ predicate on the "ExamYear" field.
func ExamYearNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldExamYear, v))
}

// ExamYearIn applies the In predicate on the "ExamYear" field.
func ExamYearIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldExamYear, vs...))
}

// ExamYearNotIn applies the NotIn predicate on the "ExamYear" field.
func ExamYearNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldExamYear, vs...))
}

// ExamYearGT applies the GT predicate on the "ExamYear" field.
func ExamYearGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldExamYear, v))
}

// ExamYearGTE applies the GTE predicate on the "ExamYear" field.
func ExamYearGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldExamYear, v))
}

// ExamYearLT applies the LT predicate on the "ExamYear" field.
func ExamYearLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldExamYear, v))
}

// ExamYearLTE applies the LTE predicate on the "ExamYear" field.
func ExamYearLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldExamYear, v))
}

// ExamYearContains applies the Contains predicate on the "ExamYear" field.
func ExamYearContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldExamYear, v))
}

// ExamYearHasPrefix applies the HasPrefix predicate on the "ExamYear" field.
func ExamYearHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldExamYear, v))
}

// ExamYearHasSuffix applies the HasSuffix predicate on the "ExamYear" field.
func ExamYearHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldExamYear, v))
}

// ExamYearIsNil applies the IsNil predicate on the "ExamYear" field.
func ExamYearIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldExamYear))
}

// ExamYearNotNil applies the NotNil predicate on the "ExamYear" field.
func ExamYearNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldExamYear))
}

// ExamYearEqualFold applies the EqualFold predicate on the "ExamYear" field.
func ExamYearEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldExamYear, v))
}

// ExamYearContainsFold applies the ContainsFold predicate on the "ExamYear" field.
func ExamYearContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldExamYear, v))
}

// ExamNameEQ applies the EQ predicate on the "ExamName" field.
func ExamNameEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldExamName, v))
}

// ExamNameNEQ applies the NEQ predicate on the "ExamName" field.
func ExamNameNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldExamName, v))
}

// ExamNameIn applies the In predicate on the "ExamName" field.
func ExamNameIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldExamName, vs...))
}

// ExamNameNotIn applies the NotIn predicate on the "ExamName" field.
func ExamNameNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldExamName, vs...))
}

// ExamNameGT applies the GT predicate on the "ExamName" field.
func ExamNameGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldExamName, v))
}

// ExamNameGTE applies the GTE predicate on the "ExamName" field.
func ExamNameGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldExamName, v))
}

// ExamNameLT applies the LT predicate on the "ExamName" field.
func ExamNameLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldExamName, v))
}

// ExamNameLTE applies the LTE predicate on the "ExamName" field.
func ExamNameLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldExamName, v))
}

// ExamNameContains applies the Contains predicate on the "ExamName" field.
func ExamNameContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldExamName, v))
}

// ExamNameHasPrefix applies the HasPrefix predicate on the "ExamName" field.
func ExamNameHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldExamName, v))
}

// ExamNameHasSuffix applies the HasSuffix predicate on the "ExamName" field.
func ExamNameHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldExamName, v))
}

// ExamNameIsNil applies the IsNil predicate on the "ExamName" field.
func ExamNameIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldExamName))
}

// ExamNameNotNil applies the NotNil predicate on the "ExamName" field.
func ExamNameNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldExamName))
}

// ExamNameEqualFold applies the EqualFold predicate on the "ExamName" field.
func ExamNameEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldExamName, v))
}

// ExamNameContainsFold applies the ContainsFold predicate on the "ExamName" field.
func ExamNameContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldExamName, v))
}

// VacancyYearEQ applies the EQ predicate on the "VacancyYear" field.
func VacancyYearEQ(v int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldVacancyYear, v))
}

// VacancyYearNEQ applies the NEQ predicate on the "VacancyYear" field.
func VacancyYearNEQ(v int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldVacancyYear, v))
}

// VacancyYearIn applies the In predicate on the "VacancyYear" field.
func VacancyYearIn(vs ...int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldVacancyYear, vs...))
}

// VacancyYearNotIn applies the NotIn predicate on the "VacancyYear" field.
func VacancyYearNotIn(vs ...int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldVacancyYear, vs...))
}

// VacancyYearGT applies the GT predicate on the "VacancyYear" field.
func VacancyYearGT(v int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldVacancyYear, v))
}

// VacancyYearGTE applies the GTE predicate on the "VacancyYear" field.
func VacancyYearGTE(v int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldVacancyYear, v))
}

// VacancyYearLT applies the LT predicate on the "VacancyYear" field.
func VacancyYearLT(v int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldVacancyYear, v))
}

// VacancyYearLTE applies the LTE predicate on the "VacancyYear" field.
func VacancyYearLTE(v int32) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldVacancyYear, v))
}

// VacancyYearIsNil applies the IsNil predicate on the "VacancyYear" field.
func VacancyYearIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldVacancyYear))
}

// VacancyYearNotNil applies the NotNil predicate on the "VacancyYear" field.
func VacancyYearNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldVacancyYear))
}

// CARecommendationsEQ applies the EQ predicate on the "CA_Recommendations" field.
func CARecommendationsEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCARecommendations, v))
}

// CARecommendationsNEQ applies the NEQ predicate on the "CA_Recommendations" field.
func CARecommendationsNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldCARecommendations, v))
}

// CARecommendationsIn applies the In predicate on the "CA_Recommendations" field.
func CARecommendationsIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldCARecommendations, vs...))
}

// CARecommendationsNotIn applies the NotIn predicate on the "CA_Recommendations" field.
func CARecommendationsNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldCARecommendations, vs...))
}

// CARecommendationsGT applies the GT predicate on the "CA_Recommendations" field.
func CARecommendationsGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldCARecommendations, v))
}

// CARecommendationsGTE applies the GTE predicate on the "CA_Recommendations" field.
func CARecommendationsGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldCARecommendations, v))
}

// CARecommendationsLT applies the LT predicate on the "CA_Recommendations" field.
func CARecommendationsLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldCARecommendations, v))
}

// CARecommendationsLTE applies the LTE predicate on the "CA_Recommendations" field.
func CARecommendationsLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldCARecommendations, v))
}

// CARecommendationsContains applies the Contains predicate on the "CA_Recommendations" field.
func CARecommendationsContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldCARecommendations, v))
}

// CARecommendationsHasPrefix applies the HasPrefix predicate on the "CA_Recommendations" field.
func CARecommendationsHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldCARecommendations, v))
}

// CARecommendationsHasSuffix applies the HasSuffix predicate on the "CA_Recommendations" field.
func CARecommendationsHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldCARecommendations, v))
}

// CARecommendationsIsNil applies the IsNil predicate on the "CA_Recommendations" field.
func CARecommendationsIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldCARecommendations))
}

// CARecommendationsNotNil applies the NotNil predicate on the "CA_Recommendations" field.
func CARecommendationsNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldCARecommendations))
}

// CARecommendationsEqualFold applies the EqualFold predicate on the "CA_Recommendations" field.
func CARecommendationsEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldCARecommendations, v))
}

// CARecommendationsContainsFold applies the ContainsFold predicate on the "CA_Recommendations" field.
func CARecommendationsContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldCARecommendations, v))
}

// CAUpdatedAtEQ applies the EQ predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtEQ(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCAUpdatedAt, v))
}

// CAUpdatedAtNEQ applies the NEQ predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtNEQ(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldCAUpdatedAt, v))
}

// CAUpdatedAtIn applies the In predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtIn(vs ...time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldCAUpdatedAt, vs...))
}

// CAUpdatedAtNotIn applies the NotIn predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtNotIn(vs ...time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldCAUpdatedAt, vs...))
}

// CAUpdatedAtGT applies the GT predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtGT(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldCAUpdatedAt, v))
}

// CAUpdatedAtGTE applies the GTE predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtGTE(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldCAUpdatedAt, v))
}

// CAUpdatedAtLT applies the LT predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtLT(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldCAUpdatedAt, v))
}

// CAUpdatedAtLTE applies the LTE predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtLTE(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldCAUpdatedAt, v))
}

// CAUpdatedAtIsNil applies the IsNil predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldCAUpdatedAt))
}

// CAUpdatedAtNotNil applies the NotNil predicate on the "CA_UpdatedAt" field.
func CAUpdatedAtNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldCAUpdatedAt))
}

// CAUserNameEQ applies the EQ predicate on the "CA_UserName" field.
func CAUserNameEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCAUserName, v))
}

// CAUserNameNEQ applies the NEQ predicate on the "CA_UserName" field.
func CAUserNameNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldCAUserName, v))
}

// CAUserNameIn applies the In predicate on the "CA_UserName" field.
func CAUserNameIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldCAUserName, vs...))
}

// CAUserNameNotIn applies the NotIn predicate on the "CA_UserName" field.
func CAUserNameNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldCAUserName, vs...))
}

// CAUserNameGT applies the GT predicate on the "CA_UserName" field.
func CAUserNameGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldCAUserName, v))
}

// CAUserNameGTE applies the GTE predicate on the "CA_UserName" field.
func CAUserNameGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldCAUserName, v))
}

// CAUserNameLT applies the LT predicate on the "CA_UserName" field.
func CAUserNameLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldCAUserName, v))
}

// CAUserNameLTE applies the LTE predicate on the "CA_UserName" field.
func CAUserNameLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldCAUserName, v))
}

// CAUserNameContains applies the Contains predicate on the "CA_UserName" field.
func CAUserNameContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldCAUserName, v))
}

// CAUserNameHasPrefix applies the HasPrefix predicate on the "CA_UserName" field.
func CAUserNameHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldCAUserName, v))
}

// CAUserNameHasSuffix applies the HasSuffix predicate on the "CA_UserName" field.
func CAUserNameHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldCAUserName, v))
}

// CAUserNameIsNil applies the IsNil predicate on the "CA_UserName" field.
func CAUserNameIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldCAUserName))
}

// CAUserNameNotNil applies the NotNil predicate on the "CA_UserName" field.
func CAUserNameNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldCAUserName))
}

// CAUserNameEqualFold applies the EqualFold predicate on the "CA_UserName" field.
func CAUserNameEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldCAUserName, v))
}

// CAUserNameContainsFold applies the ContainsFold predicate on the "CA_UserName" field.
func CAUserNameContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldCAUserName, v))
}

// CARemarksEQ applies the EQ predicate on the "CA_Remarks" field.
func CARemarksEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldCARemarks, v))
}

// CARemarksNEQ applies the NEQ predicate on the "CA_Remarks" field.
func CARemarksNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldCARemarks, v))
}

// CARemarksIn applies the In predicate on the "CA_Remarks" field.
func CARemarksIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldCARemarks, vs...))
}

// CARemarksNotIn applies the NotIn predicate on the "CA_Remarks" field.
func CARemarksNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldCARemarks, vs...))
}

// CARemarksGT applies the GT predicate on the "CA_Remarks" field.
func CARemarksGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldCARemarks, v))
}

// CARemarksGTE applies the GTE predicate on the "CA_Remarks" field.
func CARemarksGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldCARemarks, v))
}

// CARemarksLT applies the LT predicate on the "CA_Remarks" field.
func CARemarksLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldCARemarks, v))
}

// CARemarksLTE applies the LTE predicate on the "CA_Remarks" field.
func CARemarksLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldCARemarks, v))
}

// CARemarksContains applies the Contains predicate on the "CA_Remarks" field.
func CARemarksContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldCARemarks, v))
}

// CARemarksHasPrefix applies the HasPrefix predicate on the "CA_Remarks" field.
func CARemarksHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldCARemarks, v))
}

// CARemarksHasSuffix applies the HasSuffix predicate on the "CA_Remarks" field.
func CARemarksHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldCARemarks, v))
}

// CARemarksIsNil applies the IsNil predicate on the "CA_Remarks" field.
func CARemarksIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldCARemarks))
}

// CARemarksNotNil applies the NotNil predicate on the "CA_Remarks" field.
func CARemarksNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldCARemarks))
}

// CARemarksEqualFold applies the EqualFold predicate on the "CA_Remarks" field.
func CARemarksEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldCARemarks, v))
}

// CARemarksContainsFold applies the ContainsFold predicate on the "CA_Remarks" field.
func CARemarksContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldCARemarks, v))
}

// NORecommendationsEQ applies the EQ predicate on the "NO_Recommendations" field.
func NORecommendationsEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNORecommendations, v))
}

// NORecommendationsNEQ applies the NEQ predicate on the "NO_Recommendations" field.
func NORecommendationsNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldNORecommendations, v))
}

// NORecommendationsIn applies the In predicate on the "NO_Recommendations" field.
func NORecommendationsIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldNORecommendations, vs...))
}

// NORecommendationsNotIn applies the NotIn predicate on the "NO_Recommendations" field.
func NORecommendationsNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldNORecommendations, vs...))
}

// NORecommendationsGT applies the GT predicate on the "NO_Recommendations" field.
func NORecommendationsGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldNORecommendations, v))
}

// NORecommendationsGTE applies the GTE predicate on the "NO_Recommendations" field.
func NORecommendationsGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldNORecommendations, v))
}

// NORecommendationsLT applies the LT predicate on the "NO_Recommendations" field.
func NORecommendationsLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldNORecommendations, v))
}

// NORecommendationsLTE applies the LTE predicate on the "NO_Recommendations" field.
func NORecommendationsLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldNORecommendations, v))
}

// NORecommendationsContains applies the Contains predicate on the "NO_Recommendations" field.
func NORecommendationsContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldNORecommendations, v))
}

// NORecommendationsHasPrefix applies the HasPrefix predicate on the "NO_Recommendations" field.
func NORecommendationsHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldNORecommendations, v))
}

// NORecommendationsHasSuffix applies the HasSuffix predicate on the "NO_Recommendations" field.
func NORecommendationsHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldNORecommendations, v))
}

// NORecommendationsIsNil applies the IsNil predicate on the "NO_Recommendations" field.
func NORecommendationsIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldNORecommendations))
}

// NORecommendationsNotNil applies the NotNil predicate on the "NO_Recommendations" field.
func NORecommendationsNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldNORecommendations))
}

// NORecommendationsEqualFold applies the EqualFold predicate on the "NO_Recommendations" field.
func NORecommendationsEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldNORecommendations, v))
}

// NORecommendationsContainsFold applies the ContainsFold predicate on the "NO_Recommendations" field.
func NORecommendationsContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldNORecommendations, v))
}

// NOUpdatedAtEQ applies the EQ predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtEQ(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNOUpdatedAt, v))
}

// NOUpdatedAtNEQ applies the NEQ predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtNEQ(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldNOUpdatedAt, v))
}

// NOUpdatedAtIn applies the In predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtIn(vs ...time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldNOUpdatedAt, vs...))
}

// NOUpdatedAtNotIn applies the NotIn predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtNotIn(vs ...time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldNOUpdatedAt, vs...))
}

// NOUpdatedAtGT applies the GT predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtGT(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldNOUpdatedAt, v))
}

// NOUpdatedAtGTE applies the GTE predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtGTE(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldNOUpdatedAt, v))
}

// NOUpdatedAtLT applies the LT predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtLT(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldNOUpdatedAt, v))
}

// NOUpdatedAtLTE applies the LTE predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtLTE(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldNOUpdatedAt, v))
}

// NOUpdatedAtIsNil applies the IsNil predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldNOUpdatedAt))
}

// NOUpdatedAtNotNil applies the NotNil predicate on the "NO_UpdatedAt" field.
func NOUpdatedAtNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldNOUpdatedAt))
}

// NOUserNameEQ applies the EQ predicate on the "NO_UserName" field.
func NOUserNameEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNOUserName, v))
}

// NOUserNameNEQ applies the NEQ predicate on the "NO_UserName" field.
func NOUserNameNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldNOUserName, v))
}

// NOUserNameIn applies the In predicate on the "NO_UserName" field.
func NOUserNameIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldNOUserName, vs...))
}

// NOUserNameNotIn applies the NotIn predicate on the "NO_UserName" field.
func NOUserNameNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldNOUserName, vs...))
}

// NOUserNameGT applies the GT predicate on the "NO_UserName" field.
func NOUserNameGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldNOUserName, v))
}

// NOUserNameGTE applies the GTE predicate on the "NO_UserName" field.
func NOUserNameGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldNOUserName, v))
}

// NOUserNameLT applies the LT predicate on the "NO_UserName" field.
func NOUserNameLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldNOUserName, v))
}

// NOUserNameLTE applies the LTE predicate on the "NO_UserName" field.
func NOUserNameLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldNOUserName, v))
}

// NOUserNameContains applies the Contains predicate on the "NO_UserName" field.
func NOUserNameContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldNOUserName, v))
}

// NOUserNameHasPrefix applies the HasPrefix predicate on the "NO_UserName" field.
func NOUserNameHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldNOUserName, v))
}

// NOUserNameHasSuffix applies the HasSuffix predicate on the "NO_UserName" field.
func NOUserNameHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldNOUserName, v))
}

// NOUserNameIsNil applies the IsNil predicate on the "NO_UserName" field.
func NOUserNameIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldNOUserName))
}

// NOUserNameNotNil applies the NotNil predicate on the "NO_UserName" field.
func NOUserNameNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldNOUserName))
}

// NOUserNameEqualFold applies the EqualFold predicate on the "NO_UserName" field.
func NOUserNameEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldNOUserName, v))
}

// NOUserNameContainsFold applies the ContainsFold predicate on the "NO_UserName" field.
func NOUserNameContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldNOUserName, v))
}

// NORemarksEQ applies the EQ predicate on the "NO_Remarks" field.
func NORemarksEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldNORemarks, v))
}

// NORemarksNEQ applies the NEQ predicate on the "NO_Remarks" field.
func NORemarksNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldNORemarks, v))
}

// NORemarksIn applies the In predicate on the "NO_Remarks" field.
func NORemarksIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldNORemarks, vs...))
}

// NORemarksNotIn applies the NotIn predicate on the "NO_Remarks" field.
func NORemarksNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldNORemarks, vs...))
}

// NORemarksGT applies the GT predicate on the "NO_Remarks" field.
func NORemarksGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldNORemarks, v))
}

// NORemarksGTE applies the GTE predicate on the "NO_Remarks" field.
func NORemarksGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldNORemarks, v))
}

// NORemarksLT applies the LT predicate on the "NO_Remarks" field.
func NORemarksLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldNORemarks, v))
}

// NORemarksLTE applies the LTE predicate on the "NO_Remarks" field.
func NORemarksLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldNORemarks, v))
}

// NORemarksContains applies the Contains predicate on the "NO_Remarks" field.
func NORemarksContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldNORemarks, v))
}

// NORemarksHasPrefix applies the HasPrefix predicate on the "NO_Remarks" field.
func NORemarksHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldNORemarks, v))
}

// NORemarksHasSuffix applies the HasSuffix predicate on the "NO_Remarks" field.
func NORemarksHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldNORemarks, v))
}

// NORemarksIsNil applies the IsNil predicate on the "NO_Remarks" field.
func NORemarksIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldNORemarks))
}

// NORemarksNotNil applies the NotNil predicate on the "NO_Remarks" field.
func NORemarksNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldNORemarks))
}

// NORemarksEqualFold applies the EqualFold predicate on the "NO_Remarks" field.
func NORemarksEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldNORemarks, v))
}

// NORemarksContainsFold applies the ContainsFold predicate on the "NO_Remarks" field.
func NORemarksContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldNORemarks, v))
}

// ApplicationStatusEQ applies the EQ predicate on the "ApplicationStatus" field.
func ApplicationStatusEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldApplicationStatus, v))
}

// ApplicationStatusNEQ applies the NEQ predicate on the "ApplicationStatus" field.
func ApplicationStatusNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldApplicationStatus, v))
}

// ApplicationStatusIn applies the In predicate on the "ApplicationStatus" field.
func ApplicationStatusIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldApplicationStatus, vs...))
}

// ApplicationStatusNotIn applies the NotIn predicate on the "ApplicationStatus" field.
func ApplicationStatusNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldApplicationStatus, vs...))
}

// ApplicationStatusGT applies the GT predicate on the "ApplicationStatus" field.
func ApplicationStatusGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldApplicationStatus, v))
}

// ApplicationStatusGTE applies the GTE predicate on the "ApplicationStatus" field.
func ApplicationStatusGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldApplicationStatus, v))
}

// ApplicationStatusLT applies the LT predicate on the "ApplicationStatus" field.
func ApplicationStatusLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldApplicationStatus, v))
}

// ApplicationStatusLTE applies the LTE predicate on the "ApplicationStatus" field.
func ApplicationStatusLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldApplicationStatus, v))
}

// ApplicationStatusContains applies the Contains predicate on the "ApplicationStatus" field.
func ApplicationStatusContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldApplicationStatus, v))
}

// ApplicationStatusHasPrefix applies the HasPrefix predicate on the "ApplicationStatus" field.
func ApplicationStatusHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldApplicationStatus, v))
}

// ApplicationStatusHasSuffix applies the HasSuffix predicate on the "ApplicationStatus" field.
func ApplicationStatusHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldApplicationStatus, v))
}

// ApplicationStatusIsNil applies the IsNil predicate on the "ApplicationStatus" field.
func ApplicationStatusIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldApplicationStatus))
}

// ApplicationStatusNotNil applies the NotNil predicate on the "ApplicationStatus" field.
func ApplicationStatusNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldApplicationStatus))
}

// ApplicationStatusEqualFold applies the EqualFold predicate on the "ApplicationStatus" field.
func ApplicationStatusEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldApplicationStatus, v))
}

// ApplicationStatusContainsFold applies the ContainsFold predicate on the "ApplicationStatus" field.
func ApplicationStatusContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldApplicationStatus, v))
}

// UpdatedAtEQ applies the EQ predicate on the "UpdatedAt" field.
func UpdatedAtEQ(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "UpdatedAt" field.
func UpdatedAtNEQ(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "UpdatedAt" field.
func UpdatedAtIn(vs ...time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "UpdatedAt" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "UpdatedAt" field.
func UpdatedAtGT(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "UpdatedAt" field.
func UpdatedAtGTE(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "UpdatedAt" field.
func UpdatedAtLT(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "UpdatedAt" field.
func UpdatedAtLTE(v time.Time) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "UpdatedAt" field.
func UpdatedAtIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "UpdatedAt" field.
func UpdatedAtNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldUpdatedAt))
}

// UpdatedByEQ applies the EQ predicate on the "UpdatedBy" field.
func UpdatedByEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "UpdatedBy" field.
func UpdatedByNEQ(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "UpdatedBy" field.
func UpdatedByIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "UpdatedBy" field.
func UpdatedByNotIn(vs ...string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "UpdatedBy" field.
func UpdatedByGT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "UpdatedBy" field.
func UpdatedByGTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "UpdatedBy" field.
func UpdatedByLT(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "UpdatedBy" field.
func UpdatedByLTE(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "UpdatedBy" field.
func UpdatedByContains(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "UpdatedBy" field.
func UpdatedByHasPrefix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "UpdatedBy" field.
func UpdatedByHasSuffix(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "UpdatedBy" field.
func UpdatedByIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "UpdatedBy" field.
func UpdatedByNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "UpdatedBy" field.
func UpdatedByEqualFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "UpdatedBy" field.
func UpdatedByContainsFold(v string) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// GenerateHallTicketFlagEQ applies the EQ predicate on the "GenerateHallTicketFlag" field.
func GenerateHallTicketFlagEQ(v bool) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldEQ(FieldGenerateHallTicketFlag, v))
}

// GenerateHallTicketFlagNEQ applies the NEQ predicate on the "GenerateHallTicketFlag" field.
func GenerateHallTicketFlagNEQ(v bool) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNEQ(FieldGenerateHallTicketFlag, v))
}

// GenerateHallTicketFlagIsNil applies the IsNil predicate on the "GenerateHallTicketFlag" field.
func GenerateHallTicketFlagIsNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldIsNull(FieldGenerateHallTicketFlag))
}

// GenerateHallTicketFlagNotNil applies the NotNil predicate on the "GenerateHallTicketFlag" field.
func GenerateHallTicketFlagNotNil() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(sql.FieldNotNull(FieldGenerateHallTicketFlag))
}

// HasApplnRef applies the HasEdge predicate on the "ApplnRef" edge.
func HasApplnRef() predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ApplnRefTable, ApplnRefColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasApplnRefWith applies the HasEdge predicate on the "ApplnRef" edge with a given conditions (other predicates).
func HasApplnRefWith(preds ...predicate.Exam_Application_MTSPMMG) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(func(s *sql.Selector) {
		step := newApplnRefStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.RecommendationsMTSPMMGApplications) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.RecommendationsMTSPMMGApplications) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.RecommendationsMTSPMMGApplications) predicate.RecommendationsMTSPMMGApplications {
	return predicate.RecommendationsMTSPMMGApplications(func(s *sql.Selector) {
		p(s.Not())
	})
}
