// Code generated by ent, DO NOT EDIT.

package version

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the version type in the database.
	Label = "version"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUiVersion holds the string denoting the uiversion field in the database.
	FieldUiVersion = "ui_version"
	// FieldApiVersion holds the string denoting the apiversion field in the database.
	FieldApiVersion = "api_version"
	// FieldApiType holds the string denoting the apitype field in the database.
	FieldApiType = "api_type"
	// Table holds the table name of the version in the database.
	Table = "Version"
)

// Columns holds all SQL columns for version fields.
var Columns = []string{
	FieldID,
	FieldUiVersion,
	FieldApiVersion,
	FieldApiType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Version queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUiVersion orders the results by the UiVersion field.
func ByUiVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUiVersion, opts...).ToFunc()
}

// ByApiVersion orders the results by the ApiVersion field.
func ByApiVersion(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldApiVersion, opts...).ToFunc()
}

// ByApiType orders the results by the ApiType field.
func ByApiType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldApiType, opts...).ToFunc()
}
