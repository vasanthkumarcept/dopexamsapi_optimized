// Code generated by ent, DO NOT EDIT.

package facilitymasters

import (
	"recruit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldID, id))
}

// FacilityID applies equality check predicate on the "FacilityID" field. It's identical to FacilityIDEQ.
func FacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldFacilityID, v))
}

// UUID applies equality check predicate on the "UUID" field. It's identical to UUIDEQ.
func UUID(v int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldUUID, v))
}

// FacilityType applies equality check predicate on the "FacilityType" field. It's identical to FacilityTypeEQ.
func FacilityType(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldFacilityType, v))
}

// FacilityIDDescription applies equality check predicate on the "FacilityIDDescription" field. It's identical to FacilityIDDescriptionEQ.
func FacilityIDDescription(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldFacilityIDDescription, v))
}

// ReportingOfficeFacilityID applies equality check predicate on the "ReportingOfficeFacilityID" field. It's identical to ReportingOfficeFacilityIDEQ.
func ReportingOfficeFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityName applies equality check predicate on the "ReportingOfficeFacilityName" field. It's identical to ReportingOfficeFacilityNameEQ.
func ReportingOfficeFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldReportingOfficeFacilityName, v))
}

// HOFacilityID applies equality check predicate on the "HOFacilityID" field. It's identical to HOFacilityIDEQ.
func HOFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldHOFacilityID, v))
}

// HOFacilityName applies equality check predicate on the "HOFacilityName" field. It's identical to HOFacilityNameEQ.
func HOFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldHOFacilityName, v))
}

// SubDivisionFacilityID applies equality check predicate on the "SubDivisionFacilityID" field. It's identical to SubDivisionFacilityIDEQ.
func SubDivisionFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityName applies equality check predicate on the "SubDivisionFacilityName" field. It's identical to SubDivisionFacilityNameEQ.
func SubDivisionFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldSubDivisionFacilityName, v))
}

// DivisionFacilityID applies equality check predicate on the "DivisionFacilityID" field. It's identical to DivisionFacilityIDEQ.
func DivisionFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldDivisionFacilityID, v))
}

// DivisionFacilityName applies equality check predicate on the "DivisionFacilityName" field. It's identical to DivisionFacilityNameEQ.
func DivisionFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldDivisionFacilityName, v))
}

// RegionFacilityID applies equality check predicate on the "RegionFacilityID" field. It's identical to RegionFacilityIDEQ.
func RegionFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldRegionFacilityID, v))
}

// RegionFacilityName applies equality check predicate on the "RegionFacilityName" field. It's identical to RegionFacilityNameEQ.
func RegionFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldRegionFacilityName, v))
}

// CircleFacilityID applies equality check predicate on the "CircleFacilityID" field. It's identical to CircleFacilityIDEQ.
func CircleFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCircleFacilityID, v))
}

// CircleFacilityName applies equality check predicate on the "CircleFacilityName" field. It's identical to CircleFacilityNameEQ.
func CircleFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCircleFacilityName, v))
}

// Pincode applies equality check predicate on the "Pincode" field. It's identical to PincodeEQ.
func Pincode(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldPincode, v))
}

// ControllingAuthorityFacilityID applies equality check predicate on the "ControllingAuthorityFacilityID" field. It's identical to ControllingAuthorityFacilityIDEQ.
func ControllingAuthorityFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityName applies equality check predicate on the "ControllingAuthorityFacilityName" field. It's identical to ControllingAuthorityFacilityNameEQ.
func ControllingAuthorityFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldControllingAuthorityFacilityName, v))
}

// NodalOfficerFacilityID applies equality check predicate on the "NodalOfficerFacilityID" field. It's identical to NodalOfficerFacilityIDEQ.
func NodalOfficerFacilityID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityName applies equality check predicate on the "NodalOfficerFacilityName" field. It's identical to NodalOfficerFacilityNameEQ.
func NodalOfficerFacilityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldNodalOfficerFacilityName, v))
}

// CityName applies equality check predicate on the "CityName" field. It's identical to CityNameEQ.
func CityName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCityName, v))
}

// HallCircleCode applies equality check predicate on the "HallCircleCode" field. It's identical to HallCircleCodeEQ.
func HallCircleCode(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldHallCircleCode, v))
}

// DeliveryNonDeliveryOffice applies equality check predicate on the "DeliveryNonDeliveryOffice" field. It's identical to DeliveryNonDeliveryOfficeEQ.
func DeliveryNonDeliveryOffice(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldDeliveryNonDeliveryOffice, v))
}

// CreatedID applies equality check predicate on the "CreatedID" field. It's identical to CreatedIDEQ.
func CreatedID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedID, v))
}

// CreatedBy applies equality check predicate on the "CreatedBy" field. It's identical to CreatedByEQ.
func CreatedBy(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByName applies equality check predicate on the "CreatedByName" field. It's identical to CreatedByNameEQ.
func CreatedByName(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedByName, v))
}

// CreatedByEmpID applies equality check predicate on the "CreatedByEmpID" field. It's identical to CreatedByEmpIDEQ.
func CreatedByEmpID(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedByEmpID, v))
}

// CircleCode applies equality check predicate on the "CircleCode" field. It's identical to CircleCodeEQ.
func CircleCode(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCircleCode, v))
}

// Status applies equality check predicate on the "Status" field. It's identical to StatusEQ.
func Status(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldStatus, v))
}

// EventTime applies equality check predicate on the "EventTime" field. It's identical to EventTimeEQ.
func EventTime(v time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldEventTime, v))
}

// FacilityIDEQ applies the EQ predicate on the "FacilityID" field.
func FacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldFacilityID, v))
}

// FacilityIDNEQ applies the NEQ predicate on the "FacilityID" field.
func FacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldFacilityID, v))
}

// FacilityIDIn applies the In predicate on the "FacilityID" field.
func FacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldFacilityID, vs...))
}

// FacilityIDNotIn applies the NotIn predicate on the "FacilityID" field.
func FacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldFacilityID, vs...))
}

// FacilityIDGT applies the GT predicate on the "FacilityID" field.
func FacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldFacilityID, v))
}

// FacilityIDGTE applies the GTE predicate on the "FacilityID" field.
func FacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldFacilityID, v))
}

// FacilityIDLT applies the LT predicate on the "FacilityID" field.
func FacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldFacilityID, v))
}

// FacilityIDLTE applies the LTE predicate on the "FacilityID" field.
func FacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldFacilityID, v))
}

// FacilityIDContains applies the Contains predicate on the "FacilityID" field.
func FacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldFacilityID, v))
}

// FacilityIDHasPrefix applies the HasPrefix predicate on the "FacilityID" field.
func FacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldFacilityID, v))
}

// FacilityIDHasSuffix applies the HasSuffix predicate on the "FacilityID" field.
func FacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldFacilityID, v))
}

// FacilityIDIsNil applies the IsNil predicate on the "FacilityID" field.
func FacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldFacilityID))
}

// FacilityIDNotNil applies the NotNil predicate on the "FacilityID" field.
func FacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldFacilityID))
}

// FacilityIDEqualFold applies the EqualFold predicate on the "FacilityID" field.
func FacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldFacilityID, v))
}

// FacilityIDContainsFold applies the ContainsFold predicate on the "FacilityID" field.
func FacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldFacilityID, v))
}

// UUIDEQ applies the EQ predicate on the "UUID" field.
func UUIDEQ(v int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldUUID, v))
}

// UUIDNEQ applies the NEQ predicate on the "UUID" field.
func UUIDNEQ(v int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldUUID, v))
}

// UUIDIn applies the In predicate on the "UUID" field.
func UUIDIn(vs ...int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldUUID, vs...))
}

// UUIDNotIn applies the NotIn predicate on the "UUID" field.
func UUIDNotIn(vs ...int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldUUID, vs...))
}

// UUIDGT applies the GT predicate on the "UUID" field.
func UUIDGT(v int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldUUID, v))
}

// UUIDGTE applies the GTE predicate on the "UUID" field.
func UUIDGTE(v int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldUUID, v))
}

// UUIDLT applies the LT predicate on the "UUID" field.
func UUIDLT(v int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldUUID, v))
}

// UUIDLTE applies the LTE predicate on the "UUID" field.
func UUIDLTE(v int64) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldUUID, v))
}

// UUIDIsNil applies the IsNil predicate on the "UUID" field.
func UUIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldUUID))
}

// UUIDNotNil applies the NotNil predicate on the "UUID" field.
func UUIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldUUID))
}

// FacilityTypeEQ applies the EQ predicate on the "FacilityType" field.
func FacilityTypeEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldFacilityType, v))
}

// FacilityTypeNEQ applies the NEQ predicate on the "FacilityType" field.
func FacilityTypeNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldFacilityType, v))
}

// FacilityTypeIn applies the In predicate on the "FacilityType" field.
func FacilityTypeIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldFacilityType, vs...))
}

// FacilityTypeNotIn applies the NotIn predicate on the "FacilityType" field.
func FacilityTypeNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldFacilityType, vs...))
}

// FacilityTypeGT applies the GT predicate on the "FacilityType" field.
func FacilityTypeGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldFacilityType, v))
}

// FacilityTypeGTE applies the GTE predicate on the "FacilityType" field.
func FacilityTypeGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldFacilityType, v))
}

// FacilityTypeLT applies the LT predicate on the "FacilityType" field.
func FacilityTypeLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldFacilityType, v))
}

// FacilityTypeLTE applies the LTE predicate on the "FacilityType" field.
func FacilityTypeLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldFacilityType, v))
}

// FacilityTypeContains applies the Contains predicate on the "FacilityType" field.
func FacilityTypeContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldFacilityType, v))
}

// FacilityTypeHasPrefix applies the HasPrefix predicate on the "FacilityType" field.
func FacilityTypeHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldFacilityType, v))
}

// FacilityTypeHasSuffix applies the HasSuffix predicate on the "FacilityType" field.
func FacilityTypeHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldFacilityType, v))
}

// FacilityTypeIsNil applies the IsNil predicate on the "FacilityType" field.
func FacilityTypeIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldFacilityType))
}

// FacilityTypeNotNil applies the NotNil predicate on the "FacilityType" field.
func FacilityTypeNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldFacilityType))
}

// FacilityTypeEqualFold applies the EqualFold predicate on the "FacilityType" field.
func FacilityTypeEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldFacilityType, v))
}

// FacilityTypeContainsFold applies the ContainsFold predicate on the "FacilityType" field.
func FacilityTypeContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldFacilityType, v))
}

// FacilityIDDescriptionEQ applies the EQ predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionNEQ applies the NEQ predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionIn applies the In predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldFacilityIDDescription, vs...))
}

// FacilityIDDescriptionNotIn applies the NotIn predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldFacilityIDDescription, vs...))
}

// FacilityIDDescriptionGT applies the GT predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionGTE applies the GTE predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionLT applies the LT predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionLTE applies the LTE predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionContains applies the Contains predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionHasPrefix applies the HasPrefix predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionHasSuffix applies the HasSuffix predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionIsNil applies the IsNil predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldFacilityIDDescription))
}

// FacilityIDDescriptionNotNil applies the NotNil predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldFacilityIDDescription))
}

// FacilityIDDescriptionEqualFold applies the EqualFold predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldFacilityIDDescription, v))
}

// FacilityIDDescriptionContainsFold applies the ContainsFold predicate on the "FacilityIDDescription" field.
func FacilityIDDescriptionContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldFacilityIDDescription, v))
}

// ReportingOfficeFacilityIDEQ applies the EQ predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDNEQ applies the NEQ predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDIn applies the In predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldReportingOfficeFacilityID, vs...))
}

// ReportingOfficeFacilityIDNotIn applies the NotIn predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldReportingOfficeFacilityID, vs...))
}

// ReportingOfficeFacilityIDGT applies the GT predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDGTE applies the GTE predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDLT applies the LT predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDLTE applies the LTE predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDContains applies the Contains predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDHasPrefix applies the HasPrefix predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDHasSuffix applies the HasSuffix predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDIsNil applies the IsNil predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldReportingOfficeFacilityID))
}

// ReportingOfficeFacilityIDNotNil applies the NotNil predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldReportingOfficeFacilityID))
}

// ReportingOfficeFacilityIDEqualFold applies the EqualFold predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityIDContainsFold applies the ContainsFold predicate on the "ReportingOfficeFacilityID" field.
func ReportingOfficeFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldReportingOfficeFacilityID, v))
}

// ReportingOfficeFacilityNameEQ applies the EQ predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameNEQ applies the NEQ predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameIn applies the In predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldReportingOfficeFacilityName, vs...))
}

// ReportingOfficeFacilityNameNotIn applies the NotIn predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldReportingOfficeFacilityName, vs...))
}

// ReportingOfficeFacilityNameGT applies the GT predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameGTE applies the GTE predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameLT applies the LT predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameLTE applies the LTE predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameContains applies the Contains predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameHasPrefix applies the HasPrefix predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameHasSuffix applies the HasSuffix predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameIsNil applies the IsNil predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldReportingOfficeFacilityName))
}

// ReportingOfficeFacilityNameNotNil applies the NotNil predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldReportingOfficeFacilityName))
}

// ReportingOfficeFacilityNameEqualFold applies the EqualFold predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldReportingOfficeFacilityName, v))
}

// ReportingOfficeFacilityNameContainsFold applies the ContainsFold predicate on the "ReportingOfficeFacilityName" field.
func ReportingOfficeFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldReportingOfficeFacilityName, v))
}

// HOFacilityIDEQ applies the EQ predicate on the "HOFacilityID" field.
func HOFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldHOFacilityID, v))
}

// HOFacilityIDNEQ applies the NEQ predicate on the "HOFacilityID" field.
func HOFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldHOFacilityID, v))
}

// HOFacilityIDIn applies the In predicate on the "HOFacilityID" field.
func HOFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldHOFacilityID, vs...))
}

// HOFacilityIDNotIn applies the NotIn predicate on the "HOFacilityID" field.
func HOFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldHOFacilityID, vs...))
}

// HOFacilityIDGT applies the GT predicate on the "HOFacilityID" field.
func HOFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldHOFacilityID, v))
}

// HOFacilityIDGTE applies the GTE predicate on the "HOFacilityID" field.
func HOFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldHOFacilityID, v))
}

// HOFacilityIDLT applies the LT predicate on the "HOFacilityID" field.
func HOFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldHOFacilityID, v))
}

// HOFacilityIDLTE applies the LTE predicate on the "HOFacilityID" field.
func HOFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldHOFacilityID, v))
}

// HOFacilityIDContains applies the Contains predicate on the "HOFacilityID" field.
func HOFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldHOFacilityID, v))
}

// HOFacilityIDHasPrefix applies the HasPrefix predicate on the "HOFacilityID" field.
func HOFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldHOFacilityID, v))
}

// HOFacilityIDHasSuffix applies the HasSuffix predicate on the "HOFacilityID" field.
func HOFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldHOFacilityID, v))
}

// HOFacilityIDIsNil applies the IsNil predicate on the "HOFacilityID" field.
func HOFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldHOFacilityID))
}

// HOFacilityIDNotNil applies the NotNil predicate on the "HOFacilityID" field.
func HOFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldHOFacilityID))
}

// HOFacilityIDEqualFold applies the EqualFold predicate on the "HOFacilityID" field.
func HOFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldHOFacilityID, v))
}

// HOFacilityIDContainsFold applies the ContainsFold predicate on the "HOFacilityID" field.
func HOFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldHOFacilityID, v))
}

// HOFacilityNameEQ applies the EQ predicate on the "HOFacilityName" field.
func HOFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldHOFacilityName, v))
}

// HOFacilityNameNEQ applies the NEQ predicate on the "HOFacilityName" field.
func HOFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldHOFacilityName, v))
}

// HOFacilityNameIn applies the In predicate on the "HOFacilityName" field.
func HOFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldHOFacilityName, vs...))
}

// HOFacilityNameNotIn applies the NotIn predicate on the "HOFacilityName" field.
func HOFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldHOFacilityName, vs...))
}

// HOFacilityNameGT applies the GT predicate on the "HOFacilityName" field.
func HOFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldHOFacilityName, v))
}

// HOFacilityNameGTE applies the GTE predicate on the "HOFacilityName" field.
func HOFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldHOFacilityName, v))
}

// HOFacilityNameLT applies the LT predicate on the "HOFacilityName" field.
func HOFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldHOFacilityName, v))
}

// HOFacilityNameLTE applies the LTE predicate on the "HOFacilityName" field.
func HOFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldHOFacilityName, v))
}

// HOFacilityNameContains applies the Contains predicate on the "HOFacilityName" field.
func HOFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldHOFacilityName, v))
}

// HOFacilityNameHasPrefix applies the HasPrefix predicate on the "HOFacilityName" field.
func HOFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldHOFacilityName, v))
}

// HOFacilityNameHasSuffix applies the HasSuffix predicate on the "HOFacilityName" field.
func HOFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldHOFacilityName, v))
}

// HOFacilityNameIsNil applies the IsNil predicate on the "HOFacilityName" field.
func HOFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldHOFacilityName))
}

// HOFacilityNameNotNil applies the NotNil predicate on the "HOFacilityName" field.
func HOFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldHOFacilityName))
}

// HOFacilityNameEqualFold applies the EqualFold predicate on the "HOFacilityName" field.
func HOFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldHOFacilityName, v))
}

// HOFacilityNameContainsFold applies the ContainsFold predicate on the "HOFacilityName" field.
func HOFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldHOFacilityName, v))
}

// SubDivisionFacilityIDEQ applies the EQ predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDNEQ applies the NEQ predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDIn applies the In predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldSubDivisionFacilityID, vs...))
}

// SubDivisionFacilityIDNotIn applies the NotIn predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldSubDivisionFacilityID, vs...))
}

// SubDivisionFacilityIDGT applies the GT predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDGTE applies the GTE predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDLT applies the LT predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDLTE applies the LTE predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDContains applies the Contains predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDHasPrefix applies the HasPrefix predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDHasSuffix applies the HasSuffix predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDIsNil applies the IsNil predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldSubDivisionFacilityID))
}

// SubDivisionFacilityIDNotNil applies the NotNil predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldSubDivisionFacilityID))
}

// SubDivisionFacilityIDEqualFold applies the EqualFold predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityIDContainsFold applies the ContainsFold predicate on the "SubDivisionFacilityID" field.
func SubDivisionFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldSubDivisionFacilityID, v))
}

// SubDivisionFacilityNameEQ applies the EQ predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameNEQ applies the NEQ predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameIn applies the In predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldSubDivisionFacilityName, vs...))
}

// SubDivisionFacilityNameNotIn applies the NotIn predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldSubDivisionFacilityName, vs...))
}

// SubDivisionFacilityNameGT applies the GT predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameGTE applies the GTE predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameLT applies the LT predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameLTE applies the LTE predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameContains applies the Contains predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameHasPrefix applies the HasPrefix predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameHasSuffix applies the HasSuffix predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameIsNil applies the IsNil predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldSubDivisionFacilityName))
}

// SubDivisionFacilityNameNotNil applies the NotNil predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldSubDivisionFacilityName))
}

// SubDivisionFacilityNameEqualFold applies the EqualFold predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldSubDivisionFacilityName, v))
}

// SubDivisionFacilityNameContainsFold applies the ContainsFold predicate on the "SubDivisionFacilityName" field.
func SubDivisionFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldSubDivisionFacilityName, v))
}

// DivisionFacilityIDEQ applies the EQ predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDNEQ applies the NEQ predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDIn applies the In predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldDivisionFacilityID, vs...))
}

// DivisionFacilityIDNotIn applies the NotIn predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldDivisionFacilityID, vs...))
}

// DivisionFacilityIDGT applies the GT predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDGTE applies the GTE predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDLT applies the LT predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDLTE applies the LTE predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDContains applies the Contains predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDHasPrefix applies the HasPrefix predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDHasSuffix applies the HasSuffix predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDIsNil applies the IsNil predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldDivisionFacilityID))
}

// DivisionFacilityIDNotNil applies the NotNil predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldDivisionFacilityID))
}

// DivisionFacilityIDEqualFold applies the EqualFold predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldDivisionFacilityID, v))
}

// DivisionFacilityIDContainsFold applies the ContainsFold predicate on the "DivisionFacilityID" field.
func DivisionFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldDivisionFacilityID, v))
}

// DivisionFacilityNameEQ applies the EQ predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameNEQ applies the NEQ predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameIn applies the In predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldDivisionFacilityName, vs...))
}

// DivisionFacilityNameNotIn applies the NotIn predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldDivisionFacilityName, vs...))
}

// DivisionFacilityNameGT applies the GT predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameGTE applies the GTE predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameLT applies the LT predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameLTE applies the LTE predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameContains applies the Contains predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameHasPrefix applies the HasPrefix predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameHasSuffix applies the HasSuffix predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameIsNil applies the IsNil predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldDivisionFacilityName))
}

// DivisionFacilityNameNotNil applies the NotNil predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldDivisionFacilityName))
}

// DivisionFacilityNameEqualFold applies the EqualFold predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldDivisionFacilityName, v))
}

// DivisionFacilityNameContainsFold applies the ContainsFold predicate on the "DivisionFacilityName" field.
func DivisionFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldDivisionFacilityName, v))
}

// RegionFacilityIDEQ applies the EQ predicate on the "RegionFacilityID" field.
func RegionFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldRegionFacilityID, v))
}

// RegionFacilityIDNEQ applies the NEQ predicate on the "RegionFacilityID" field.
func RegionFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldRegionFacilityID, v))
}

// RegionFacilityIDIn applies the In predicate on the "RegionFacilityID" field.
func RegionFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldRegionFacilityID, vs...))
}

// RegionFacilityIDNotIn applies the NotIn predicate on the "RegionFacilityID" field.
func RegionFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldRegionFacilityID, vs...))
}

// RegionFacilityIDGT applies the GT predicate on the "RegionFacilityID" field.
func RegionFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldRegionFacilityID, v))
}

// RegionFacilityIDGTE applies the GTE predicate on the "RegionFacilityID" field.
func RegionFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldRegionFacilityID, v))
}

// RegionFacilityIDLT applies the LT predicate on the "RegionFacilityID" field.
func RegionFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldRegionFacilityID, v))
}

// RegionFacilityIDLTE applies the LTE predicate on the "RegionFacilityID" field.
func RegionFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldRegionFacilityID, v))
}

// RegionFacilityIDContains applies the Contains predicate on the "RegionFacilityID" field.
func RegionFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldRegionFacilityID, v))
}

// RegionFacilityIDHasPrefix applies the HasPrefix predicate on the "RegionFacilityID" field.
func RegionFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldRegionFacilityID, v))
}

// RegionFacilityIDHasSuffix applies the HasSuffix predicate on the "RegionFacilityID" field.
func RegionFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldRegionFacilityID, v))
}

// RegionFacilityIDIsNil applies the IsNil predicate on the "RegionFacilityID" field.
func RegionFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldRegionFacilityID))
}

// RegionFacilityIDNotNil applies the NotNil predicate on the "RegionFacilityID" field.
func RegionFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldRegionFacilityID))
}

// RegionFacilityIDEqualFold applies the EqualFold predicate on the "RegionFacilityID" field.
func RegionFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldRegionFacilityID, v))
}

// RegionFacilityIDContainsFold applies the ContainsFold predicate on the "RegionFacilityID" field.
func RegionFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldRegionFacilityID, v))
}

// RegionFacilityNameEQ applies the EQ predicate on the "RegionFacilityName" field.
func RegionFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldRegionFacilityName, v))
}

// RegionFacilityNameNEQ applies the NEQ predicate on the "RegionFacilityName" field.
func RegionFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldRegionFacilityName, v))
}

// RegionFacilityNameIn applies the In predicate on the "RegionFacilityName" field.
func RegionFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldRegionFacilityName, vs...))
}

// RegionFacilityNameNotIn applies the NotIn predicate on the "RegionFacilityName" field.
func RegionFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldRegionFacilityName, vs...))
}

// RegionFacilityNameGT applies the GT predicate on the "RegionFacilityName" field.
func RegionFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldRegionFacilityName, v))
}

// RegionFacilityNameGTE applies the GTE predicate on the "RegionFacilityName" field.
func RegionFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldRegionFacilityName, v))
}

// RegionFacilityNameLT applies the LT predicate on the "RegionFacilityName" field.
func RegionFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldRegionFacilityName, v))
}

// RegionFacilityNameLTE applies the LTE predicate on the "RegionFacilityName" field.
func RegionFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldRegionFacilityName, v))
}

// RegionFacilityNameContains applies the Contains predicate on the "RegionFacilityName" field.
func RegionFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldRegionFacilityName, v))
}

// RegionFacilityNameHasPrefix applies the HasPrefix predicate on the "RegionFacilityName" field.
func RegionFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldRegionFacilityName, v))
}

// RegionFacilityNameHasSuffix applies the HasSuffix predicate on the "RegionFacilityName" field.
func RegionFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldRegionFacilityName, v))
}

// RegionFacilityNameIsNil applies the IsNil predicate on the "RegionFacilityName" field.
func RegionFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldRegionFacilityName))
}

// RegionFacilityNameNotNil applies the NotNil predicate on the "RegionFacilityName" field.
func RegionFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldRegionFacilityName))
}

// RegionFacilityNameEqualFold applies the EqualFold predicate on the "RegionFacilityName" field.
func RegionFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldRegionFacilityName, v))
}

// RegionFacilityNameContainsFold applies the ContainsFold predicate on the "RegionFacilityName" field.
func RegionFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldRegionFacilityName, v))
}

// CircleFacilityIDEQ applies the EQ predicate on the "CircleFacilityID" field.
func CircleFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCircleFacilityID, v))
}

// CircleFacilityIDNEQ applies the NEQ predicate on the "CircleFacilityID" field.
func CircleFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCircleFacilityID, v))
}

// CircleFacilityIDIn applies the In predicate on the "CircleFacilityID" field.
func CircleFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCircleFacilityID, vs...))
}

// CircleFacilityIDNotIn applies the NotIn predicate on the "CircleFacilityID" field.
func CircleFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCircleFacilityID, vs...))
}

// CircleFacilityIDGT applies the GT predicate on the "CircleFacilityID" field.
func CircleFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCircleFacilityID, v))
}

// CircleFacilityIDGTE applies the GTE predicate on the "CircleFacilityID" field.
func CircleFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCircleFacilityID, v))
}

// CircleFacilityIDLT applies the LT predicate on the "CircleFacilityID" field.
func CircleFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCircleFacilityID, v))
}

// CircleFacilityIDLTE applies the LTE predicate on the "CircleFacilityID" field.
func CircleFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCircleFacilityID, v))
}

// CircleFacilityIDContains applies the Contains predicate on the "CircleFacilityID" field.
func CircleFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCircleFacilityID, v))
}

// CircleFacilityIDHasPrefix applies the HasPrefix predicate on the "CircleFacilityID" field.
func CircleFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCircleFacilityID, v))
}

// CircleFacilityIDHasSuffix applies the HasSuffix predicate on the "CircleFacilityID" field.
func CircleFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCircleFacilityID, v))
}

// CircleFacilityIDIsNil applies the IsNil predicate on the "CircleFacilityID" field.
func CircleFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCircleFacilityID))
}

// CircleFacilityIDNotNil applies the NotNil predicate on the "CircleFacilityID" field.
func CircleFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCircleFacilityID))
}

// CircleFacilityIDEqualFold applies the EqualFold predicate on the "CircleFacilityID" field.
func CircleFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCircleFacilityID, v))
}

// CircleFacilityIDContainsFold applies the ContainsFold predicate on the "CircleFacilityID" field.
func CircleFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCircleFacilityID, v))
}

// CircleFacilityNameEQ applies the EQ predicate on the "CircleFacilityName" field.
func CircleFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCircleFacilityName, v))
}

// CircleFacilityNameNEQ applies the NEQ predicate on the "CircleFacilityName" field.
func CircleFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCircleFacilityName, v))
}

// CircleFacilityNameIn applies the In predicate on the "CircleFacilityName" field.
func CircleFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCircleFacilityName, vs...))
}

// CircleFacilityNameNotIn applies the NotIn predicate on the "CircleFacilityName" field.
func CircleFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCircleFacilityName, vs...))
}

// CircleFacilityNameGT applies the GT predicate on the "CircleFacilityName" field.
func CircleFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCircleFacilityName, v))
}

// CircleFacilityNameGTE applies the GTE predicate on the "CircleFacilityName" field.
func CircleFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCircleFacilityName, v))
}

// CircleFacilityNameLT applies the LT predicate on the "CircleFacilityName" field.
func CircleFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCircleFacilityName, v))
}

// CircleFacilityNameLTE applies the LTE predicate on the "CircleFacilityName" field.
func CircleFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCircleFacilityName, v))
}

// CircleFacilityNameContains applies the Contains predicate on the "CircleFacilityName" field.
func CircleFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCircleFacilityName, v))
}

// CircleFacilityNameHasPrefix applies the HasPrefix predicate on the "CircleFacilityName" field.
func CircleFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCircleFacilityName, v))
}

// CircleFacilityNameHasSuffix applies the HasSuffix predicate on the "CircleFacilityName" field.
func CircleFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCircleFacilityName, v))
}

// CircleFacilityNameIsNil applies the IsNil predicate on the "CircleFacilityName" field.
func CircleFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCircleFacilityName))
}

// CircleFacilityNameNotNil applies the NotNil predicate on the "CircleFacilityName" field.
func CircleFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCircleFacilityName))
}

// CircleFacilityNameEqualFold applies the EqualFold predicate on the "CircleFacilityName" field.
func CircleFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCircleFacilityName, v))
}

// CircleFacilityNameContainsFold applies the ContainsFold predicate on the "CircleFacilityName" field.
func CircleFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCircleFacilityName, v))
}

// PincodeEQ applies the EQ predicate on the "Pincode" field.
func PincodeEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldPincode, v))
}

// PincodeNEQ applies the NEQ predicate on the "Pincode" field.
func PincodeNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldPincode, v))
}

// PincodeIn applies the In predicate on the "Pincode" field.
func PincodeIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldPincode, vs...))
}

// PincodeNotIn applies the NotIn predicate on the "Pincode" field.
func PincodeNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldPincode, vs...))
}

// PincodeGT applies the GT predicate on the "Pincode" field.
func PincodeGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldPincode, v))
}

// PincodeGTE applies the GTE predicate on the "Pincode" field.
func PincodeGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldPincode, v))
}

// PincodeLT applies the LT predicate on the "Pincode" field.
func PincodeLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldPincode, v))
}

// PincodeLTE applies the LTE predicate on the "Pincode" field.
func PincodeLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldPincode, v))
}

// PincodeContains applies the Contains predicate on the "Pincode" field.
func PincodeContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldPincode, v))
}

// PincodeHasPrefix applies the HasPrefix predicate on the "Pincode" field.
func PincodeHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldPincode, v))
}

// PincodeHasSuffix applies the HasSuffix predicate on the "Pincode" field.
func PincodeHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldPincode, v))
}

// PincodeIsNil applies the IsNil predicate on the "Pincode" field.
func PincodeIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldPincode))
}

// PincodeNotNil applies the NotNil predicate on the "Pincode" field.
func PincodeNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldPincode))
}

// PincodeEqualFold applies the EqualFold predicate on the "Pincode" field.
func PincodeEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldPincode, v))
}

// PincodeContainsFold applies the ContainsFold predicate on the "Pincode" field.
func PincodeContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldPincode, v))
}

// ControllingAuthorityFacilityIDEQ applies the EQ predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDNEQ applies the NEQ predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDIn applies the In predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldControllingAuthorityFacilityID, vs...))
}

// ControllingAuthorityFacilityIDNotIn applies the NotIn predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldControllingAuthorityFacilityID, vs...))
}

// ControllingAuthorityFacilityIDGT applies the GT predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDGTE applies the GTE predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDLT applies the LT predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDLTE applies the LTE predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDContains applies the Contains predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDHasPrefix applies the HasPrefix predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDHasSuffix applies the HasSuffix predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDIsNil applies the IsNil predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldControllingAuthorityFacilityID))
}

// ControllingAuthorityFacilityIDNotNil applies the NotNil predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldControllingAuthorityFacilityID))
}

// ControllingAuthorityFacilityIDEqualFold applies the EqualFold predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityIDContainsFold applies the ContainsFold predicate on the "ControllingAuthorityFacilityID" field.
func ControllingAuthorityFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldControllingAuthorityFacilityID, v))
}

// ControllingAuthorityFacilityNameEQ applies the EQ predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameNEQ applies the NEQ predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameIn applies the In predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldControllingAuthorityFacilityName, vs...))
}

// ControllingAuthorityFacilityNameNotIn applies the NotIn predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldControllingAuthorityFacilityName, vs...))
}

// ControllingAuthorityFacilityNameGT applies the GT predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameGTE applies the GTE predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameLT applies the LT predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameLTE applies the LTE predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameContains applies the Contains predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameHasPrefix applies the HasPrefix predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameHasSuffix applies the HasSuffix predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameIsNil applies the IsNil predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldControllingAuthorityFacilityName))
}

// ControllingAuthorityFacilityNameNotNil applies the NotNil predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldControllingAuthorityFacilityName))
}

// ControllingAuthorityFacilityNameEqualFold applies the EqualFold predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldControllingAuthorityFacilityName, v))
}

// ControllingAuthorityFacilityNameContainsFold applies the ContainsFold predicate on the "ControllingAuthorityFacilityName" field.
func ControllingAuthorityFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldControllingAuthorityFacilityName, v))
}

// NodalOfficerFacilityIDEQ applies the EQ predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDNEQ applies the NEQ predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDIn applies the In predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldNodalOfficerFacilityID, vs...))
}

// NodalOfficerFacilityIDNotIn applies the NotIn predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldNodalOfficerFacilityID, vs...))
}

// NodalOfficerFacilityIDGT applies the GT predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDGTE applies the GTE predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDLT applies the LT predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDLTE applies the LTE predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDContains applies the Contains predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDHasPrefix applies the HasPrefix predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDHasSuffix applies the HasSuffix predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDIsNil applies the IsNil predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldNodalOfficerFacilityID))
}

// NodalOfficerFacilityIDNotNil applies the NotNil predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldNodalOfficerFacilityID))
}

// NodalOfficerFacilityIDEqualFold applies the EqualFold predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityIDContainsFold applies the ContainsFold predicate on the "NodalOfficerFacilityID" field.
func NodalOfficerFacilityIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldNodalOfficerFacilityID, v))
}

// NodalOfficerFacilityNameEQ applies the EQ predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameNEQ applies the NEQ predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameIn applies the In predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldNodalOfficerFacilityName, vs...))
}

// NodalOfficerFacilityNameNotIn applies the NotIn predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldNodalOfficerFacilityName, vs...))
}

// NodalOfficerFacilityNameGT applies the GT predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameGTE applies the GTE predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameLT applies the LT predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameLTE applies the LTE predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameContains applies the Contains predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameHasPrefix applies the HasPrefix predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameHasSuffix applies the HasSuffix predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameIsNil applies the IsNil predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldNodalOfficerFacilityName))
}

// NodalOfficerFacilityNameNotNil applies the NotNil predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldNodalOfficerFacilityName))
}

// NodalOfficerFacilityNameEqualFold applies the EqualFold predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldNodalOfficerFacilityName, v))
}

// NodalOfficerFacilityNameContainsFold applies the ContainsFold predicate on the "NodalOfficerFacilityName" field.
func NodalOfficerFacilityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldNodalOfficerFacilityName, v))
}

// CityNameEQ applies the EQ predicate on the "CityName" field.
func CityNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCityName, v))
}

// CityNameNEQ applies the NEQ predicate on the "CityName" field.
func CityNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCityName, v))
}

// CityNameIn applies the In predicate on the "CityName" field.
func CityNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCityName, vs...))
}

// CityNameNotIn applies the NotIn predicate on the "CityName" field.
func CityNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCityName, vs...))
}

// CityNameGT applies the GT predicate on the "CityName" field.
func CityNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCityName, v))
}

// CityNameGTE applies the GTE predicate on the "CityName" field.
func CityNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCityName, v))
}

// CityNameLT applies the LT predicate on the "CityName" field.
func CityNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCityName, v))
}

// CityNameLTE applies the LTE predicate on the "CityName" field.
func CityNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCityName, v))
}

// CityNameContains applies the Contains predicate on the "CityName" field.
func CityNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCityName, v))
}

// CityNameHasPrefix applies the HasPrefix predicate on the "CityName" field.
func CityNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCityName, v))
}

// CityNameHasSuffix applies the HasSuffix predicate on the "CityName" field.
func CityNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCityName, v))
}

// CityNameIsNil applies the IsNil predicate on the "CityName" field.
func CityNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCityName))
}

// CityNameNotNil applies the NotNil predicate on the "CityName" field.
func CityNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCityName))
}

// CityNameEqualFold applies the EqualFold predicate on the "CityName" field.
func CityNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCityName, v))
}

// CityNameContainsFold applies the ContainsFold predicate on the "CityName" field.
func CityNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCityName, v))
}

// HallCircleCodeEQ applies the EQ predicate on the "HallCircleCode" field.
func HallCircleCodeEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldHallCircleCode, v))
}

// HallCircleCodeNEQ applies the NEQ predicate on the "HallCircleCode" field.
func HallCircleCodeNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldHallCircleCode, v))
}

// HallCircleCodeIn applies the In predicate on the "HallCircleCode" field.
func HallCircleCodeIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldHallCircleCode, vs...))
}

// HallCircleCodeNotIn applies the NotIn predicate on the "HallCircleCode" field.
func HallCircleCodeNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldHallCircleCode, vs...))
}

// HallCircleCodeGT applies the GT predicate on the "HallCircleCode" field.
func HallCircleCodeGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldHallCircleCode, v))
}

// HallCircleCodeGTE applies the GTE predicate on the "HallCircleCode" field.
func HallCircleCodeGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldHallCircleCode, v))
}

// HallCircleCodeLT applies the LT predicate on the "HallCircleCode" field.
func HallCircleCodeLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldHallCircleCode, v))
}

// HallCircleCodeLTE applies the LTE predicate on the "HallCircleCode" field.
func HallCircleCodeLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldHallCircleCode, v))
}

// HallCircleCodeContains applies the Contains predicate on the "HallCircleCode" field.
func HallCircleCodeContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldHallCircleCode, v))
}

// HallCircleCodeHasPrefix applies the HasPrefix predicate on the "HallCircleCode" field.
func HallCircleCodeHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldHallCircleCode, v))
}

// HallCircleCodeHasSuffix applies the HasSuffix predicate on the "HallCircleCode" field.
func HallCircleCodeHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldHallCircleCode, v))
}

// HallCircleCodeIsNil applies the IsNil predicate on the "HallCircleCode" field.
func HallCircleCodeIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldHallCircleCode))
}

// HallCircleCodeNotNil applies the NotNil predicate on the "HallCircleCode" field.
func HallCircleCodeNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldHallCircleCode))
}

// HallCircleCodeEqualFold applies the EqualFold predicate on the "HallCircleCode" field.
func HallCircleCodeEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldHallCircleCode, v))
}

// HallCircleCodeContainsFold applies the ContainsFold predicate on the "HallCircleCode" field.
func HallCircleCodeContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldHallCircleCode, v))
}

// DeliveryNonDeliveryOfficeEQ applies the EQ predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeNEQ applies the NEQ predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeIn applies the In predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldDeliveryNonDeliveryOffice, vs...))
}

// DeliveryNonDeliveryOfficeNotIn applies the NotIn predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldDeliveryNonDeliveryOffice, vs...))
}

// DeliveryNonDeliveryOfficeGT applies the GT predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeGTE applies the GTE predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeLT applies the LT predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeLTE applies the LTE predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeContains applies the Contains predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeHasPrefix applies the HasPrefix predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeHasSuffix applies the HasSuffix predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeIsNil applies the IsNil predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldDeliveryNonDeliveryOffice))
}

// DeliveryNonDeliveryOfficeNotNil applies the NotNil predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldDeliveryNonDeliveryOffice))
}

// DeliveryNonDeliveryOfficeEqualFold applies the EqualFold predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldDeliveryNonDeliveryOffice, v))
}

// DeliveryNonDeliveryOfficeContainsFold applies the ContainsFold predicate on the "DeliveryNonDeliveryOffice" field.
func DeliveryNonDeliveryOfficeContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldDeliveryNonDeliveryOffice, v))
}

// CreatedIDEQ applies the EQ predicate on the "CreatedID" field.
func CreatedIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedID, v))
}

// CreatedIDNEQ applies the NEQ predicate on the "CreatedID" field.
func CreatedIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCreatedID, v))
}

// CreatedIDIn applies the In predicate on the "CreatedID" field.
func CreatedIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCreatedID, vs...))
}

// CreatedIDNotIn applies the NotIn predicate on the "CreatedID" field.
func CreatedIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCreatedID, vs...))
}

// CreatedIDGT applies the GT predicate on the "CreatedID" field.
func CreatedIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCreatedID, v))
}

// CreatedIDGTE applies the GTE predicate on the "CreatedID" field.
func CreatedIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCreatedID, v))
}

// CreatedIDLT applies the LT predicate on the "CreatedID" field.
func CreatedIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCreatedID, v))
}

// CreatedIDLTE applies the LTE predicate on the "CreatedID" field.
func CreatedIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCreatedID, v))
}

// CreatedIDContains applies the Contains predicate on the "CreatedID" field.
func CreatedIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCreatedID, v))
}

// CreatedIDHasPrefix applies the HasPrefix predicate on the "CreatedID" field.
func CreatedIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCreatedID, v))
}

// CreatedIDHasSuffix applies the HasSuffix predicate on the "CreatedID" field.
func CreatedIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCreatedID, v))
}

// CreatedIDIsNil applies the IsNil predicate on the "CreatedID" field.
func CreatedIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCreatedID))
}

// CreatedIDNotNil applies the NotNil predicate on the "CreatedID" field.
func CreatedIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCreatedID))
}

// CreatedIDEqualFold applies the EqualFold predicate on the "CreatedID" field.
func CreatedIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCreatedID, v))
}

// CreatedIDContainsFold applies the ContainsFold predicate on the "CreatedID" field.
func CreatedIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCreatedID, v))
}

// CreatedByEQ applies the EQ predicate on the "CreatedBy" field.
func CreatedByEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedBy, v))
}

// CreatedByNEQ applies the NEQ predicate on the "CreatedBy" field.
func CreatedByNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCreatedBy, v))
}

// CreatedByIn applies the In predicate on the "CreatedBy" field.
func CreatedByIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCreatedBy, vs...))
}

// CreatedByNotIn applies the NotIn predicate on the "CreatedBy" field.
func CreatedByNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCreatedBy, vs...))
}

// CreatedByGT applies the GT predicate on the "CreatedBy" field.
func CreatedByGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCreatedBy, v))
}

// CreatedByGTE applies the GTE predicate on the "CreatedBy" field.
func CreatedByGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCreatedBy, v))
}

// CreatedByLT applies the LT predicate on the "CreatedBy" field.
func CreatedByLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCreatedBy, v))
}

// CreatedByLTE applies the LTE predicate on the "CreatedBy" field.
func CreatedByLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCreatedBy, v))
}

// CreatedByContains applies the Contains predicate on the "CreatedBy" field.
func CreatedByContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCreatedBy, v))
}

// CreatedByHasPrefix applies the HasPrefix predicate on the "CreatedBy" field.
func CreatedByHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCreatedBy, v))
}

// CreatedByHasSuffix applies the HasSuffix predicate on the "CreatedBy" field.
func CreatedByHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCreatedBy, v))
}

// CreatedByIsNil applies the IsNil predicate on the "CreatedBy" field.
func CreatedByIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCreatedBy))
}

// CreatedByNotNil applies the NotNil predicate on the "CreatedBy" field.
func CreatedByNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCreatedBy))
}

// CreatedByEqualFold applies the EqualFold predicate on the "CreatedBy" field.
func CreatedByEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCreatedBy, v))
}

// CreatedByContainsFold applies the ContainsFold predicate on the "CreatedBy" field.
func CreatedByContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCreatedBy, v))
}

// CreatedByNameEQ applies the EQ predicate on the "CreatedByName" field.
func CreatedByNameEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedByName, v))
}

// CreatedByNameNEQ applies the NEQ predicate on the "CreatedByName" field.
func CreatedByNameNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCreatedByName, v))
}

// CreatedByNameIn applies the In predicate on the "CreatedByName" field.
func CreatedByNameIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCreatedByName, vs...))
}

// CreatedByNameNotIn applies the NotIn predicate on the "CreatedByName" field.
func CreatedByNameNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCreatedByName, vs...))
}

// CreatedByNameGT applies the GT predicate on the "CreatedByName" field.
func CreatedByNameGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCreatedByName, v))
}

// CreatedByNameGTE applies the GTE predicate on the "CreatedByName" field.
func CreatedByNameGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCreatedByName, v))
}

// CreatedByNameLT applies the LT predicate on the "CreatedByName" field.
func CreatedByNameLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCreatedByName, v))
}

// CreatedByNameLTE applies the LTE predicate on the "CreatedByName" field.
func CreatedByNameLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCreatedByName, v))
}

// CreatedByNameContains applies the Contains predicate on the "CreatedByName" field.
func CreatedByNameContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCreatedByName, v))
}

// CreatedByNameHasPrefix applies the HasPrefix predicate on the "CreatedByName" field.
func CreatedByNameHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCreatedByName, v))
}

// CreatedByNameHasSuffix applies the HasSuffix predicate on the "CreatedByName" field.
func CreatedByNameHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCreatedByName, v))
}

// CreatedByNameIsNil applies the IsNil predicate on the "CreatedByName" field.
func CreatedByNameIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCreatedByName))
}

// CreatedByNameNotNil applies the NotNil predicate on the "CreatedByName" field.
func CreatedByNameNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCreatedByName))
}

// CreatedByNameEqualFold applies the EqualFold predicate on the "CreatedByName" field.
func CreatedByNameEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCreatedByName, v))
}

// CreatedByNameContainsFold applies the ContainsFold predicate on the "CreatedByName" field.
func CreatedByNameContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCreatedByName, v))
}

// CreatedByEmpIDEQ applies the EQ predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDNEQ applies the NEQ predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDIn applies the In predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCreatedByEmpID, vs...))
}

// CreatedByEmpIDNotIn applies the NotIn predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCreatedByEmpID, vs...))
}

// CreatedByEmpIDGT applies the GT predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDGTE applies the GTE predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDLT applies the LT predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDLTE applies the LTE predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDContains applies the Contains predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDHasPrefix applies the HasPrefix predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDHasSuffix applies the HasSuffix predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDIsNil applies the IsNil predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCreatedByEmpID))
}

// CreatedByEmpIDNotNil applies the NotNil predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCreatedByEmpID))
}

// CreatedByEmpIDEqualFold applies the EqualFold predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCreatedByEmpID, v))
}

// CreatedByEmpIDContainsFold applies the ContainsFold predicate on the "CreatedByEmpID" field.
func CreatedByEmpIDContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCreatedByEmpID, v))
}

// CircleCodeEQ applies the EQ predicate on the "CircleCode" field.
func CircleCodeEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldCircleCode, v))
}

// CircleCodeNEQ applies the NEQ predicate on the "CircleCode" field.
func CircleCodeNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldCircleCode, v))
}

// CircleCodeIn applies the In predicate on the "CircleCode" field.
func CircleCodeIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldCircleCode, vs...))
}

// CircleCodeNotIn applies the NotIn predicate on the "CircleCode" field.
func CircleCodeNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldCircleCode, vs...))
}

// CircleCodeGT applies the GT predicate on the "CircleCode" field.
func CircleCodeGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldCircleCode, v))
}

// CircleCodeGTE applies the GTE predicate on the "CircleCode" field.
func CircleCodeGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldCircleCode, v))
}

// CircleCodeLT applies the LT predicate on the "CircleCode" field.
func CircleCodeLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldCircleCode, v))
}

// CircleCodeLTE applies the LTE predicate on the "CircleCode" field.
func CircleCodeLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldCircleCode, v))
}

// CircleCodeContains applies the Contains predicate on the "CircleCode" field.
func CircleCodeContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldCircleCode, v))
}

// CircleCodeHasPrefix applies the HasPrefix predicate on the "CircleCode" field.
func CircleCodeHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldCircleCode, v))
}

// CircleCodeHasSuffix applies the HasSuffix predicate on the "CircleCode" field.
func CircleCodeHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldCircleCode, v))
}

// CircleCodeIsNil applies the IsNil predicate on the "CircleCode" field.
func CircleCodeIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldCircleCode))
}

// CircleCodeNotNil applies the NotNil predicate on the "CircleCode" field.
func CircleCodeNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldCircleCode))
}

// CircleCodeEqualFold applies the EqualFold predicate on the "CircleCode" field.
func CircleCodeEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldCircleCode, v))
}

// CircleCodeContainsFold applies the ContainsFold predicate on the "CircleCode" field.
func CircleCodeContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldCircleCode, v))
}

// StatusEQ applies the EQ predicate on the "Status" field.
func StatusEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "Status" field.
func StatusNEQ(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "Status" field.
func StatusIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "Status" field.
func StatusNotIn(vs ...string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "Status" field.
func StatusGT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "Status" field.
func StatusGTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "Status" field.
func StatusLT(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "Status" field.
func StatusLTE(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "Status" field.
func StatusContains(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "Status" field.
func StatusHasPrefix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "Status" field.
func StatusHasSuffix(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusEqualFold applies the EqualFold predicate on the "Status" field.
func StatusEqualFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "Status" field.
func StatusContainsFold(v string) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldContainsFold(FieldStatus, v))
}

// EventTimeEQ applies the EQ predicate on the "EventTime" field.
func EventTimeEQ(v time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldEQ(FieldEventTime, v))
}

// EventTimeNEQ applies the NEQ predicate on the "EventTime" field.
func EventTimeNEQ(v time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNEQ(FieldEventTime, v))
}

// EventTimeIn applies the In predicate on the "EventTime" field.
func EventTimeIn(vs ...time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIn(FieldEventTime, vs...))
}

// EventTimeNotIn applies the NotIn predicate on the "EventTime" field.
func EventTimeNotIn(vs ...time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotIn(FieldEventTime, vs...))
}

// EventTimeGT applies the GT predicate on the "EventTime" field.
func EventTimeGT(v time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGT(FieldEventTime, v))
}

// EventTimeGTE applies the GTE predicate on the "EventTime" field.
func EventTimeGTE(v time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldGTE(FieldEventTime, v))
}

// EventTimeLT applies the LT predicate on the "EventTime" field.
func EventTimeLT(v time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLT(FieldEventTime, v))
}

// EventTimeLTE applies the LTE predicate on the "EventTime" field.
func EventTimeLTE(v time.Time) predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldLTE(FieldEventTime, v))
}

// EventTimeIsNil applies the IsNil predicate on the "EventTime" field.
func EventTimeIsNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldIsNull(FieldEventTime))
}

// EventTimeNotNil applies the NotNil predicate on the "EventTime" field.
func EventTimeNotNil() predicate.FacilityMasters {
	return predicate.FacilityMasters(sql.FieldNotNull(FieldEventTime))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.FacilityMasters) predicate.FacilityMasters {
	return predicate.FacilityMasters(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.FacilityMasters) predicate.FacilityMasters {
	return predicate.FacilityMasters(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.FacilityMasters) predicate.FacilityMasters {
	return predicate.FacilityMasters(func(s *sql.Selector) {
		p(s.Not())
	})
}
