// Code generated by ent, DO NOT EDIT.

package examcenterhall

import (
	"recruit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldID, id))
}

// CenterCode applies equality check predicate on the "CenterCode" field. It's identical to CenterCodeEQ.
func CenterCode(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCenterCode, v))
}

// CityID applies equality check predicate on the "CityID" field. It's identical to CityIDEQ.
func CityID(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCityID, v))
}

// ExamCenterName applies equality check predicate on the "ExamCenterName" field. It's identical to ExamCenterNameEQ.
func ExamCenterName(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamCenterName, v))
}

// ExamYear applies equality check predicate on the "ExamYear" field. It's identical to ExamYearEQ.
func ExamYear(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamYear, v))
}

// ExamCode applies equality check predicate on the "ExamCode" field. It's identical to ExamCodeEQ.
func ExamCode(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamCode, v))
}

// ExamName applies equality check predicate on the "ExamName" field. It's identical to ExamNameEQ.
func ExamName(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamName, v))
}

// CenterCityName applies equality check predicate on the "CenterCityName" field. It's identical to CenterCityNameEQ.
func CenterCityName(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCenterCityName, v))
}

// ConductedByFacilityID applies equality check predicate on the "ConductedByFacilityID" field. It's identical to ConductedByFacilityIDEQ.
func ConductedByFacilityID(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldConductedByFacilityID, v))
}

// ConductedBy applies equality check predicate on the "ConductedBy" field. It's identical to ConductedByEQ.
func ConductedBy(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldConductedBy, v))
}

// HallName applies equality check predicate on the "HallName" field. It's identical to HallNameEQ.
func HallName(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldHallName, v))
}

// AdminCircleOfficeID applies equality check predicate on the "AdminCircleOfficeID" field. It's identical to AdminCircleOfficeIDEQ.
func AdminCircleOfficeID(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldAdminCircleOfficeID, v))
}

// Status applies equality check predicate on the "Status" field. It's identical to StatusEQ.
func Status(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldStatus, v))
}

// CreatedById applies equality check predicate on the "CreatedById" field. It's identical to CreatedByIdEQ.
func CreatedById(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedById, v))
}

// CreatedByUserName applies equality check predicate on the "CreatedByUserName" field. It's identical to CreatedByUserNameEQ.
func CreatedByUserName(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedByUserName, v))
}

// CreatedByEmpId applies equality check predicate on the "CreatedByEmpId" field. It's identical to CreatedByEmpIdEQ.
func CreatedByEmpId(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedByEmpId, v))
}

// CreatedByDesignation applies equality check predicate on the "CreatedByDesignation" field. It's identical to CreatedByDesignationEQ.
func CreatedByDesignation(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedByDesignation, v))
}

// CreatedDate applies equality check predicate on the "CreatedDate" field. It's identical to CreatedDateEQ.
func CreatedDate(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedDate, v))
}

// ModifiedById applies equality check predicate on the "ModifiedById" field. It's identical to ModifiedByIdEQ.
func ModifiedById(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedById, v))
}

// ModifiedByUserName applies equality check predicate on the "ModifiedByUserName" field. It's identical to ModifiedByUserNameEQ.
func ModifiedByUserName(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedByUserName, v))
}

// ModifiedByEmpId applies equality check predicate on the "ModifiedByEmpId" field. It's identical to ModifiedByEmpIdEQ.
func ModifiedByEmpId(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedByEmpId, v))
}

// ModifiedByDesignantion applies equality check predicate on the "ModifiedByDesignantion" field. It's identical to ModifiedByDesignantionEQ.
func ModifiedByDesignantion(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedByDesignantion, v))
}

// ModifiedDate applies equality check predicate on the "ModifiedDate" field. It's identical to ModifiedDateEQ.
func ModifiedDate(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedDate, v))
}

// DeletedById applies equality check predicate on the "DeletedById" field. It's identical to DeletedByIdEQ.
func DeletedById(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedById, v))
}

// DeletedByUserName applies equality check predicate on the "DeletedByUserName" field. It's identical to DeletedByUserNameEQ.
func DeletedByUserName(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedByUserName, v))
}

// DeletedByEmpId applies equality check predicate on the "DeletedByEmpId" field. It's identical to DeletedByEmpIdEQ.
func DeletedByEmpId(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedByEmpId, v))
}

// DeletedByDesignation applies equality check predicate on the "DeletedByDesignation" field. It's identical to DeletedByDesignationEQ.
func DeletedByDesignation(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedByDesignation, v))
}

// DeletedDate applies equality check predicate on the "DeletedDate" field. It's identical to DeletedDateEQ.
func DeletedDate(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedDate, v))
}

// UpdatedAt applies equality check predicate on the "UpdatedAt" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldUpdatedAt, v))
}

// NoSeats applies equality check predicate on the "NoSeats" field. It's identical to NoSeatsEQ.
func NoSeats(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldNoSeats, v))
}

// CenterCodeEQ applies the EQ predicate on the "CenterCode" field.
func CenterCodeEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCenterCode, v))
}

// CenterCodeNEQ applies the NEQ predicate on the "CenterCode" field.
func CenterCodeNEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCenterCode, v))
}

// CenterCodeIn applies the In predicate on the "CenterCode" field.
func CenterCodeIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCenterCode, vs...))
}

// CenterCodeNotIn applies the NotIn predicate on the "CenterCode" field.
func CenterCodeNotIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCenterCode, vs...))
}

// CenterCodeIsNil applies the IsNil predicate on the "CenterCode" field.
func CenterCodeIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCenterCode))
}

// CenterCodeNotNil applies the NotNil predicate on the "CenterCode" field.
func CenterCodeNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCenterCode))
}

// CityIDEQ applies the EQ predicate on the "CityID" field.
func CityIDEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCityID, v))
}

// CityIDNEQ applies the NEQ predicate on the "CityID" field.
func CityIDNEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCityID, v))
}

// CityIDIn applies the In predicate on the "CityID" field.
func CityIDIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCityID, vs...))
}

// CityIDNotIn applies the NotIn predicate on the "CityID" field.
func CityIDNotIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCityID, vs...))
}

// CityIDGT applies the GT predicate on the "CityID" field.
func CityIDGT(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldCityID, v))
}

// CityIDGTE applies the GTE predicate on the "CityID" field.
func CityIDGTE(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldCityID, v))
}

// CityIDLT applies the LT predicate on the "CityID" field.
func CityIDLT(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldCityID, v))
}

// CityIDLTE applies the LTE predicate on the "CityID" field.
func CityIDLTE(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldCityID, v))
}

// CityIDIsNil applies the IsNil predicate on the "CityID" field.
func CityIDIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCityID))
}

// CityIDNotNil applies the NotNil predicate on the "CityID" field.
func CityIDNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCityID))
}

// ExamCenterNameEQ applies the EQ predicate on the "ExamCenterName" field.
func ExamCenterNameEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamCenterName, v))
}

// ExamCenterNameNEQ applies the NEQ predicate on the "ExamCenterName" field.
func ExamCenterNameNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldExamCenterName, v))
}

// ExamCenterNameIn applies the In predicate on the "ExamCenterName" field.
func ExamCenterNameIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldExamCenterName, vs...))
}

// ExamCenterNameNotIn applies the NotIn predicate on the "ExamCenterName" field.
func ExamCenterNameNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldExamCenterName, vs...))
}

// ExamCenterNameGT applies the GT predicate on the "ExamCenterName" field.
func ExamCenterNameGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldExamCenterName, v))
}

// ExamCenterNameGTE applies the GTE predicate on the "ExamCenterName" field.
func ExamCenterNameGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldExamCenterName, v))
}

// ExamCenterNameLT applies the LT predicate on the "ExamCenterName" field.
func ExamCenterNameLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldExamCenterName, v))
}

// ExamCenterNameLTE applies the LTE predicate on the "ExamCenterName" field.
func ExamCenterNameLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldExamCenterName, v))
}

// ExamCenterNameContains applies the Contains predicate on the "ExamCenterName" field.
func ExamCenterNameContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldExamCenterName, v))
}

// ExamCenterNameHasPrefix applies the HasPrefix predicate on the "ExamCenterName" field.
func ExamCenterNameHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldExamCenterName, v))
}

// ExamCenterNameHasSuffix applies the HasSuffix predicate on the "ExamCenterName" field.
func ExamCenterNameHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldExamCenterName, v))
}

// ExamCenterNameIsNil applies the IsNil predicate on the "ExamCenterName" field.
func ExamCenterNameIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldExamCenterName))
}

// ExamCenterNameNotNil applies the NotNil predicate on the "ExamCenterName" field.
func ExamCenterNameNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldExamCenterName))
}

// ExamCenterNameEqualFold applies the EqualFold predicate on the "ExamCenterName" field.
func ExamCenterNameEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldExamCenterName, v))
}

// ExamCenterNameContainsFold applies the ContainsFold predicate on the "ExamCenterName" field.
func ExamCenterNameContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldExamCenterName, v))
}

// ExamYearEQ applies the EQ predicate on the "ExamYear" field.
func ExamYearEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamYear, v))
}

// ExamYearNEQ applies the NEQ predicate on the "ExamYear" field.
func ExamYearNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldExamYear, v))
}

// ExamYearIn applies the In predicate on the "ExamYear" field.
func ExamYearIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldExamYear, vs...))
}

// ExamYearNotIn applies the NotIn predicate on the "ExamYear" field.
func ExamYearNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldExamYear, vs...))
}

// ExamYearGT applies the GT predicate on the "ExamYear" field.
func ExamYearGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldExamYear, v))
}

// ExamYearGTE applies the GTE predicate on the "ExamYear" field.
func ExamYearGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldExamYear, v))
}

// ExamYearLT applies the LT predicate on the "ExamYear" field.
func ExamYearLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldExamYear, v))
}

// ExamYearLTE applies the LTE predicate on the "ExamYear" field.
func ExamYearLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldExamYear, v))
}

// ExamYearContains applies the Contains predicate on the "ExamYear" field.
func ExamYearContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldExamYear, v))
}

// ExamYearHasPrefix applies the HasPrefix predicate on the "ExamYear" field.
func ExamYearHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldExamYear, v))
}

// ExamYearHasSuffix applies the HasSuffix predicate on the "ExamYear" field.
func ExamYearHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldExamYear, v))
}

// ExamYearIsNil applies the IsNil predicate on the "ExamYear" field.
func ExamYearIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldExamYear))
}

// ExamYearNotNil applies the NotNil predicate on the "ExamYear" field.
func ExamYearNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldExamYear))
}

// ExamYearEqualFold applies the EqualFold predicate on the "ExamYear" field.
func ExamYearEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldExamYear, v))
}

// ExamYearContainsFold applies the ContainsFold predicate on the "ExamYear" field.
func ExamYearContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldExamYear, v))
}

// ExamCodeEQ applies the EQ predicate on the "ExamCode" field.
func ExamCodeEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamCode, v))
}

// ExamCodeNEQ applies the NEQ predicate on the "ExamCode" field.
func ExamCodeNEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldExamCode, v))
}

// ExamCodeIn applies the In predicate on the "ExamCode" field.
func ExamCodeIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldExamCode, vs...))
}

// ExamCodeNotIn applies the NotIn predicate on the "ExamCode" field.
func ExamCodeNotIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldExamCode, vs...))
}

// ExamCodeGT applies the GT predicate on the "ExamCode" field.
func ExamCodeGT(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldExamCode, v))
}

// ExamCodeGTE applies the GTE predicate on the "ExamCode" field.
func ExamCodeGTE(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldExamCode, v))
}

// ExamCodeLT applies the LT predicate on the "ExamCode" field.
func ExamCodeLT(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldExamCode, v))
}

// ExamCodeLTE applies the LTE predicate on the "ExamCode" field.
func ExamCodeLTE(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldExamCode, v))
}

// ExamCodeIsNil applies the IsNil predicate on the "ExamCode" field.
func ExamCodeIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldExamCode))
}

// ExamCodeNotNil applies the NotNil predicate on the "ExamCode" field.
func ExamCodeNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldExamCode))
}

// ExamNameEQ applies the EQ predicate on the "ExamName" field.
func ExamNameEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldExamName, v))
}

// ExamNameNEQ applies the NEQ predicate on the "ExamName" field.
func ExamNameNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldExamName, v))
}

// ExamNameIn applies the In predicate on the "ExamName" field.
func ExamNameIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldExamName, vs...))
}

// ExamNameNotIn applies the NotIn predicate on the "ExamName" field.
func ExamNameNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldExamName, vs...))
}

// ExamNameGT applies the GT predicate on the "ExamName" field.
func ExamNameGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldExamName, v))
}

// ExamNameGTE applies the GTE predicate on the "ExamName" field.
func ExamNameGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldExamName, v))
}

// ExamNameLT applies the LT predicate on the "ExamName" field.
func ExamNameLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldExamName, v))
}

// ExamNameLTE applies the LTE predicate on the "ExamName" field.
func ExamNameLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldExamName, v))
}

// ExamNameContains applies the Contains predicate on the "ExamName" field.
func ExamNameContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldExamName, v))
}

// ExamNameHasPrefix applies the HasPrefix predicate on the "ExamName" field.
func ExamNameHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldExamName, v))
}

// ExamNameHasSuffix applies the HasSuffix predicate on the "ExamName" field.
func ExamNameHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldExamName, v))
}

// ExamNameIsNil applies the IsNil predicate on the "ExamName" field.
func ExamNameIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldExamName))
}

// ExamNameNotNil applies the NotNil predicate on the "ExamName" field.
func ExamNameNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldExamName))
}

// ExamNameEqualFold applies the EqualFold predicate on the "ExamName" field.
func ExamNameEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldExamName, v))
}

// ExamNameContainsFold applies the ContainsFold predicate on the "ExamName" field.
func ExamNameContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldExamName, v))
}

// CenterCityNameEQ applies the EQ predicate on the "CenterCityName" field.
func CenterCityNameEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCenterCityName, v))
}

// CenterCityNameNEQ applies the NEQ predicate on the "CenterCityName" field.
func CenterCityNameNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCenterCityName, v))
}

// CenterCityNameIn applies the In predicate on the "CenterCityName" field.
func CenterCityNameIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCenterCityName, vs...))
}

// CenterCityNameNotIn applies the NotIn predicate on the "CenterCityName" field.
func CenterCityNameNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCenterCityName, vs...))
}

// CenterCityNameGT applies the GT predicate on the "CenterCityName" field.
func CenterCityNameGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldCenterCityName, v))
}

// CenterCityNameGTE applies the GTE predicate on the "CenterCityName" field.
func CenterCityNameGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldCenterCityName, v))
}

// CenterCityNameLT applies the LT predicate on the "CenterCityName" field.
func CenterCityNameLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldCenterCityName, v))
}

// CenterCityNameLTE applies the LTE predicate on the "CenterCityName" field.
func CenterCityNameLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldCenterCityName, v))
}

// CenterCityNameContains applies the Contains predicate on the "CenterCityName" field.
func CenterCityNameContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldCenterCityName, v))
}

// CenterCityNameHasPrefix applies the HasPrefix predicate on the "CenterCityName" field.
func CenterCityNameHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldCenterCityName, v))
}

// CenterCityNameHasSuffix applies the HasSuffix predicate on the "CenterCityName" field.
func CenterCityNameHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldCenterCityName, v))
}

// CenterCityNameIsNil applies the IsNil predicate on the "CenterCityName" field.
func CenterCityNameIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCenterCityName))
}

// CenterCityNameNotNil applies the NotNil predicate on the "CenterCityName" field.
func CenterCityNameNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCenterCityName))
}

// CenterCityNameEqualFold applies the EqualFold predicate on the "CenterCityName" field.
func CenterCityNameEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldCenterCityName, v))
}

// CenterCityNameContainsFold applies the ContainsFold predicate on the "CenterCityName" field.
func CenterCityNameContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldCenterCityName, v))
}

// ConductedByFacilityIDEQ applies the EQ predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDNEQ applies the NEQ predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDIn applies the In predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldConductedByFacilityID, vs...))
}

// ConductedByFacilityIDNotIn applies the NotIn predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldConductedByFacilityID, vs...))
}

// ConductedByFacilityIDGT applies the GT predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDGTE applies the GTE predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDLT applies the LT predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDLTE applies the LTE predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDContains applies the Contains predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDHasPrefix applies the HasPrefix predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDHasSuffix applies the HasSuffix predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDIsNil applies the IsNil predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldConductedByFacilityID))
}

// ConductedByFacilityIDNotNil applies the NotNil predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldConductedByFacilityID))
}

// ConductedByFacilityIDEqualFold applies the EqualFold predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldConductedByFacilityID, v))
}

// ConductedByFacilityIDContainsFold applies the ContainsFold predicate on the "ConductedByFacilityID" field.
func ConductedByFacilityIDContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldConductedByFacilityID, v))
}

// ConductedByEQ applies the EQ predicate on the "ConductedBy" field.
func ConductedByEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldConductedBy, v))
}

// ConductedByNEQ applies the NEQ predicate on the "ConductedBy" field.
func ConductedByNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldConductedBy, v))
}

// ConductedByIn applies the In predicate on the "ConductedBy" field.
func ConductedByIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldConductedBy, vs...))
}

// ConductedByNotIn applies the NotIn predicate on the "ConductedBy" field.
func ConductedByNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldConductedBy, vs...))
}

// ConductedByGT applies the GT predicate on the "ConductedBy" field.
func ConductedByGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldConductedBy, v))
}

// ConductedByGTE applies the GTE predicate on the "ConductedBy" field.
func ConductedByGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldConductedBy, v))
}

// ConductedByLT applies the LT predicate on the "ConductedBy" field.
func ConductedByLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldConductedBy, v))
}

// ConductedByLTE applies the LTE predicate on the "ConductedBy" field.
func ConductedByLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldConductedBy, v))
}

// ConductedByContains applies the Contains predicate on the "ConductedBy" field.
func ConductedByContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldConductedBy, v))
}

// ConductedByHasPrefix applies the HasPrefix predicate on the "ConductedBy" field.
func ConductedByHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldConductedBy, v))
}

// ConductedByHasSuffix applies the HasSuffix predicate on the "ConductedBy" field.
func ConductedByHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldConductedBy, v))
}

// ConductedByIsNil applies the IsNil predicate on the "ConductedBy" field.
func ConductedByIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldConductedBy))
}

// ConductedByNotNil applies the NotNil predicate on the "ConductedBy" field.
func ConductedByNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldConductedBy))
}

// ConductedByEqualFold applies the EqualFold predicate on the "ConductedBy" field.
func ConductedByEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldConductedBy, v))
}

// ConductedByContainsFold applies the ContainsFold predicate on the "ConductedBy" field.
func ConductedByContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldConductedBy, v))
}

// HallNameEQ applies the EQ predicate on the "HallName" field.
func HallNameEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldHallName, v))
}

// HallNameNEQ applies the NEQ predicate on the "HallName" field.
func HallNameNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldHallName, v))
}

// HallNameIn applies the In predicate on the "HallName" field.
func HallNameIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldHallName, vs...))
}

// HallNameNotIn applies the NotIn predicate on the "HallName" field.
func HallNameNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldHallName, vs...))
}

// HallNameGT applies the GT predicate on the "HallName" field.
func HallNameGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldHallName, v))
}

// HallNameGTE applies the GTE predicate on the "HallName" field.
func HallNameGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldHallName, v))
}

// HallNameLT applies the LT predicate on the "HallName" field.
func HallNameLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldHallName, v))
}

// HallNameLTE applies the LTE predicate on the "HallName" field.
func HallNameLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldHallName, v))
}

// HallNameContains applies the Contains predicate on the "HallName" field.
func HallNameContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldHallName, v))
}

// HallNameHasPrefix applies the HasPrefix predicate on the "HallName" field.
func HallNameHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldHallName, v))
}

// HallNameHasSuffix applies the HasSuffix predicate on the "HallName" field.
func HallNameHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldHallName, v))
}

// HallNameIsNil applies the IsNil predicate on the "HallName" field.
func HallNameIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldHallName))
}

// HallNameNotNil applies the NotNil predicate on the "HallName" field.
func HallNameNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldHallName))
}

// HallNameEqualFold applies the EqualFold predicate on the "HallName" field.
func HallNameEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldHallName, v))
}

// HallNameContainsFold applies the ContainsFold predicate on the "HallName" field.
func HallNameContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldHallName, v))
}

// AdminCircleOfficeIDEQ applies the EQ predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDNEQ applies the NEQ predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDIn applies the In predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldAdminCircleOfficeID, vs...))
}

// AdminCircleOfficeIDNotIn applies the NotIn predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldAdminCircleOfficeID, vs...))
}

// AdminCircleOfficeIDGT applies the GT predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDGTE applies the GTE predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDLT applies the LT predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDLTE applies the LTE predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDContains applies the Contains predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDHasPrefix applies the HasPrefix predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDHasSuffix applies the HasSuffix predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDIsNil applies the IsNil predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldAdminCircleOfficeID))
}

// AdminCircleOfficeIDNotNil applies the NotNil predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldAdminCircleOfficeID))
}

// AdminCircleOfficeIDEqualFold applies the EqualFold predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldAdminCircleOfficeID, v))
}

// AdminCircleOfficeIDContainsFold applies the ContainsFold predicate on the "AdminCircleOfficeID" field.
func AdminCircleOfficeIDContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldAdminCircleOfficeID, v))
}

// MappingIdentificationNumberIsNil applies the IsNil predicate on the "MappingIdentificationNumber" field.
func MappingIdentificationNumberIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldMappingIdentificationNumber))
}

// MappingIdentificationNumberNotNil applies the NotNil predicate on the "MappingIdentificationNumber" field.
func MappingIdentificationNumberNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldMappingIdentificationNumber))
}

// StatusEQ applies the EQ predicate on the "Status" field.
func StatusEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "Status" field.
func StatusNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "Status" field.
func StatusIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "Status" field.
func StatusNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "Status" field.
func StatusGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "Status" field.
func StatusGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "Status" field.
func StatusLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "Status" field.
func StatusLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "Status" field.
func StatusContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "Status" field.
func StatusHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "Status" field.
func StatusHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "Status" field.
func StatusIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "Status" field.
func StatusNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldStatus))
}

// StatusEqualFold applies the EqualFold predicate on the "Status" field.
func StatusEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "Status" field.
func StatusContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedByIdEQ applies the EQ predicate on the "CreatedById" field.
func CreatedByIdEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedById, v))
}

// CreatedByIdNEQ applies the NEQ predicate on the "CreatedById" field.
func CreatedByIdNEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCreatedById, v))
}

// CreatedByIdIn applies the In predicate on the "CreatedById" field.
func CreatedByIdIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCreatedById, vs...))
}

// CreatedByIdNotIn applies the NotIn predicate on the "CreatedById" field.
func CreatedByIdNotIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCreatedById, vs...))
}

// CreatedByIdGT applies the GT predicate on the "CreatedById" field.
func CreatedByIdGT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldCreatedById, v))
}

// CreatedByIdGTE applies the GTE predicate on the "CreatedById" field.
func CreatedByIdGTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldCreatedById, v))
}

// CreatedByIdLT applies the LT predicate on the "CreatedById" field.
func CreatedByIdLT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldCreatedById, v))
}

// CreatedByIdLTE applies the LTE predicate on the "CreatedById" field.
func CreatedByIdLTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldCreatedById, v))
}

// CreatedByIdIsNil applies the IsNil predicate on the "CreatedById" field.
func CreatedByIdIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCreatedById))
}

// CreatedByIdNotNil applies the NotNil predicate on the "CreatedById" field.
func CreatedByIdNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCreatedById))
}

// CreatedByUserNameEQ applies the EQ predicate on the "CreatedByUserName" field.
func CreatedByUserNameEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedByUserName, v))
}

// CreatedByUserNameNEQ applies the NEQ predicate on the "CreatedByUserName" field.
func CreatedByUserNameNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCreatedByUserName, v))
}

// CreatedByUserNameIn applies the In predicate on the "CreatedByUserName" field.
func CreatedByUserNameIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCreatedByUserName, vs...))
}

// CreatedByUserNameNotIn applies the NotIn predicate on the "CreatedByUserName" field.
func CreatedByUserNameNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCreatedByUserName, vs...))
}

// CreatedByUserNameGT applies the GT predicate on the "CreatedByUserName" field.
func CreatedByUserNameGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldCreatedByUserName, v))
}

// CreatedByUserNameGTE applies the GTE predicate on the "CreatedByUserName" field.
func CreatedByUserNameGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldCreatedByUserName, v))
}

// CreatedByUserNameLT applies the LT predicate on the "CreatedByUserName" field.
func CreatedByUserNameLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldCreatedByUserName, v))
}

// CreatedByUserNameLTE applies the LTE predicate on the "CreatedByUserName" field.
func CreatedByUserNameLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldCreatedByUserName, v))
}

// CreatedByUserNameContains applies the Contains predicate on the "CreatedByUserName" field.
func CreatedByUserNameContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldCreatedByUserName, v))
}

// CreatedByUserNameHasPrefix applies the HasPrefix predicate on the "CreatedByUserName" field.
func CreatedByUserNameHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldCreatedByUserName, v))
}

// CreatedByUserNameHasSuffix applies the HasSuffix predicate on the "CreatedByUserName" field.
func CreatedByUserNameHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldCreatedByUserName, v))
}

// CreatedByUserNameIsNil applies the IsNil predicate on the "CreatedByUserName" field.
func CreatedByUserNameIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCreatedByUserName))
}

// CreatedByUserNameNotNil applies the NotNil predicate on the "CreatedByUserName" field.
func CreatedByUserNameNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCreatedByUserName))
}

// CreatedByUserNameEqualFold applies the EqualFold predicate on the "CreatedByUserName" field.
func CreatedByUserNameEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldCreatedByUserName, v))
}

// CreatedByUserNameContainsFold applies the ContainsFold predicate on the "CreatedByUserName" field.
func CreatedByUserNameContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldCreatedByUserName, v))
}

// CreatedByEmpIdEQ applies the EQ predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdNEQ applies the NEQ predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdNEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdIn applies the In predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCreatedByEmpId, vs...))
}

// CreatedByEmpIdNotIn applies the NotIn predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdNotIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCreatedByEmpId, vs...))
}

// CreatedByEmpIdGT applies the GT predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdGT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdGTE applies the GTE predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdGTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdLT applies the LT predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdLT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdLTE applies the LTE predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdLTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdIsNil applies the IsNil predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCreatedByEmpId))
}

// CreatedByEmpIdNotNil applies the NotNil predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCreatedByEmpId))
}

// CreatedByDesignationEQ applies the EQ predicate on the "CreatedByDesignation" field.
func CreatedByDesignationEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedByDesignation, v))
}

// CreatedByDesignationNEQ applies the NEQ predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCreatedByDesignation, v))
}

// CreatedByDesignationIn applies the In predicate on the "CreatedByDesignation" field.
func CreatedByDesignationIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCreatedByDesignation, vs...))
}

// CreatedByDesignationNotIn applies the NotIn predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCreatedByDesignation, vs...))
}

// CreatedByDesignationGT applies the GT predicate on the "CreatedByDesignation" field.
func CreatedByDesignationGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldCreatedByDesignation, v))
}

// CreatedByDesignationGTE applies the GTE predicate on the "CreatedByDesignation" field.
func CreatedByDesignationGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldCreatedByDesignation, v))
}

// CreatedByDesignationLT applies the LT predicate on the "CreatedByDesignation" field.
func CreatedByDesignationLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldCreatedByDesignation, v))
}

// CreatedByDesignationLTE applies the LTE predicate on the "CreatedByDesignation" field.
func CreatedByDesignationLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldCreatedByDesignation, v))
}

// CreatedByDesignationContains applies the Contains predicate on the "CreatedByDesignation" field.
func CreatedByDesignationContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldCreatedByDesignation, v))
}

// CreatedByDesignationHasPrefix applies the HasPrefix predicate on the "CreatedByDesignation" field.
func CreatedByDesignationHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldCreatedByDesignation, v))
}

// CreatedByDesignationHasSuffix applies the HasSuffix predicate on the "CreatedByDesignation" field.
func CreatedByDesignationHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldCreatedByDesignation, v))
}

// CreatedByDesignationIsNil applies the IsNil predicate on the "CreatedByDesignation" field.
func CreatedByDesignationIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCreatedByDesignation))
}

// CreatedByDesignationNotNil applies the NotNil predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCreatedByDesignation))
}

// CreatedByDesignationEqualFold applies the EqualFold predicate on the "CreatedByDesignation" field.
func CreatedByDesignationEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldCreatedByDesignation, v))
}

// CreatedByDesignationContainsFold applies the ContainsFold predicate on the "CreatedByDesignation" field.
func CreatedByDesignationContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldCreatedByDesignation, v))
}

// CreatedDateEQ applies the EQ predicate on the "CreatedDate" field.
func CreatedDateEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldCreatedDate, v))
}

// CreatedDateNEQ applies the NEQ predicate on the "CreatedDate" field.
func CreatedDateNEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldCreatedDate, v))
}

// CreatedDateIn applies the In predicate on the "CreatedDate" field.
func CreatedDateIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldCreatedDate, vs...))
}

// CreatedDateNotIn applies the NotIn predicate on the "CreatedDate" field.
func CreatedDateNotIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldCreatedDate, vs...))
}

// CreatedDateGT applies the GT predicate on the "CreatedDate" field.
func CreatedDateGT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldCreatedDate, v))
}

// CreatedDateGTE applies the GTE predicate on the "CreatedDate" field.
func CreatedDateGTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldCreatedDate, v))
}

// CreatedDateLT applies the LT predicate on the "CreatedDate" field.
func CreatedDateLT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldCreatedDate, v))
}

// CreatedDateLTE applies the LTE predicate on the "CreatedDate" field.
func CreatedDateLTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldCreatedDate, v))
}

// CreatedDateIsNil applies the IsNil predicate on the "CreatedDate" field.
func CreatedDateIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldCreatedDate))
}

// CreatedDateNotNil applies the NotNil predicate on the "CreatedDate" field.
func CreatedDateNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldCreatedDate))
}

// ModifiedByIdEQ applies the EQ predicate on the "ModifiedById" field.
func ModifiedByIdEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedById, v))
}

// ModifiedByIdNEQ applies the NEQ predicate on the "ModifiedById" field.
func ModifiedByIdNEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldModifiedById, v))
}

// ModifiedByIdIn applies the In predicate on the "ModifiedById" field.
func ModifiedByIdIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldModifiedById, vs...))
}

// ModifiedByIdNotIn applies the NotIn predicate on the "ModifiedById" field.
func ModifiedByIdNotIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldModifiedById, vs...))
}

// ModifiedByIdGT applies the GT predicate on the "ModifiedById" field.
func ModifiedByIdGT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldModifiedById, v))
}

// ModifiedByIdGTE applies the GTE predicate on the "ModifiedById" field.
func ModifiedByIdGTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldModifiedById, v))
}

// ModifiedByIdLT applies the LT predicate on the "ModifiedById" field.
func ModifiedByIdLT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldModifiedById, v))
}

// ModifiedByIdLTE applies the LTE predicate on the "ModifiedById" field.
func ModifiedByIdLTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldModifiedById, v))
}

// ModifiedByIdIsNil applies the IsNil predicate on the "ModifiedById" field.
func ModifiedByIdIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldModifiedById))
}

// ModifiedByIdNotNil applies the NotNil predicate on the "ModifiedById" field.
func ModifiedByIdNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldModifiedById))
}

// ModifiedByUserNameEQ applies the EQ predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedByUserName, v))
}

// ModifiedByUserNameNEQ applies the NEQ predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldModifiedByUserName, v))
}

// ModifiedByUserNameIn applies the In predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldModifiedByUserName, vs...))
}

// ModifiedByUserNameNotIn applies the NotIn predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldModifiedByUserName, vs...))
}

// ModifiedByUserNameGT applies the GT predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldModifiedByUserName, v))
}

// ModifiedByUserNameGTE applies the GTE predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldModifiedByUserName, v))
}

// ModifiedByUserNameLT applies the LT predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldModifiedByUserName, v))
}

// ModifiedByUserNameLTE applies the LTE predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldModifiedByUserName, v))
}

// ModifiedByUserNameContains applies the Contains predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldModifiedByUserName, v))
}

// ModifiedByUserNameHasPrefix applies the HasPrefix predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldModifiedByUserName, v))
}

// ModifiedByUserNameHasSuffix applies the HasSuffix predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldModifiedByUserName, v))
}

// ModifiedByUserNameIsNil applies the IsNil predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldModifiedByUserName))
}

// ModifiedByUserNameNotNil applies the NotNil predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldModifiedByUserName))
}

// ModifiedByUserNameEqualFold applies the EqualFold predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldModifiedByUserName, v))
}

// ModifiedByUserNameContainsFold applies the ContainsFold predicate on the "ModifiedByUserName" field.
func ModifiedByUserNameContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldModifiedByUserName, v))
}

// ModifiedByEmpIdEQ applies the EQ predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedByEmpId, v))
}

// ModifiedByEmpIdNEQ applies the NEQ predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdNEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldModifiedByEmpId, v))
}

// ModifiedByEmpIdIn applies the In predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldModifiedByEmpId, vs...))
}

// ModifiedByEmpIdNotIn applies the NotIn predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdNotIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldModifiedByEmpId, vs...))
}

// ModifiedByEmpIdGT applies the GT predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdGT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldModifiedByEmpId, v))
}

// ModifiedByEmpIdGTE applies the GTE predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdGTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldModifiedByEmpId, v))
}

// ModifiedByEmpIdLT applies the LT predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdLT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldModifiedByEmpId, v))
}

// ModifiedByEmpIdLTE applies the LTE predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdLTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldModifiedByEmpId, v))
}

// ModifiedByEmpIdIsNil applies the IsNil predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldModifiedByEmpId))
}

// ModifiedByEmpIdNotNil applies the NotNil predicate on the "ModifiedByEmpId" field.
func ModifiedByEmpIdNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldModifiedByEmpId))
}

// ModifiedByDesignantionEQ applies the EQ predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionNEQ applies the NEQ predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionIn applies the In predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldModifiedByDesignantion, vs...))
}

// ModifiedByDesignantionNotIn applies the NotIn predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldModifiedByDesignantion, vs...))
}

// ModifiedByDesignantionGT applies the GT predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionGTE applies the GTE predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionLT applies the LT predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionLTE applies the LTE predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionContains applies the Contains predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionHasPrefix applies the HasPrefix predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionHasSuffix applies the HasSuffix predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionIsNil applies the IsNil predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldModifiedByDesignantion))
}

// ModifiedByDesignantionNotNil applies the NotNil predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldModifiedByDesignantion))
}

// ModifiedByDesignantionEqualFold applies the EqualFold predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldModifiedByDesignantion, v))
}

// ModifiedByDesignantionContainsFold applies the ContainsFold predicate on the "ModifiedByDesignantion" field.
func ModifiedByDesignantionContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldModifiedByDesignantion, v))
}

// ModifiedDateEQ applies the EQ predicate on the "ModifiedDate" field.
func ModifiedDateEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldModifiedDate, v))
}

// ModifiedDateNEQ applies the NEQ predicate on the "ModifiedDate" field.
func ModifiedDateNEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldModifiedDate, v))
}

// ModifiedDateIn applies the In predicate on the "ModifiedDate" field.
func ModifiedDateIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldModifiedDate, vs...))
}

// ModifiedDateNotIn applies the NotIn predicate on the "ModifiedDate" field.
func ModifiedDateNotIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldModifiedDate, vs...))
}

// ModifiedDateGT applies the GT predicate on the "ModifiedDate" field.
func ModifiedDateGT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldModifiedDate, v))
}

// ModifiedDateGTE applies the GTE predicate on the "ModifiedDate" field.
func ModifiedDateGTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldModifiedDate, v))
}

// ModifiedDateLT applies the LT predicate on the "ModifiedDate" field.
func ModifiedDateLT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldModifiedDate, v))
}

// ModifiedDateLTE applies the LTE predicate on the "ModifiedDate" field.
func ModifiedDateLTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldModifiedDate, v))
}

// ModifiedDateIsNil applies the IsNil predicate on the "ModifiedDate" field.
func ModifiedDateIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldModifiedDate))
}

// ModifiedDateNotNil applies the NotNil predicate on the "ModifiedDate" field.
func ModifiedDateNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldModifiedDate))
}

// DeletedByIdEQ applies the EQ predicate on the "DeletedById" field.
func DeletedByIdEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedById, v))
}

// DeletedByIdNEQ applies the NEQ predicate on the "DeletedById" field.
func DeletedByIdNEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldDeletedById, v))
}

// DeletedByIdIn applies the In predicate on the "DeletedById" field.
func DeletedByIdIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldDeletedById, vs...))
}

// DeletedByIdNotIn applies the NotIn predicate on the "DeletedById" field.
func DeletedByIdNotIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldDeletedById, vs...))
}

// DeletedByIdGT applies the GT predicate on the "DeletedById" field.
func DeletedByIdGT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldDeletedById, v))
}

// DeletedByIdGTE applies the GTE predicate on the "DeletedById" field.
func DeletedByIdGTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldDeletedById, v))
}

// DeletedByIdLT applies the LT predicate on the "DeletedById" field.
func DeletedByIdLT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldDeletedById, v))
}

// DeletedByIdLTE applies the LTE predicate on the "DeletedById" field.
func DeletedByIdLTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldDeletedById, v))
}

// DeletedByIdIsNil applies the IsNil predicate on the "DeletedById" field.
func DeletedByIdIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldDeletedById))
}

// DeletedByIdNotNil applies the NotNil predicate on the "DeletedById" field.
func DeletedByIdNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldDeletedById))
}

// DeletedByUserNameEQ applies the EQ predicate on the "DeletedByUserName" field.
func DeletedByUserNameEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedByUserName, v))
}

// DeletedByUserNameNEQ applies the NEQ predicate on the "DeletedByUserName" field.
func DeletedByUserNameNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldDeletedByUserName, v))
}

// DeletedByUserNameIn applies the In predicate on the "DeletedByUserName" field.
func DeletedByUserNameIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldDeletedByUserName, vs...))
}

// DeletedByUserNameNotIn applies the NotIn predicate on the "DeletedByUserName" field.
func DeletedByUserNameNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldDeletedByUserName, vs...))
}

// DeletedByUserNameGT applies the GT predicate on the "DeletedByUserName" field.
func DeletedByUserNameGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldDeletedByUserName, v))
}

// DeletedByUserNameGTE applies the GTE predicate on the "DeletedByUserName" field.
func DeletedByUserNameGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldDeletedByUserName, v))
}

// DeletedByUserNameLT applies the LT predicate on the "DeletedByUserName" field.
func DeletedByUserNameLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldDeletedByUserName, v))
}

// DeletedByUserNameLTE applies the LTE predicate on the "DeletedByUserName" field.
func DeletedByUserNameLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldDeletedByUserName, v))
}

// DeletedByUserNameContains applies the Contains predicate on the "DeletedByUserName" field.
func DeletedByUserNameContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldDeletedByUserName, v))
}

// DeletedByUserNameHasPrefix applies the HasPrefix predicate on the "DeletedByUserName" field.
func DeletedByUserNameHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldDeletedByUserName, v))
}

// DeletedByUserNameHasSuffix applies the HasSuffix predicate on the "DeletedByUserName" field.
func DeletedByUserNameHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldDeletedByUserName, v))
}

// DeletedByUserNameIsNil applies the IsNil predicate on the "DeletedByUserName" field.
func DeletedByUserNameIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldDeletedByUserName))
}

// DeletedByUserNameNotNil applies the NotNil predicate on the "DeletedByUserName" field.
func DeletedByUserNameNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldDeletedByUserName))
}

// DeletedByUserNameEqualFold applies the EqualFold predicate on the "DeletedByUserName" field.
func DeletedByUserNameEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldDeletedByUserName, v))
}

// DeletedByUserNameContainsFold applies the ContainsFold predicate on the "DeletedByUserName" field.
func DeletedByUserNameContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldDeletedByUserName, v))
}

// DeletedByEmpIdEQ applies the EQ predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedByEmpId, v))
}

// DeletedByEmpIdNEQ applies the NEQ predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdNEQ(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldDeletedByEmpId, v))
}

// DeletedByEmpIdIn applies the In predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldDeletedByEmpId, vs...))
}

// DeletedByEmpIdNotIn applies the NotIn predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdNotIn(vs ...int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldDeletedByEmpId, vs...))
}

// DeletedByEmpIdGT applies the GT predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdGT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldDeletedByEmpId, v))
}

// DeletedByEmpIdGTE applies the GTE predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdGTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldDeletedByEmpId, v))
}

// DeletedByEmpIdLT applies the LT predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdLT(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldDeletedByEmpId, v))
}

// DeletedByEmpIdLTE applies the LTE predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdLTE(v int64) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldDeletedByEmpId, v))
}

// DeletedByEmpIdIsNil applies the IsNil predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldDeletedByEmpId))
}

// DeletedByEmpIdNotNil applies the NotNil predicate on the "DeletedByEmpId" field.
func DeletedByEmpIdNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldDeletedByEmpId))
}

// DeletedByDesignationEQ applies the EQ predicate on the "DeletedByDesignation" field.
func DeletedByDesignationEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedByDesignation, v))
}

// DeletedByDesignationNEQ applies the NEQ predicate on the "DeletedByDesignation" field.
func DeletedByDesignationNEQ(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldDeletedByDesignation, v))
}

// DeletedByDesignationIn applies the In predicate on the "DeletedByDesignation" field.
func DeletedByDesignationIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldDeletedByDesignation, vs...))
}

// DeletedByDesignationNotIn applies the NotIn predicate on the "DeletedByDesignation" field.
func DeletedByDesignationNotIn(vs ...string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldDeletedByDesignation, vs...))
}

// DeletedByDesignationGT applies the GT predicate on the "DeletedByDesignation" field.
func DeletedByDesignationGT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldDeletedByDesignation, v))
}

// DeletedByDesignationGTE applies the GTE predicate on the "DeletedByDesignation" field.
func DeletedByDesignationGTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldDeletedByDesignation, v))
}

// DeletedByDesignationLT applies the LT predicate on the "DeletedByDesignation" field.
func DeletedByDesignationLT(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldDeletedByDesignation, v))
}

// DeletedByDesignationLTE applies the LTE predicate on the "DeletedByDesignation" field.
func DeletedByDesignationLTE(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldDeletedByDesignation, v))
}

// DeletedByDesignationContains applies the Contains predicate on the "DeletedByDesignation" field.
func DeletedByDesignationContains(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContains(FieldDeletedByDesignation, v))
}

// DeletedByDesignationHasPrefix applies the HasPrefix predicate on the "DeletedByDesignation" field.
func DeletedByDesignationHasPrefix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasPrefix(FieldDeletedByDesignation, v))
}

// DeletedByDesignationHasSuffix applies the HasSuffix predicate on the "DeletedByDesignation" field.
func DeletedByDesignationHasSuffix(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldHasSuffix(FieldDeletedByDesignation, v))
}

// DeletedByDesignationIsNil applies the IsNil predicate on the "DeletedByDesignation" field.
func DeletedByDesignationIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldDeletedByDesignation))
}

// DeletedByDesignationNotNil applies the NotNil predicate on the "DeletedByDesignation" field.
func DeletedByDesignationNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldDeletedByDesignation))
}

// DeletedByDesignationEqualFold applies the EqualFold predicate on the "DeletedByDesignation" field.
func DeletedByDesignationEqualFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEqualFold(FieldDeletedByDesignation, v))
}

// DeletedByDesignationContainsFold applies the ContainsFold predicate on the "DeletedByDesignation" field.
func DeletedByDesignationContainsFold(v string) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldContainsFold(FieldDeletedByDesignation, v))
}

// DeletedDateEQ applies the EQ predicate on the "DeletedDate" field.
func DeletedDateEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldDeletedDate, v))
}

// DeletedDateNEQ applies the NEQ predicate on the "DeletedDate" field.
func DeletedDateNEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldDeletedDate, v))
}

// DeletedDateIn applies the In predicate on the "DeletedDate" field.
func DeletedDateIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldDeletedDate, vs...))
}

// DeletedDateNotIn applies the NotIn predicate on the "DeletedDate" field.
func DeletedDateNotIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldDeletedDate, vs...))
}

// DeletedDateGT applies the GT predicate on the "DeletedDate" field.
func DeletedDateGT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldDeletedDate, v))
}

// DeletedDateGTE applies the GTE predicate on the "DeletedDate" field.
func DeletedDateGTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldDeletedDate, v))
}

// DeletedDateLT applies the LT predicate on the "DeletedDate" field.
func DeletedDateLT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldDeletedDate, v))
}

// DeletedDateLTE applies the LTE predicate on the "DeletedDate" field.
func DeletedDateLTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldDeletedDate, v))
}

// DeletedDateIsNil applies the IsNil predicate on the "DeletedDate" field.
func DeletedDateIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldDeletedDate))
}

// DeletedDateNotNil applies the NotNil predicate on the "DeletedDate" field.
func DeletedDateNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldDeletedDate))
}

// UpdatedAtEQ applies the EQ predicate on the "UpdatedAt" field.
func UpdatedAtEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "UpdatedAt" field.
func UpdatedAtNEQ(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "UpdatedAt" field.
func UpdatedAtIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "UpdatedAt" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "UpdatedAt" field.
func UpdatedAtGT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "UpdatedAt" field.
func UpdatedAtGTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "UpdatedAt" field.
func UpdatedAtLT(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "UpdatedAt" field.
func UpdatedAtLTE(v time.Time) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "UpdatedAt" field.
func UpdatedAtIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "UpdatedAt" field.
func UpdatedAtNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldUpdatedAt))
}

// NoSeatsEQ applies the EQ predicate on the "NoSeats" field.
func NoSeatsEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldEQ(FieldNoSeats, v))
}

// NoSeatsNEQ applies the NEQ predicate on the "NoSeats" field.
func NoSeatsNEQ(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNEQ(FieldNoSeats, v))
}

// NoSeatsIn applies the In predicate on the "NoSeats" field.
func NoSeatsIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIn(FieldNoSeats, vs...))
}

// NoSeatsNotIn applies the NotIn predicate on the "NoSeats" field.
func NoSeatsNotIn(vs ...int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotIn(FieldNoSeats, vs...))
}

// NoSeatsGT applies the GT predicate on the "NoSeats" field.
func NoSeatsGT(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGT(FieldNoSeats, v))
}

// NoSeatsGTE applies the GTE predicate on the "NoSeats" field.
func NoSeatsGTE(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldGTE(FieldNoSeats, v))
}

// NoSeatsLT applies the LT predicate on the "NoSeats" field.
func NoSeatsLT(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLT(FieldNoSeats, v))
}

// NoSeatsLTE applies the LTE predicate on the "NoSeats" field.
func NoSeatsLTE(v int32) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldLTE(FieldNoSeats, v))
}

// NoSeatsIsNil applies the IsNil predicate on the "NoSeats" field.
func NoSeatsIsNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldIsNull(FieldNoSeats))
}

// NoSeatsNotNil applies the NotNil predicate on the "NoSeats" field.
func NoSeatsNotNil() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(sql.FieldNotNull(FieldNoSeats))
}

// HasExaCenterHall applies the HasEdge predicate on the "ExaCenterHall" edge.
func HasExaCenterHall() predicate.ExamCenterHall {
	return predicate.ExamCenterHall(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ExaCenterHallTable, ExaCenterHallColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasExaCenterHallWith applies the HasEdge predicate on the "ExaCenterHall" edge with a given conditions (other predicates).
func HasExaCenterHallWith(preds ...predicate.Center) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(func(s *sql.Selector) {
		step := newExaCenterHallStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExamCenterHall) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExamCenterHall) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExamCenterHall) predicate.ExamCenterHall {
	return predicate.ExamCenterHall(func(s *sql.Selector) {
		p(s.Not())
	})
}
