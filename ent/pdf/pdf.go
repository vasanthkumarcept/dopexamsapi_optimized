// Code generated by ent, DO NOT EDIT.

package pdf

import (
	"time"

	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the pdf type in the database.
	Label = "pdf"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldPath holds the string denoting the path field in the database.
	FieldPath = "path"
	// FieldFilename holds the string denoting the filename field in the database.
	FieldFilename = "filename"
	// FieldEventtime holds the string denoting the eventtime field in the database.
	FieldEventtime = "eventtime"
	// FieldExamcode holds the string denoting the examcode field in the database.
	FieldExamcode = "examcode"
	// FieldYear holds the string denoting the year field in the database.
	FieldYear = "year"
	// Table holds the table name of the pdf in the database.
	Table = "PDF"
)

// Columns holds all SQL columns for pdf fields.
var Columns = []string{
	FieldID,
	FieldPath,
	FieldFilename,
	FieldEventtime,
	FieldExamcode,
	FieldYear,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEventtime holds the default value on creation for the "eventtime" field.
	DefaultEventtime func() time.Time
)

// OrderOption defines the ordering options for the PDF queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByPath orders the results by the path field.
func ByPath(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPath, opts...).ToFunc()
}

// ByFilename orders the results by the filename field.
func ByFilename(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFilename, opts...).ToFunc()
}

// ByEventtime orders the results by the eventtime field.
func ByEventtime(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEventtime, opts...).ToFunc()
}

// ByExamcode orders the results by the examcode field.
func ByExamcode(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldExamcode, opts...).ToFunc()
}

// ByYear orders the results by the year field.
func ByYear(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldYear, opts...).ToFunc()
}
