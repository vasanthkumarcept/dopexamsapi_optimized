// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/deptexam/ActiveExamsByYear/{selectedyear}": {
            "get": {
                "description": "Get active exams for a given exam year without specifying CA Facility ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Query Active Exams by Exam Year without CA Facility ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active Exam fetched successfully by Exam year WithoutCAFacilityID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/ActiveExamsByYear/{selectedyear}/{circleidcontext}": {
            "get": {
                "description": "Get active exams for a given exam year and facility ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Query Active Exams by Exam Year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Circle ID Context",
                        "name": "circleidcontext",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active Exam fetched successfully by Exam year",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/CircleHeadQuarters/{id2}": {
            "get": {
                "description": "Get Circle HeadQuarters details based on Exam Conducted By",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facilities"
                ],
                "summary": "Query Circle HeadQuarters By Exam Conducted By",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Exam Conducted By",
                        "name": "id2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CircleHeadQuarters details extracted",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/CreateExamCityCenters": {
            "post": {
                "description": "Create a new exam city center with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamCityCenters"
                ],
                "summary": "Create a new exam city center",
                "parameters": [
                    {
                        "description": "Exam City Center",
                        "name": "examCityCenter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamCityCenterCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam City Center created successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamCityCenterCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/GetFacilitiesByCircleOfficeId/{id}": {
            "get": {
                "description": "Retrieve facilities by Circle Office ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facilities"
                ],
                "summary": "Get Facilities By Circle Office ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle Office ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/QueryCityNamesByNotiIDFromExamCenter/{id1}/{id2}": {
            "get": {
                "description": "Get city names associated with a specific exam ID from the exam center.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Query City Names by Exam ID from Exam Center",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID1",
                        "name": "id1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID2",
                        "name": "id2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "City Names fetched successfully by Exam year",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/QueryCityNamesByNotificationIDFromExamCenter/{id1}/{id2}/{id3}": {
            "get": {
                "description": "Get city names associated with a specific notification ID, exam ID, and code from the exam center.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Query City Names by Notification ID from Exam Center",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "id1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "id2",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Code",
                        "name": "id3",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active Exam fetched successfully by Notification ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/QueryExamCityNamesForIPExam/{notificationnumber}/{examyear}/{examcode}": {
            "get": {
                "description": "Get city names associated with a specific notification number, exam year, and exam code for IP Exam.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Query Exam City Names for IP Exam",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification Number",
                        "name": "notificationnumber",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam city extracted successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/RegionHeadQuarters/{id2}": {
            "get": {
                "description": "Get Region HeadQuarters details based on Exam Conducted By",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facilities"
                ],
                "summary": "Query Region HeadQuarters By Exam Conducted By",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID of the Exam Conducted By",
                        "name": "id2",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/center/get/{id}": {
            "get": {
                "description": "Get details of a specific exam center by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodal"
                ],
                "summary": "Get Center ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Center ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Active Exam fetched successfully by Exam year",
                        "schema": {
                            "$ref": "#/definitions/handlers.CenterrResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/center/submit": {
            "post": {
                "description": "Create a new exam center",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodal"
                ],
                "summary": "Create Exam Center",
                "parameters": [
                    {
                        "description": "Exam Center Data",
                        "name": "examCenter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CenterReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Exam Centre Created successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.CenterrResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/center/update/{id}": {
            "put": {
                "description": "Update an existing exam center by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamCenters"
                ],
                "summary": "Update an Exam Center",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Center ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Exam Center Data",
                        "name": "center",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CenterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam Centre Updated",
                        "schema": {
                            "$ref": "#/definitions/handlers.CenterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/centers/{id1}/{id2}/{id3}/{id4}": {
            "get": {
                "description": "Get exam centres based on Nodal Office ID, Exam Code, and City ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodal"
                ],
                "summary": "Get Exam Centres by Nodal Office ID and Exam Code",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "id1",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nodal Office ID",
                        "name": "id2",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Additional Parameter",
                        "name": "id3",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "City ID",
                        "name": "id4",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam Center fetched successfully by NodalOffice ID ",
                        "schema": {
                            "$ref": "#/definitions/handlers.CenterrResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/centersByCircleID/{id}": {
            "get": {
                "description": "Retrieve all exam city centers for a specified circle ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamCityCenters"
                ],
                "summary": "Get Exam City Centers by Circle ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Circle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam City Center retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamCityCenterCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/centersBycity/{id}": {
            "get": {
                "description": "Retrieve all exam city centers for a specified city",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamCityCenters"
                ],
                "summary": "Get Exam City Centers by City",
                "parameters": [
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam City Center retrieved  successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamCityCenterCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/employeedisbilitytypes": {
            "get": {
                "description": "Get all disability types from the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disability"
                ],
                "summary": "Get all disability types",
                "responses": {
                    "200": {
                        "description": "Successfully all disability types Retrieved",
                        "schema": {
                            "$ref": "#/definitions/handlers.DisabilityResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new Disability type with given parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Disability"
                ],
                "summary": "Create a new Disability type",
                "parameters": [
                    {
                        "description": "Disability data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.DisabilityRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created the Disability Types",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/examcalendars": {
            "get": {
                "description": "Get a list of all exam calendars",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamCalendars"
                ],
                "summary": "Get all exam calendars",
                "responses": {
                    "200": {
                        "description": "Exam calender fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamCalendarsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/examcalendars/{id}": {
            "get": {
                "description": "Get a list of all exam calendars by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamCalendars"
                ],
                "summary": "Get all exam calendars by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Calendar ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam calender fetched successfully by ID",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamCalendarsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/exams": {
            "get": {
                "description": "Fetch all available exams.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Get Exams",
                "responses": {
                    "200": {
                        "description": "Active Exam fetched successfully by Exam year",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/exams/statistics/fordirectorate/circlewise/get/examyear{examcode}/{examyear}": {
            "get": {
                "description": "Get the statistics of exam applications for directorate circle wise based on the exam code and exam year.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Get Exam Statistics for Directorate Circle Wise",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting Nodal officer statistics done successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamStatisticsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/exams/statistics/fordirectorate/get/{examcode}/{selectedyear}": {
            "get": {
                "description": "Get the statistics of exam applications for directorate based on the exam code and selected year.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Get Exam Applications Statistics for Directorate",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting statistics based on application status done successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamStatisticsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/exams/statistics/get/{examcode}/{nofacilityid}/{examyear}": {
            "get": {
                "description": "Get the statistics of exam applications for Nodal Officer based on the exam code, facility ID, and exam year.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Get Exam Applications Statistics for Nodal Officer",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "nofacilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Getting statistics based on application status done successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamStatisticsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/exams/statistics/officewise/get/{examcode}/{nofacilityid}/{examyear}": {
            "get": {
                "description": "Get the statistics of exam applications office-wise based on the exam code and facility ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Exam"
                ],
                "summary": "Get Exam Applications Statistics Office Wise",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nodal Office Facility ID",
                        "name": "nofacilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ExamApplications Statistics fetched Successfully",
                        "schema": {
                            "$ref": "#/definitions/handlers.ExamStatisticsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/facilities/byfacilityofficeid/{workingofficefacilityid}": {
            "get": {
                "description": "Get details of a facility based on the given office ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facilities"
                ],
                "summary": "Get facility details by office ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Office ID",
                        "name": "workingofficefacilityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facily details extracted",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/notification/GetDraftNotification/{examid}/{examyear}/{officetype}/{facilityid}": {
            "get": {
                "description": "Fetch notification based on Exam code, Exam year, Office type, and facility ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamNotifications"
                ],
                "summary": "Get Draft Notification",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam ID",
                        "name": "examid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Office Type",
                        "name": "officetype",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched notification based on Exam code, Exam year, Office type and facility ID",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/notification/PutIssueNotificationSingle": {
            "put": {
                "description": "Issue a single exam notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamNotifications"
                ],
                "summary": "Issue a Single Notification",
                "parameters": [
                    {
                        "description": "Issue Notification",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.IssueNotificationStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification issued successfully ",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/notification/UpdateResubmitDraftNotification": {
            "put": {
                "description": "Update and resubmit a draft notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamNotifications"
                ],
                "summary": "Update and Resubmit Draft Notification",
                "parameters": [
                    {
                        "description": "Update Notification",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.UpdateNotificationStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification Updated Sucessfully ",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/notification/create": {
            "post": {
                "description": "Create a new exam notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamNotifications"
                ],
                "summary": "Create Exam Notification",
                "parameters": [
                    {
                        "description": "Exam Notification",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CreateNotificationStruct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created the Notification",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/deptexam/notification/getPNDnotifications/{circleid}": {
            "get": {
                "description": "Get all PND notifications for a specific circle",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamNotifications"
                ],
                "summary": "Get PND Notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Circle ID",
                        "name": "circleid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification details fetched ",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/generate-hallticket-numbers": {
            "post": {
                "description": "Generates hall ticket numbers for a given exam year, exam code, and nodal officer facility ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Generate Hall Ticket Numbers",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.GenerateHallticketRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hall Ticket generation done successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/notification/getallnotificationsmax/{examyear}/{circleid}": {
            "get": {
                "description": "Get all notifications for a specific exam year and circle ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ExamNotifications"
                ],
                "summary": "Get All Notifications by Year and Circle ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Circle ID",
                        "name": "circleid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification details fetched ",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/Applications/Submit": {
            "post": {
                "description": "Submit new GDS to PM/MG/MTS applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Create new GDS to PM/MG/MTS applications",
                "parameters": [
                    {
                        "description": "New GDS to PM/MG/MTS Application Data",
                        "name": "newPAAppplns",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ApplicationGDSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GDS to PM/MG/MTS application submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.CreateGDSPMResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/Applications/resubmit": {
            "put": {
                "description": "Resubmit GDS to PM/MG/MTS applications with updated remarks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Resubmit GDS to PM/MG/MTS applications",
                "parameters": [
                    {
                        "description": "Resubmit GDS PM Application",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ReApplicationGDSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GDS to PM/MG/MTS application re-submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.CreateGDSPMResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/Halltickets": {
            "put": {
                "description": "Generates hall ticket numbers for GDSPM based on the provided exam year, exam code, and nodal officer facility ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Generate Hall Ticket Numbers for GDSPM",
                "parameters": [
                    {
                        "description": "Request body to generate hall ticket numbers",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.requestBodyy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hall Ticket generation done successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/applications/Verify": {
            "put": {
                "description": "Verify GDS to PM/MG/MTS applications by updating remarks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Verify GDS to PM/MG/MTS applications",
                "parameters": [
                    {
                        "description": "Verify GDS PM Application",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.VerifyApplicationGDSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GDS to PM/MG/MTS application verified successfully",
                        "schema": {
                            "$ref": "#/definitions/start.CreateGDSPMResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/applications/getbyempid/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetch GDS to PM/MG/MTS applications for a given employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get GDS to PM/MG/MTS applications by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/applications/vaVerify": {
            "put": {
                "description": "Verify GDS to PM/MG/MTS applications with updated remarks by Sub Verifying Authority",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Verify GDS to PM/MG/MTS applications by Sub Verifying Authority",
                "parameters": [
                    {
                        "description": "Verify GDS PM Application by Sub Verifying Authority",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.VerifyApplicationVAGDSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GDS to PM/MG/MTS application verified successfully",
                        "schema": {
                            "$ref": "#/definitions/start.VerifyGDSPMVAApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/caprevremarks/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches old remarks for GDS to PM/MG/MTS applications pending with candidate based on employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get old remarks for GDS to PM/MG/MTS applications pending with candidate by employee ID and exam year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched old remarks for pending applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMCAPendingOldRemarksByEmpIdResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee or applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/center/updatecenters": {
            "put": {
                "description": "Updates exam centers for GDSPM applications and returns string response",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Update Exam Centers in GDSPM Applications and return string",
                "parameters": [
                    {
                        "description": "Request body to update exam centers",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ApplicationGDSPMforUpdateExamCenters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam centers updated successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getAllPendingWithCandidate/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches GDSPM applications that are pending with the candidate based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get all GDSPM applications pending with candidate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Applications fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallcapending/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches GDS to PM/MG/MTS applications that are pending with CA verifications based on employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get GDS to PM/MG/MTS application pending details by employee ID and exam year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched pending application details with CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee or applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallcapendingapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches all pending GDS to PM/MG/MTS applications that are awaiting CA verifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get all GDS to PM/MG/MTS applications pending CA verifications by facility ID and selected year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched pending applications with CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facility or applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallcaverified/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches the GDS to PM/MG/MTS application details that have been verified by CA based on Employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get CA verified GDS to PM/MG/MTS application details by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched application details with CA verified status",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee or application not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallcaverifiedapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches all GDS to PM/MG/MTS applications that have been verified by CA based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get all CA verified GDS to PM/MG/MTS applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched CA verified applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facility or applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallcaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches all GDS to PM/MG/MTS applications that have been verified by CA for a given facility and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get all GDS to PM/MG/MTS applications verified by CA for NA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully fetched applications verified by CA for NA",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facility or application not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallnaverified/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches GDSPM applications NA verified details by employee ID and exam year",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get GDSPM Applications NA Verified Details by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching NA verified application by employee ID",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallnaverifiedapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches GDSPM applications verified by NA based on facility ID and selected year",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get GDSPM Applications Verified by NA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applications verified by NA",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallnaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches GDSPM applications NA verified details for a specific facility and selected year",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get GDSPM Applications NA Verified Details for NA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applications verified by NA",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/getallvapendingapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches GDSPM applications that are pending verification by the VA (Verification Authority) based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get all GDSPM VA pending verifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Applications fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/hallticket/get/{examcode}/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches GDSPM applications with hall ticket based on exam code, employee ID, and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get GDSPM Hall Ticket by Exam Code and Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Applications fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/noverify": {
            "put": {
                "description": "Updates the nodal recommendations for a given GDSPM application based on Employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Update Nodal Recommendations for GDSPM by Employee ID",
                "parameters": [
                    {
                        "description": "GDSPM Application",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.NAVerifyApplicationGDSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nodal officer successfully verified the GDSPMMG application",
                        "schema": {
                            "$ref": "#/definitions/start.CreateGDSPMResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee or application not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GDSPMexams/recommendations/{employeeid}": {
            "get": {
                "description": "Fetches GDSPM exam recommendations based on Employee ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get GDSPM Exam Recommendations by Employee ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching recommendations by employee ID",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee or recommendations not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/GetFacilitiesByReportingOfficeId/{facilityid}": {
            "get": {
                "description": "Get the list of facilities associated with a specific reporting office ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facilities"
                ],
                "summary": "Get facilities by reporting office ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Facilities retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/Halltickets": {
            "put": {
                "description": "Generates hall ticket numbers for MTS to PM/MG applicants based on exam year, exam code, and nodal officer facility ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Generate hall ticket numbers for MTS to PM/MG applicants",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.requestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hall Ticket generation done successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/applications/getbyempid/{employeeid}/{examyear}": {
            "get": {
                "description": "Retrieves the MTS to PM/MG applications for a given employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get MTS to PM/MG Applications by Employee ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/applications/resubmit": {
            "put": {
                "description": "Resubmits the MTS to PM/MG application and updates its status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Resubmit MTS to PM/MG Application",
                "parameters": [
                    {
                        "description": "Re-Application Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ReApplicationGDSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MTS to PM/MG exam application re-submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.CreateApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/applications/submit": {
            "post": {
                "description": "Creates a new MTS to PM/MG application with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Create a new MTS to PM/MG application",
                "parameters": [
                    {
                        "description": "Request body for creating a new MTS to PM/MG application",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ApplicationMTSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MTS to PM/MG Application submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.CreateApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/applications/verify": {
            "put": {
                "description": "Verifies the MTS to PM/MG application and updates its status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Verify MTS to PM/MG Application",
                "parameters": [
                    {
                        "description": "Verify Application Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.VerifyApplicationMTSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "MTS to PM/MG exam application verified successfully",
                        "schema": {
                            "$ref": "#/definitions/start.CreateApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/caprevremarks/{employeeid}/{examyear}": {
            "get": {
                "description": "Retrieves old CA application remarks for MTS to PM/MG applications pending with a candidate based on employee ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get old CA application remarks by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applicatins pending with candiate with remarks",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/center/updatecenters": {
            "put": {
                "description": "Updates exam centers in MTS to PM/MG applications and returns the updated status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Update exam centers in MTS to PM/MG applications and return status",
                "parameters": [
                    {
                        "description": "Array of MTS to PM/MG applications with updated exam centers",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ApplicationMTSPMUpdatecenter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updating Exam centers for MTSPM Applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/getAllPendingWithCandidate/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Retrieves all MTS to PM/MG applications that are pending with the candidate based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get all MTS to PM/MG applications pending with candidate",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application pending with candidate",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/getallcapending/{employeeid}{examyear}": {
            "get": {
                "description": "Retrieves details of MTS to PM/MG applications pending CA verification for a given employee ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get MTS to PM/MG CA pending details by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched pending details with CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/getallcapendingapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Retrieves all MTS to PM/MG applications pending CA verifications for a given facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get all MTS to PM/MG CA pending verifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched pending applications with CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/getallcaverified/{employeeid}/{selectedyear}": {
            "get": {
                "description": "Retrieves details of MTS to PM/MG applications that are verified by CA for a given employee ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get details of MTS to PM/MG applications verified by CA based on employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applicatins pending with candiate with remarks",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/getallcaverifiedapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Retrieves all MTS to PM/MG applications that are verified by CA for a given facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get all MTS to PM/MG applications verified by CA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched CA Verified applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/getallcaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Retrieves all MTS to PM/MG applications that are verified by CA for NA for a given facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get all MTS to PM/MG applications verified by CA for NA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched CA Verified applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/getallnaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches MTS to PM/MG applications verified by National Authority (NA) for National Authority (NA) based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get all MTS to PM/MG applications verified by NA for NA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applications verified by NA",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/hallticket/get/{examcode}/{employeeid}/{selectedyear}": {
            "get": {
                "description": "Retrieves MTSPMMG hall ticket details based on exam code, employee ID, and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get MTSPMMG hall ticket details by exam code and employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected year",
                        "name": "selectedyear",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generate application with Hallticket Number",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/noverify": {
            "put": {
                "description": "Updates nodal recommendations for the MTS to PM/MG application and sends notifications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Update nodal recommendations for MTS to PM/MG by employee ID",
                "parameters": [
                    {
                        "description": "Nodal Verification Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.NAVerifyApplicationMTSPM"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nodal officer successfully verified this MTS to PM/MG application ",
                        "schema": {
                            "$ref": "#/definitions/start.CreateApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/MTSPMMGexams/recommendations/{employeeid}": {
            "get": {
                "description": "Fetches MTS to PM/MG exam recommendations based on employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get MTS to PM/MG exam recommendations by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching recommendations by employee ID",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Details not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/PSexams/Halltickets": {
            "put": {
                "description": "Fetches PS applications that are pending with candidates based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS applications pending with candidate for a specific facility and year",
                "parameters": [
                    {
                        "description": "Application data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.requestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Hall Ticket generation done successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/ChangeAdminPassword/{username}": {
            "put": {
                "description": "Changes the admin password with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Change the admin password",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request Body containing current and new password",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Password updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/deleteadminuserbyempid/{username}": {
            "delete": {
                "description": "Delete an admin user by username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Delete Admin User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Admin Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Admin user deletion information",
                        "name": "AdminUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.DeleteAdminMasterStruc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin Users deleted Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/getadminuserbyempid/{id}": {
            "get": {
                "description": "Retrieves admin user details based on the provided employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Admin Users by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin users fetched by EMployeeID successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/getadminuserbyfacilityrole/{facilityid}/{role}": {
            "get": {
                "description": "Get a list of admin users by facility ID and role",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get All Admin Users by Facility and Role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin users fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/getadminuserbyusername/{id}": {
            "get": {
                "description": "Retrieves admin user details based on the provided username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Get Admin Users by Username",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin users fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/getempmasteruserbyempid/{employeeid}": {
            "get": {
                "description": "Get details of an employee master user by their employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employee master user by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee master user retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/roles": {
            "get": {
                "description": "Get a list of all roles",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles",
                "responses": {
                    "200": {
                        "description": "List of roles retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/start.RollmasterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admin/roles/{id}": {
            "get": {
                "description": "Get details of a specific role by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Roles"
                ],
                "summary": "Get role by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Role ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully retreived",
                        "schema": {
                            "$ref": "#/definitions/start.RollmasterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admins/reset/savenewpassword": {
            "post": {
                "description": "Saves a new password for the admin user after validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Reset Save New Password",
                "parameters": [
                    {
                        "description": "Request Body containing the username and new password",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucAdminResetSaveNewPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin user password reset  successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admins/reset/validateOTP": {
            "post": {
                "description": "Validates the OTP for admin user reset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Admin Reset Validate OTP",
                "parameters": [
                    {
                        "description": "Request Body containing the username and OTP",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucAdminResetValidateOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin user OTP Verified Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/admins/reset/validateusername": {
            "post": {
                "description": "Validates admin user details based on the provided username and triggers OTP for verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Validate Admin User by Username",
                "parameters": [
                    {
                        "description": "Admin user validation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucAdminResetValidateUserName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin users fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/adminusers/verifyloginn": {
            "post": {
                "description": "Authenticates an admin user based on OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Verify Admin Login",
                "parameters": [
                    {
                        "description": "Admin Login Validate OTP",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.AdminLoginValidateOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin user authenticated  successfully",
                        "schema": {
                            "$ref": "#/definitions/start.VerifyAdminLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/adminusers/verifynewUser": {
            "post": {
                "description": "Verify admin login using OTP",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify admin login",
                "parameters": [
                    {
                        "description": "Change Password Request",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Password updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/adminusers/verifyuserr": {
            "post": {
                "description": "Authenticates an admin user based on username and password, and sends an OTP to the registered mobile number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Verify Admin User Login",
                "parameters": [
                    {
                        "description": "Admin Login Generate OTP",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.AdminLoginGenerateOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OTP sent to registered mobile number",
                        "schema": {
                            "$ref": "#/definitions/start.VerifyAdminUserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/candidatecreate": {
            "post": {
                "description": "Create a new candidate user with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create a candidate user",
                "parameters": [
                    {
                        "description": "Candidate Details",
                        "name": "candidate",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CandidateCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee master user retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/center/updatecenters/IP": {
            "put": {
                "description": "Update the exam centers in IP applications with the provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Update Exam Centers in IP Applications",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.UpdateExamCentersInIP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updating Exam centers for IP Applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/employees/search/byempid/{employeeid}": {
            "get": {
                "description": "Fetches Employee details for a given employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get Employee details by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee details fetched",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/empmaster/GetEmployeesBasedOnCA/{cafacilityid}": {
            "get": {
                "description": "Get details of employees based on CA Facility ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Get employees based on CA Facility ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "CA Facility ID",
                        "name": "cafacilityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/empmaster/createemployee": {
            "post": {
                "description": "Create a new employee master record in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Create a new Employee Master",
                "parameters": [
                    {
                        "description": "Employee Master Data",
                        "name": "empMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucCreateEmployeeMaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee Master created  successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/empmaster/modifyemployee": {
            "put": {
                "description": "Modify an employee master record in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "Modify an existing Employee Master",
                "parameters": [
                    {
                        "description": "Modify Employee Master Data",
                        "name": "modifyEmpMaster",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucModifyEmployeeMaster"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee Master modified  successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/empmaster/viewemployee/{employeeid}": {
            "get": {
                "description": "Get details of an employee master record by employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Employee"
                ],
                "summary": "View an existing Employee Master",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Employee master user retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/facilities/byPincode/{pincode}": {
            "get": {
                "description": "Get details of offices based on the given pincode",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Facilities"
                ],
                "summary": "Get offices by pincode",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pincode",
                        "name": "pincode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Office retrieved based on pincode successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/getExamApplicationsByCityPref/{examYear}/{examcode}/{cityid}": {
            "get": {
                "description": "Fetch the application count based on Exam city",
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get Exam Applications Preference City Wise Stats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examYear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "cityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application count based on Exam city",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/getExamApplicationsByCityPrefGDSPM/{examYear}/{examcode}/{cityid}": {
            "get": {
                "description": "Fetches statistics for GDSPM exam applications based on exam year, exam code, and city ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Get Exam Applications Preference City Wise Statistics for GDSPM",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examYear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "cityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Data not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/getExamApplicationsByCityPrefMTSPMMG/{examYear}/{examcode}/{cityid}": {
            "get": {
                "description": "Retrieves statistics on exam application preferences city-wise based on exam year, exam code, and city ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Get exam application preference statistics city-wise for MTS to PM/MG exams",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examYear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "cityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application count based on Exam city ",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/getExamApplicationsByCityPrefPS/{examYear}/{examcode}/{cityid}": {
            "get": {
                "description": "Fetches the application count based on exam city for a specific exam year, exam code, and city ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get Exam Applications Preference City-Wise Stats for PS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examYear",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Code",
                        "name": "examcode",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "City ID",
                        "name": "cityid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application count based on Exam city",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/applications/getbyempid/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches IP applications details for a given employee ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get Applications details by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/applications/resubmit": {
            "put": {
                "description": "Re-Submit an IP application based on provided by Applicant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Re-Submit IP Application",
                "parameters": [
                    {
                        "description": "IP Application Data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ResubmitApplicationIp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IP application re-submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.VerifyIPApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/applications/submit": {
            "post": {
                "description": "Submit an new IP application based on provided by Applicant.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Create IP Application",
                "parameters": [
                    {
                        "description": "IP Application Data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ApplicationIp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IP Application submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.VerifyIPApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/applications/verify": {
            "put": {
                "description": "Verifies an IP application based on provided details By CA.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Verify IP Application By CA",
                "parameters": [
                    {
                        "description": "IP Application Data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.VerifyApplicationIp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "IP application verified successfully",
                        "schema": {
                            "$ref": "#/definitions/start.VerifyIPApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/caprevremarks/{employeeid}/{selectedyear}": {
            "get": {
                "description": "Fetches IP applications CA pending with candiate with remarks for a given employee ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get CA Pending with candiate with remarks details by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applicatins pending with candiate with remarks",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getAllPendingWithCandidate/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches IP applications pending with Candidate by facility ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get All Applications pending with Candidate by Facility ID and year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application pending with candidate",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallcapending/{employeeid}/{selectedyear}": {
            "get": {
                "description": "Fetches IP applications CA pending for a given employee ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get CA Pending details by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application pending with CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallcapendingapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches all IP applications pending CA verifications for a given facility and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get all pending CA verifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched CA Verified applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallcaverified/{employeeid}/{selectedyear}": {
            "get": {
                "description": "Fetches IP applications verified by CA for a given employee ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get CA verified details by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched data based on employeeid with Verified status",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallcaverifiedapplications/{facilityid}/{selectedyear}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get all CA verified applications for a given facility and year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched CA Verified applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallcaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches IP applications  all CA Verified by facility ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get All CA Verified by Facility ID and year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applications verified by CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallnaverified/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches IP applications NA Verified by Employee ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get NA Verified by Employee ID and year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching NA verified application by employee ID",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallnaverifiedapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches IP applications all NA Verified by facilityID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get all NA Verified by facilityID and year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching all NA Verified application",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/getallnaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches IP applications  all NA Verified by facility ID and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get All NA Verified by Facility ID and year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applications verified by NA",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/hallticket/get/{examname}/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches All Exam HallTicket  by Examcode employeeid and year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get All Exam HallTicket  by Examcode employeeid and year",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Exam Code",
                        "name": "examname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applications generated with Hall ticket",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/halltickets/{examyear}": {
            "put": {
                "description": "Generates hall ticket numbers for a given exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Generate Hall Ticket Numbers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generation of Hall ticket number",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/noverify": {
            "put": {
                "description": "Update nodal recommendations for IP applications by employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Update Nodal Recommendations for IP by Employee ID",
                "parameters": [
                    {
                        "description": "Request Body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.NAVerifyApplicationIp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nodal officer successfully verified this IP application",
                        "schema": {
                            "$ref": "#/definitions/start.VerifyIPApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/ipexams/recommendations/{employeeid}": {
            "get": {
                "description": "Fetches IP applications Recommendations for a given employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Get Application Recommendations by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching recommendations by employee ID",
                        "schema": {
                            "$ref": "#/definitions/start.GetAllCAPendingVerificationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/profile": {
            "post": {
                "description": "Create a new user with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User  data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.UserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created the User",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/profileadmin": {
            "post": {
                "description": "Creates a new admin user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Create a new admin user",
                "parameters": [
                    {
                        "description": "Admin creation request",
                        "name": "adminRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.AdminCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin creation succesfully registerd",
                        "schema": {
                            "$ref": "#/definitions/start.AdminCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/profileadminupdate": {
            "put": {
                "description": "Update an existing admin user's information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Admin"
                ],
                "summary": "Update Admin User",
                "parameters": [
                    {
                        "description": "Admin user information",
                        "name": "AdminUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.UpdateAdminMasterStruc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admin Users updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.AdminUserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No Articles are invoiced to the beat",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/applications/getbyempid/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetch PS Group B exam applications by employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS Applications by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Exam Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application details fetched successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/applications/resubmit": {
            "put": {
                "description": "Resubmit a PS Group B exam application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Resubmit PS Application",
                "parameters": [
                    {
                        "description": "Application data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ReApplicationGroupB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PS Group B Exam application re-submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.PsGroupBResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/applications/submit": {
            "post": {
                "description": "Create a new PS Group B exam application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Create new PS Applications",
                "parameters": [
                    {
                        "description": "Application data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.ApplicationGroupB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PS Group B Exam Application submitted successfully",
                        "schema": {
                            "$ref": "#/definitions/start.PsGroupBResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/applications/verify": {
            "put": {
                "description": "Verify a PS Group B exam application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Verify PS Application By CA",
                "parameters": [
                    {
                        "description": "Application data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.VerifyApplicationGroupB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PS Group B exam application verified successfully",
                        "schema": {
                            "$ref": "#/definitions/start.PsGroupBResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/caprevremarks/{employeeid}/{examyear}": {
            "get": {
                "description": "Fetches PS Group A applications pending with candidate along with old remarks by employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS Group A pending old remarks by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "examyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching applicatins pending with candiate with remarks",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/center/updatecenters": {
            "post": {
                "description": "Update exam centers in PS applications with new data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Update exam centers in PS applications",
                "parameters": [
                    {
                        "description": "JSON array of PS exam applications",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.ApplicationGroupBCenter"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updating Exam centers for IP Applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getAllPSPendingWithCandidate/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches PS applications that are pending with candidates based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS applications pending with candidate for a specific facility and year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application pending with candidate ",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallcapending/{employeeid}/{selectedyear}": {
            "get": {
                "description": "Fetches PS Group A applications pending verification by CA for a specific employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS Group A pending details by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application pending with CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallcapendingapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches all pending PS Group A applications pending verification by CA for a specific facility and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get all PS Group A pending verifications by CA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched pending application with CA",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallcaverified/{employeeid}/{selectedyear}": {
            "get": {
                "description": "Fetches PS Group A applications verified by CA for a specific Employee ID and exam year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS Group A verified applications by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched data based on employeeid with Verified status",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallcaverifiedapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches PS Group A applications verified by CA for a specific facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS Group A verified applications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched CA Verified applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallcaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches PS applications verified by CA for a specific facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS applications verified by CA for NA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application verified by CA for NA",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallnaverified/{employeeid}": {
            "get": {
                "description": "Fetches PS applications verified by NA based on employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS applications verified by NA for a specific employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching NA verified application by employee ID",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallnaverifiedapplications/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches PS applications verified by NA based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS applications verified by NA",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching all NA Verified application",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/getallnaverifiedapplicationsforna/{facilityid}/{selectedyear}": {
            "get": {
                "description": "Fetches PS applications verified by NA based on facility ID and selected year",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS applications verified by NA for a specific facility and year",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Facility ID",
                        "name": "facilityid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Selected Year",
                        "name": "selectedyear",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updating Exam centers for IP Applications",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/noverify": {
            "put": {
                "description": "Updates nodal recommendations for PS GroupB applications based on Employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Update Nodal Recommendations for PS by Employee ID",
                "parameters": [
                    {
                        "description": "Application GroupB data",
                        "name": "newAppln",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.NAVerifyApplicationGroupB"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Nodal officer successfully verified this PS GroupB application ",
                        "schema": {
                            "$ref": "#/definitions/start.PsGroupBResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/psexams/recommendations/{employeeid}": {
            "get": {
                "description": "Fetches PS exam recommendations based on employee ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Get PS exam recommendations by Employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "employeeid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching recommendations by employee ID",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/updateCenterCodeForApplications": {
            "put": {
                "description": "Update the center code for multiple applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "IP Exam Application"
                ],
                "summary": "Update Center Code For Applications",
                "parameters": [
                    {
                        "description": "Request Data Array",
                        "name": "requestData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "properties": {
                                    "controllingOfficeFacilityID": {
                                        "type": "string"
                                    },
                                    "examCenterID": {
                                        "type": "integer"
                                    },
                                    "examCityID": {
                                        "type": "integer"
                                    },
                                    "seatsToAllot": {
                                        "type": "integer"
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Total Number of Applications Updated with center code Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.UpdateCenterCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/updateCenterCodeForApplicationsGDSPM": {
            "put": {
                "description": "Updates center codes for GDSPM applications based on provided data array",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "GDS PM Applications"
                ],
                "summary": "Update Center Code for Applications in GDSPM",
                "parameters": [
                    {
                        "description": "Array of request data to update center codes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "controllingOfficeFacilityID": {
                                            "type": "string"
                                        },
                                        "examCenterID": {
                                            "type": "integer"
                                        },
                                        "examCityID": {
                                            "type": "integer"
                                        },
                                        "seatsToAllot": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Applications updated successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetGDSPMApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/updateCenterCodeForApplicationsMTSPMMG": {
            "put": {
                "description": "Update center code for applications based on preferences, center code, reporting office name, and seats to allot",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MTSPM Applications"
                ],
                "summary": "Update center code for applications in MTSPMMG",
                "parameters": [
                    {
                        "description": "Array of request data to update center codes",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "controllingOfficeFacilityID": {
                                            "type": "string"
                                        },
                                        "examCenterID": {
                                            "type": "integer"
                                        },
                                        "examCityID": {
                                            "type": "integer"
                                        },
                                        "seatsToAllot": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetching application count based on Exam city ",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/updateCenterCodeForApplicationsPS": {
            "put": {
                "description": "Updates the center code for PS applications based on provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PS GroupB Applications"
                ],
                "summary": "Update Center Code for Applications",
                "parameters": [
                    {
                        "description": "Request Data Array",
                        "name": "requestDataArray",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "controllingOfficeFacilityID": {
                                            "type": "string"
                                        },
                                        "examCenterID": {
                                            "type": "integer"
                                        },
                                        "examCityID": {
                                            "type": "integer"
                                        },
                                        "seatsToAllot": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "All Applications Updated with center code Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.GetApplicationsResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applications not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/ChangeUserPassword": {
            "put": {
                "description": "Change the password of a user by their username",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "Change Password Request",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Password updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/changepassword/{id}": {
            "put": {
                "description": "Change the password of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Change Password Request",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.RequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New Password updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/getpassword/{id1}": {
            "get": {
                "description": "Get the password of a user by their employee ID and send it via SMS",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get password by employee ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Employee ID",
                        "name": "id1",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Your current password is Successfully Senty",
                        "schema": {
                            "$ref": "#/definitions/start.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/login": {
            "post": {
                "description": "Verify a user's login credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify user login",
                "parameters": [
                    {
                        "description": "User login data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CandidateRegistrationGenerateOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User login verified successfully",
                        "schema": {
                            "$ref": "#/definitions/start.EmployeeMasterResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/new/submit": {
            "post": {
                "description": "Create a new user and send OTP for verification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user for the first time",
                "parameters": [
                    {
                        "description": "New User Data",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CandidateRegistrationGenerateOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New User created successfully",
                        "schema": {
                            "$ref": "#/definitions/start.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/new/update": {
            "post": {
                "description": "Update details of a first-time user based on provided information and OTP validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update first-time user details",
                "parameters": [
                    {
                        "description": "New User Details",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CandidateRegistrationOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New User updated successfully",
                        "schema": {
                            "$ref": "#/definitions/start.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/reset/savenewpassword": {
            "post": {
                "description": "Save new password for a user after password reset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Save new password after user reset",
                "parameters": [
                    {
                        "description": "User reset save new password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucUserResetSaveNewPassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User password reset successfully ",
                        "schema": {
                            "$ref": "#/definitions/start.UserResetSaveNewPasswordResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/reset/validateOTP": {
            "post": {
                "description": "Validates the OTP for user reset process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Validate OTP for User Reset",
                "parameters": [
                    {
                        "description": "User Reset Validate OTP",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucUserResetValidateOTP"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User OTP intiated",
                        "schema": {
                            "$ref": "#/definitions/start.UserResetValidateOTPResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/reset/validateusername": {
            "post": {
                "description": "Validate the username and send OTP for password reset.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Validate username during password reset",
                "parameters": [
                    {
                        "description": "User reset validate username request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.StrucUserResetValidateUserName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/start.UserResetValidateUserNameResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/rect/users/updatepassword/{id}": {
            "put": {
                "description": "Update the password of a user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user password",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Details",
                        "name": "newUser",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/candidate_registation.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password updated Successfully",
                        "schema": {
                            "$ref": "#/definitions/start.UserResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Facilities not found",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/start.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "candidate_registation.AdminCreation": {
            "type": "object",
            "required": [
                "AuthorityFacilityName",
                "CircleOfficeFacilityId",
                "CircleOfficeName",
                "CreatedByDesignation",
                "CreatedByEmpId",
                "CreatedById",
                "CreatedByUserName",
                "Designation",
                "EmailID",
                "EmployeeId",
                "EmployeeName",
                "FacilityID",
                "FacilityIdUniqueid",
                "FacilityType",
                "Mobile",
                "ReportingOfficeFacilityID",
                "ReportingOfficeFacilityName",
                "RoleUserCode",
                "RoleUserDescription",
                "UserName",
                "edges"
            ],
            "properties": {
                "AuthorityFacilityName": {
                    "type": "string"
                },
                "CircleOfficeFacilityId": {
                    "type": "string"
                },
                "CircleOfficeName": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedByEmpId": {
                    "type": "integer"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByUserName": {
                    "type": "string"
                },
                "Designation": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeId": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "FacilityID": {
                    "type": "string"
                },
                "FacilityIdUniqueid": {
                    "type": "integer"
                },
                "FacilityType": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeFacilityName": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "integer"
                },
                "RoleUserDescription": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.AdminLoginGenerateOTP": {
            "type": "object",
            "required": [
                "Password",
                "UserName",
                "edges"
            ],
            "properties": {
                "Password": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.AdminLoginValidateOTP": {
            "type": "object",
            "required": [
                "OTP",
                "UserName",
                "edges"
            ],
            "properties": {
                "OTP": {
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.ApplicationDataN": {
            "type": "object",
            "properties": {
                "NO_Recommendations": {
                    "type": "string"
                },
                "NO_Remarks": {
                    "type": "string"
                },
                "VacancyYear": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.ApplicationDataNV": {
            "type": "object",
            "properties": {
                "NO_Recommendations": {
                    "type": "string"
                },
                "NO_Remarks": {
                    "type": "string"
                },
                "Post": {
                    "type": "string"
                },
                "VacancyYear": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.ApplicationDataV": {
            "type": "object",
            "properties": {
                "CA_Recommendations": {
                    "type": "string"
                },
                "CA_Remarks": {
                    "type": "string"
                },
                "VacancyYear": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.ApplicationDataVV": {
            "type": "object",
            "properties": {
                "CA_Recommendations": {
                    "type": "string"
                },
                "CA_Remarks": {
                    "type": "string"
                },
                "Post": {
                    "type": "string"
                },
                "VacancyYear": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.ApplicationGDSPM": {
            "type": "object",
            "required": [
                "CategoryCode",
                "CategoryDescription",
                "CenterFacilityId",
                "CenterId",
                "CentrePreference",
                "ClaimingQualifyingService",
                "ControllingOfficeFacilityID",
                "ControllingOfficeName",
                "DOB",
                "EducationDescription",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "FacilityUniqueID",
                "FeederPostJoiningDate",
                "Gender",
                "LienControllingOfficeID",
                "LienControllingOfficeName",
                "MobileNumber",
                "NodalOfficeFacilityID",
                "NodalOfficeName",
                "Photo",
                "PhotoPath",
                "PostPreferences",
                "PresentDesignation",
                "ServiceLength",
                "Signature",
                "SignaturePath",
                "TempHallTicket",
                "UnitPreferences",
                "UserID",
                "WorkingOfficeCircleFacilityID",
                "WorkingOfficeCircleName",
                "WorkingOfficeFacilityID",
                "WorkingOfficeName",
                "WorkingOfficePincode",
                "edges"
            ],
            "properties": {
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PostPreferences": {
                    "type": "array",
                    "items": {}
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "SubdivisionOfficeFacilityID": {
                    "type": "string"
                },
                "SubdivisionOfficeName": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UnitPreferences": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.ApplicationGDSPMforUpdateExamCenters": {
            "type": "object",
            "properties": {
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PostPreferences": {
                    "type": "array",
                    "items": {}
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "SubdivisionOfficeFacilityID": {
                    "type": "string"
                },
                "SubdivisionOfficeName": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UnitPreferences": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.ApplicationGroupB": {
            "type": "object",
            "required": [
                "CategoryCode",
                "CategoryDescription",
                "CenterFacilityId",
                "CenterId",
                "CentrePreference",
                "ClaimingQualifyingService",
                "ControllingOfficeFacilityID",
                "ControllingOfficeName",
                "DCCS",
                "DOB",
                "DisabilityTypeDescription",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "EntryPostDescription",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "FacilityUniqueID",
                "FeederPostCode",
                "FeederPostDescription",
                "FeederPostJoiningDate",
                "Gender",
                "LienControllingOfficeID",
                "LienControllingOfficeName",
                "MobileNumber",
                "NodalOfficeFacilityID",
                "NodalOfficeName",
                "Photo",
                "PhotoPath",
                "PresentDesignation",
                "PresentPostCode",
                "PresentPostDescription",
                "ServiceLength",
                "Signature",
                "SignaturePath",
                "TempHallTicket",
                "UserID",
                "WorkingOfficeCircleFacilityID",
                "WorkingOfficeCircleName",
                "WorkingOfficeFacilityID",
                "WorkingOfficeName",
                "WorkingOfficePincode",
                "edges"
            ],
            "properties": {
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesPSApplicationData"
                }
            }
        },
        "candidate_registation.ApplicationIp": {
            "type": "object",
            "required": [
                "CategoryCode",
                "CategoryDescription",
                "CenterFacilityId",
                "CenterId",
                "CentrePreference",
                "ClaimingQualifyingService",
                "ControllingOfficeFacilityID",
                "ControllingOfficeName",
                "DOB",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "FacilityUniqueID",
                "FeederPostCode",
                "FeederPostDescription",
                "FeederPostJoiningDate",
                "Gender",
                "LienControllingOfficeID",
                "LienControllingOfficeName",
                "MobileNumber",
                "NodalOfficeFacilityID",
                "NodalOfficeName",
                "Photo",
                "PhotoPath",
                "PresentDesignation",
                "PresentPostCode",
                "PresentPostDescription",
                "ServiceLength",
                "Signature",
                "SignaturePath",
                "TempHallTicket",
                "WorkingOfficeCircleFacilityID",
                "WorkingOfficeCircleName",
                "WorkingOfficeFacilityID",
                "WorkingOfficeName",
                "WorkingOfficePincode",
                "edges"
            ],
            "properties": {
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesCircleData"
                }
            }
        },
        "candidate_registation.ApplicationMTSPM": {
            "type": "object",
            "required": [
                "CategoryCode",
                "CategoryDescription",
                "CenterFacilityId",
                "CenterId",
                "CentrePreference",
                "ClaimingQualifyingService",
                "ControllingOfficeFacilityID",
                "ControllingOfficeName",
                "DOB",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "EntryPostCode",
                "EntryPostDescription",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "FacilityUniqueID",
                "FeederPostCode",
                "FeederPostDescription",
                "FeederPostJoiningDate",
                "Gender",
                "LienControllingOfficeID",
                "LienControllingOfficeName",
                "MobileNumber",
                "NodalOfficeFacilityID",
                "NodalOfficeName",
                "Photo",
                "PhotoPath",
                "PostPreferences",
                "PresentDesignation",
                "PresentPostCode",
                "PresentPostDescription",
                "ReportingOfficeFacilityID",
                "ReportingOfficeName",
                "ServiceLength",
                "Signature",
                "SignaturePath",
                "TempHallTicket",
                "UnitPreferences",
                "UserID",
                "WorkingOfficeCircleFacilityID",
                "WorkingOfficeCircleName",
                "WorkingOfficeFacilityID",
                "WorkingOfficeName",
                "WorkingOfficePincode",
                "edges"
            ],
            "properties": {
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "GDSEngagement": {
                    "type": "array",
                    "items": {}
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PostPreferences": {
                    "type": "array",
                    "items": {}
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UnitPreferences": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.CandidateCreation": {
            "type": "object",
            "required": [
                "CreatedBy",
                "DOB",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "FacilityID",
                "Gender",
                "MobileNumber",
                "edges"
            ],
            "properties": {
                "CreatedBy": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "FacilityID": {
                    "type": "string"
                },
                "Gender": {
                    "$ref": "#/definitions/candidate_registation.Gender"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "UidToken": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.CandidateRegistrationGenerateOTP": {
            "type": "object",
            "required": [
                "Password",
                "UserName",
                "edges"
            ],
            "properties": {
                "Password": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.CandidateRegistrationOTP": {
            "type": "object",
            "required": [
                "EmailOTP",
                "OTP",
                "Password",
                "UserName",
                "edges"
            ],
            "properties": {
                "EmailOTP": {
                    "type": "integer"
                },
                "OTP": {
                    "type": "integer"
                },
                "Password": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.CenterReq": {
            "type": "object",
            "required": [
                "ExamCenterName",
                "MaxSeats",
                "NOUserName",
                "NodalOfficeFacilityID",
                "Status"
            ],
            "properties": {
                "Address": {
                    "type": "string"
                },
                "CenterCityName": {
                    "type": "string"
                },
                "CityID": {
                    "type": "integer"
                },
                "ConductedBy": {
                    "type": "string"
                },
                "ConductedByFacilityID": {
                    "type": "string"
                },
                "ExamCenterName": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamYear": {
                    "type": "integer"
                },
                "Landmark": {
                    "type": "string"
                },
                "MaxSeats": {
                    "type": "integer"
                },
                "NAUserName": {
                    "type": "string"
                },
                "NOUserName": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "Pincode": {
                    "type": "integer"
                },
                "Status": {
                    "type": "boolean"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.CenterRequest": {
            "type": "object",
            "required": [
                "Address",
                "CenterCityName",
                "CircleID",
                "CityID",
                "DivisionID",
                "ExamCenterName",
                "ExamCode",
                "ExamName",
                "ExamNameCode",
                "FacilityID",
                "NodalOfficerCode",
                "Pincode",
                "RegionID"
            ],
            "properties": {
                "Address": {
                    "type": "string"
                },
                "AdminCircleOfficeID": {
                    "type": "string"
                },
                "CenterCityName": {
                    "type": "string"
                },
                "CircleID": {
                    "type": "integer"
                },
                "CityID": {
                    "type": "integer"
                },
                "ConductedBy": {
                    "type": "string"
                },
                "ConductedByFacilityID": {
                    "type": "string"
                },
                "DivisionID": {
                    "type": "integer"
                },
                "ExamCenterName": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamNameCode": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityID": {
                    "type": "integer"
                },
                "Landmark": {
                    "type": "string"
                },
                "MaxSeats": {
                    "type": "integer"
                },
                "NAUserName": {
                    "type": "string"
                },
                "NoAlloted": {
                    "type": "integer"
                },
                "NodalOfficeFacilityId": {
                    "type": "string"
                },
                "NodalOfficerCode": {
                    "type": "integer"
                },
                "Papers": {
                    "description": "Assuming Papers is a list of strings",
                    "type": "array",
                    "items": {}
                },
                "PendingSeats": {
                    "type": "integer"
                },
                "Pincode": {
                    "type": "integer"
                },
                "RegionID": {
                    "type": "integer"
                },
                "Status": {
                    "type": "boolean"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.CircleData": {
            "type": "object",
            "properties": {
                "PlacePrefNo": {
                    "type": "integer"
                },
                "PlacePrefValue": {
                    "type": "string"
                }
            }
        },
        "candidate_registation.CreateNotificationStruct": {
            "type": "object",
            "required": [
                "AdmitCardDate",
                "ApplicationEndDate",
                "ApplicationVerificationLastDate",
                "CenterAllotmentEndDate",
                "CrucialDate",
                "ExamCode",
                "ExamName",
                "ExamYear",
                "NodalOfficerApprovalDate",
                "OrderDate",
                "Papers",
                "ResubmittedApplicationVerificationDate",
                "UserName"
            ],
            "properties": {
                "AdmitCardDate": {
                    "type": "string"
                },
                "ApplicationCorrectionLastDate": {
                    "type": "string"
                },
                "ApplicationEndDate": {
                    "type": "string"
                },
                "ApplicationStartDate": {
                    "type": "string"
                },
                "ApplicationVerificationLastDate": {
                    "type": "string"
                },
                "CenterAllotmentEndDate": {
                    "type": "string"
                },
                "CircleOfficeFacilityId": {
                    "type": "string"
                },
                "CircleOfficeName": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByName": {
                    "type": "string"
                },
                "CrucialDate": {
                    "type": "array",
                    "items": {}
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "integer"
                },
                "IssuedBy": {
                    "type": "string"
                },
                "NodalOfficerApprovalDate": {
                    "type": "string"
                },
                "NotificationOrderNumber": {
                    "type": "string"
                },
                "NotificationStatus": {
                    "type": "string"
                },
                "OrderDate": {
                    "type": "string"
                },
                "Papers": {
                    "type": "array",
                    "items": {}
                },
                "ResubmittedApplicationVerificationDate": {
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.CreateUserRequest": {
            "type": "object",
            "required": [
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "Mobile",
                "Password",
                "UserName"
            ],
            "properties": {
                "CircleFacilityId": {
                    "type": "string"
                },
                "CircleFacilityName": {
                    "type": "string"
                },
                "CreatedAt": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedByEmployeeId": {
                    "type": "string"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByUserName": {
                    "type": "string"
                },
                "CreatedDate": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeletedByDesignation": {
                    "type": "string"
                },
                "DeletedByEmployeeId": {
                    "type": "string"
                },
                "DeletedById": {
                    "type": "integer"
                },
                "DeletedByUserName": {
                    "type": "string"
                },
                "DeletedDate": {
                    "type": "string"
                },
                "Designation": {
                    "type": "string"
                },
                "EmailCreatedAt": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmailNewPasswordRequest": {
                    "type": "boolean"
                },
                "EmailOTP": {
                    "type": "integer"
                },
                "EmailOTPExpiryTime": {
                    "type": "string"
                },
                "EmailOTPRemarks": {
                    "type": "string"
                },
                "EmailOTPSavedTime": {
                    "type": "string"
                },
                "EmailOTPTriggeredTime": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamCodePS": {
                    "type": "integer"
                },
                "FacilityID": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "ModifiedDate": {
                    "type": "string"
                },
                "Modifiedby": {
                    "type": "string"
                },
                "NewPasswordRequest": {
                    "type": "boolean"
                },
                "OTP": {
                    "type": "integer"
                },
                "OTPExpiryTime": {
                    "type": "string"
                },
                "OTPRemarks": {
                    "type": "string"
                },
                "OTPSavedTime": {
                    "type": "string"
                },
                "OTPTriggeredTime": {
                    "type": "string"
                },
                "Operationstatus": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "integer"
                },
                "Status": {
                    "type": "boolean"
                },
                "Statuss": {
                    "type": "string"
                },
                "UidToken": {
                    "type": "string"
                },
                "UpdatedDate": {
                    "type": "string"
                },
                "Updatedby": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "candidate_registation.DeleteAdminMasterStruc": {
            "type": "object",
            "required": [
                "AdminUniqueID",
                "DeletedByDesignation",
                "DeletedByEmpId",
                "DeletedById",
                "DeletedByUserName",
                "UserName",
                "edges"
            ],
            "properties": {
                "AdminUniqueID": {
                    "type": "integer"
                },
                "DeletedByDesignation": {
                    "type": "string"
                },
                "DeletedByEmpId": {
                    "type": "integer"
                },
                "DeletedById": {
                    "type": "integer"
                },
                "DeletedByUserName": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.EdgesCircleData": {
            "type": "object",
            "properties": {
                "CirclePrefRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.CircleData"
                    }
                },
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                }
            }
        },
        "candidate_registation.EdgesGDSPMApplicationData": {
            "type": "object",
            "properties": {
                "GDSPMApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataVV"
                    }
                },
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                }
            }
        },
        "candidate_registation.EdgesGDSPMApplicationDataNAv": {
            "type": "object",
            "properties": {
                "GDSPMApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataNV"
                    }
                },
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                }
            }
        },
        "candidate_registation.EdgesIPApplicatinData": {
            "type": "object",
            "properties": {
                "CirclePrefRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.CircleData"
                    }
                },
                "IPApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataV"
                    }
                },
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                }
            }
        },
        "candidate_registation.EdgesIPApplicatinDataNA": {
            "type": "object",
            "properties": {
                "CirclePrefRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.CircleData"
                    }
                },
                "IPApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataN"
                    }
                },
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                }
            }
        },
        "candidate_registation.EdgesLogdata": {
            "type": "object",
            "properties": {
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                }
            }
        },
        "candidate_registation.EdgesMTSPMApplicationData": {
            "type": "object",
            "properties": {
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                },
                "MTSPMMGApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataV"
                    }
                }
            }
        },
        "candidate_registation.EdgesMTSPMApplicationDataNA": {
            "type": "object",
            "properties": {
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                },
                "MTSPMMGApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataN"
                    }
                }
            }
        },
        "candidate_registation.EdgesPSApplicationData": {
            "type": "object",
            "properties": {
                "IPApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataV"
                    }
                },
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                }
            }
        },
        "candidate_registation.EdgesPSApplicationDataNo": {
            "type": "object",
            "properties": {
                "LogData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.LogData"
                    }
                },
                "PSApplicationsRef": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/candidate_registation.ApplicationDataN"
                    }
                }
            }
        },
        "candidate_registation.Gender": {
            "type": "string",
            "enum": [
                "Male",
                "Female",
                "Other"
            ],
            "x-enum-varnames": [
                "Male",
                "Female",
                "Other"
            ]
        },
        "candidate_registation.IssueNotificationStruct": {
            "type": "object",
            "required": [
                "AdmitCardDate",
                "ApplicationCorrectionLastDate",
                "ApplicationEndDate",
                "ApplicationStartDate",
                "ApplicationVerificationLastDate",
                "CenterAllotmentEndDate",
                "CrucialDate",
                "NodalOfficerApprovalDate",
                "OrderDate",
                "Papers",
                "ResubmittedApplicationVerificationDate"
            ],
            "properties": {
                "AdmitCardDate": {
                    "type": "string"
                },
                "ApplicationCorrectionLastDate": {
                    "type": "string"
                },
                "ApplicationEndDate": {
                    "type": "string"
                },
                "ApplicationStartDate": {
                    "type": "string"
                },
                "ApplicationVerificationLastDate": {
                    "type": "string"
                },
                "ApprovedBy": {
                    "type": "string"
                },
                "ApprovedByDesignation": {
                    "type": "string"
                },
                "ApprovedById": {
                    "type": "integer"
                },
                "ApprovedByName": {
                    "type": "string"
                },
                "CenterAllotmentEndDate": {
                    "type": "string"
                },
                "CircleOfficeFacilityId": {
                    "type": "string"
                },
                "CircleOfficeName": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByName": {
                    "type": "string"
                },
                "CrucialDate": {
                    "type": "array",
                    "items": {}
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "integer"
                },
                "Id": {
                    "type": "integer"
                },
                "IssuedBy": {
                    "type": "string"
                },
                "NodalOfficerApprovalDate": {
                    "type": "string"
                },
                "NotificationNumber": {
                    "type": "string"
                },
                "NotificationOrderNumber": {
                    "type": "string"
                },
                "NotificationRemarks": {
                    "type": "string"
                },
                "NotificationStatus": {
                    "type": "string"
                },
                "OrderDate": {
                    "type": "string"
                },
                "Papers": {
                    "type": "array",
                    "items": {}
                },
                "ResubmittedApplicationVerificationDate": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.LogData": {
            "type": "object",
            "required": [
                "IPAddress",
                "Latitude",
                "Longitude",
                "Remarks",
                "UserID"
            ],
            "properties": {
                "Action": {
                    "type": "string"
                },
                "Browser": {
                    "type": "string"
                },
                "IPAddress": {
                    "type": "string"
                },
                "Latitude": {
                    "type": "number"
                },
                "Longitude": {
                    "type": "number"
                },
                "OS": {
                    "type": "string"
                },
                "Remarks": {
                    "type": "string"
                },
                "UserID": {
                    "type": "string"
                },
                "UserType": {
                    "type": "string"
                }
            }
        },
        "candidate_registation.NAVerifyApplicationGDSPM": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "EmployeeID",
                "NA_EmployeeId",
                "NA_UserName",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NA_EmployeeDesignation": {
                    "type": "string"
                },
                "NA_EmployeeId": {
                    "type": "string"
                },
                "NA_GeneralRemarks": {
                    "type": "string"
                },
                "NA_Remarks": {
                    "type": "string"
                },
                "NA_UserName": {
                    "type": "string"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesGDSPMApplicationDataNAv"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.NAVerifyApplicationGroupB": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "ControllingOfficeFacilityID",
                "EmployeeID",
                "NA_EmployeeId",
                "NA_UserName",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NA_EmployeeDesignation": {
                    "type": "string"
                },
                "NA_EmployeeId": {
                    "type": "string"
                },
                "NA_GeneralRemarks": {
                    "type": "string"
                },
                "NA_Remarks": {
                    "type": "string"
                },
                "NA_UserName": {
                    "type": "string"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesPSApplicationDataNo"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.NAVerifyApplicationIp": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "EmployeeID",
                "NA_EmployeeId",
                "NA_UserName",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NA_EmployeeDesignation": {
                    "type": "string"
                },
                "NA_EmployeeId": {
                    "type": "string"
                },
                "NA_GeneralRemarks": {
                    "type": "string"
                },
                "NA_Remarks": {
                    "type": "string"
                },
                "NA_UserName": {
                    "type": "string"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesIPApplicatinDataNA"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.NAVerifyApplicationMTSPM": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "EmployeeID",
                "NA_EmployeeId",
                "NA_UserName",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NA_EmployeeDesignation": {
                    "type": "string"
                },
                "NA_EmployeeId": {
                    "type": "string"
                },
                "NA_GeneralRemarks": {
                    "type": "string"
                },
                "NA_Remarks": {
                    "type": "string"
                },
                "NA_UserName": {
                    "type": "string"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesMTSPMApplicationDataNA"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.ReApplicationGDSPM": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "CategoryCode",
                "CategoryDescription",
                "CenterFacilityId",
                "CenterId",
                "CentrePreference",
                "ClaimingQualifyingService",
                "ControllingOfficeFacilityID",
                "ControllingOfficeName",
                "DOB",
                "DisabilityTypeDescription",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "FacilityUniqueID",
                "FeederPostJoiningDate",
                "Gender",
                "LienControllingOfficeID",
                "LienControllingOfficeName",
                "MobileNumber",
                "NodalOfficeFacilityID",
                "NodalOfficeName",
                "Photo",
                "PhotoPath",
                "PostPreferences",
                "PresentDesignation",
                "ServiceLength",
                "Signature",
                "SignaturePath",
                "TempHallTicket",
                "UnitPreferences",
                "UserID",
                "WorkingOfficeCircleFacilityID",
                "WorkingOfficeCircleName",
                "WorkingOfficeFacilityID",
                "WorkingOfficeName",
                "WorkingOfficePincode",
                "edges",
                "id"
            ],
            "properties": {
                "ApplicationNumber": {
                    "type": "string"
                },
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DCInPresentCadre": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "GDSEngagement": {
                    "type": "array",
                    "items": {}
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PostPreferences": {
                    "type": "array",
                    "items": {}
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "Remarks": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UnitPreferences": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.ReApplicationGroupB": {
            "type": "object",
            "required": [
                "CategoryCode",
                "CategoryDescription",
                "CenterFacilityId",
                "CenterId",
                "CentrePreference",
                "ClaimingQualifyingService",
                "ControllingOfficeFacilityID",
                "ControllingOfficeName",
                "DCCS",
                "DOB",
                "DisabilityTypeDescription",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "EntryPostDescription",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "FacilityUniqueID",
                "FeederPostCode",
                "FeederPostDescription",
                "FeederPostJoiningDate",
                "Gender",
                "LienControllingOfficeID",
                "LienControllingOfficeName",
                "MobileNumber",
                "NodalOfficeFacilityID",
                "NodalOfficeName",
                "Photo",
                "PhotoPath",
                "PresentDesignation",
                "PresentPostCode",
                "PresentPostDescription",
                "ServiceLength",
                "Signature",
                "SignaturePath",
                "TempHallTicket",
                "UserID",
                "WorkingOfficeCircleFacilityID",
                "WorkingOfficeCircleName",
                "WorkingOfficeFacilityID",
                "WorkingOfficeName",
                "WorkingOfficePincode",
                "edges"
            ],
            "properties": {
                "ApplicationNumber": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesPSApplicationData"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.RequestBody": {
            "type": "object",
            "required": [
                "UserName",
                "current_password",
                "new_password"
            ],
            "properties": {
                "UserName": {
                    "type": "string"
                },
                "current_password": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "candidate_registation.ResubmitApplicationIp": {
            "type": "object",
            "required": [
                "CategoryCode",
                "CategoryDescription",
                "CenterFacilityId",
                "CenterId",
                "CentrePreference",
                "ClaimingQualifyingService",
                "ControllingOfficeFacilityID",
                "ControllingOfficeName",
                "DOB",
                "EmailID",
                "EmployeeID",
                "EmployeeName",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "FacilityUniqueID",
                "FeederPostCode",
                "FeederPostDescription",
                "FeederPostJoiningDate",
                "Gender",
                "LienControllingOfficeID",
                "LienControllingOfficeName",
                "MobileNumber",
                "NodalOfficeFacilityID",
                "NodalOfficeName",
                "Photo",
                "PhotoPath",
                "PresentDesignation",
                "PresentPostCode",
                "PresentPostDescription",
                "ServiceLength",
                "Signature",
                "SignaturePath",
                "TempHallTicket",
                "WorkingOfficeCircleFacilityID",
                "WorkingOfficeCircleName",
                "WorkingOfficeFacilityID",
                "WorkingOfficeName",
                "WorkingOfficePincode",
                "edges"
            ],
            "properties": {
                "ApplicationNumber": {
                    "type": "string"
                },
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesCircleData"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.StrucAdminResetSaveNewPassword": {
            "type": "object",
            "required": [
                "NewPassword",
                "OTP",
                "UserName",
                "edges"
            ],
            "properties": {
                "NewPassword": {
                    "type": "string"
                },
                "OTP": {
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.StrucAdminResetValidateOTP": {
            "type": "object",
            "required": [
                "OTP",
                "UserName",
                "edges"
            ],
            "properties": {
                "OTP": {
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.StrucAdminResetValidateUserName": {
            "type": "object",
            "required": [
                "UserName",
                "edges"
            ],
            "properties": {
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.StrucCreateEmployeeMaster": {
            "type": "object",
            "required": [
                "CircleFacilityId",
                "ControllingAuthorityFacilityId",
                "ControllingAuthorityName",
                "CreatedByDesignation",
                "CreatedByEmpId",
                "CreatedById",
                "CreatedByUserName",
                "DOB",
                "EmailId",
                "EmployeeCategory",
                "EmployeeID",
                "EmployeeName",
                "EmployeePost",
                "FacilityId",
                "Gender",
                "MobileNumber",
                "NodalAuthorityFaciliyId",
                "NodalAuthorityName",
                "OfficeName",
                "Pincode",
                "edges"
            ],
            "properties": {
                "CircleFacilityId": {
                    "type": "string"
                },
                "ControllingAuthorityFacilityId": {
                    "type": "string"
                },
                "ControllingAuthorityName": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedByEmpId": {
                    "type": "integer"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByUserName": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "EmailId": {
                    "type": "string"
                },
                "EmployeeCategory": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "FacilityId": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalAuthorityFaciliyId": {
                    "type": "string"
                },
                "NodalAuthorityName": {
                    "type": "string"
                },
                "OfficeName": {
                    "type": "string"
                },
                "Pincode": {
                    "type": "string"
                },
                "VerifyStatus": {
                    "type": "boolean"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.StrucModifyEmployeeMaster": {
            "type": "object",
            "required": [
                "CircleFacilityId",
                "ControllingAuthorityFacilityId",
                "ControllingAuthorityName",
                "DOB",
                "EmailId",
                "EmployeeCategory",
                "EmployeeID",
                "EmployeeName",
                "EmployeePost",
                "FacilityId",
                "Gender",
                "MobileNumber",
                "ModifiedByDesignantion",
                "ModifiedByEmpId",
                "ModifiedById",
                "ModifiedByUserName",
                "NodalAuthorityFaciliyId",
                "NodalAuthorityName",
                "OfficeName",
                "Pincode",
                "VerifyStatus",
                "edges"
            ],
            "properties": {
                "CircleFacilityId": {
                    "type": "string"
                },
                "ControllingAuthorityFacilityId": {
                    "type": "string"
                },
                "ControllingAuthorityName": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "EmailId": {
                    "type": "string"
                },
                "EmployeeCategory": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "FacilityId": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "ModifiedByDesignantion": {
                    "type": "string"
                },
                "ModifiedByEmpId": {
                    "type": "integer"
                },
                "ModifiedById": {
                    "type": "integer"
                },
                "ModifiedByUserName": {
                    "type": "string"
                },
                "NodalAuthorityFaciliyId": {
                    "type": "string"
                },
                "NodalAuthorityName": {
                    "type": "string"
                },
                "OfficeName": {
                    "type": "string"
                },
                "Pincode": {
                    "type": "string"
                },
                "VerifyStatus": {
                    "type": "boolean"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.StrucUserResetSaveNewPassword": {
            "type": "object",
            "required": [
                "NewPassword",
                "OTP",
                "UserName",
                "edges"
            ],
            "properties": {
                "NewPassword": {
                    "type": "string"
                },
                "OTP": {
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.StrucUserResetValidateOTP": {
            "type": "object",
            "required": [
                "OTP",
                "UserName",
                "edges"
            ],
            "properties": {
                "OTP": {
                    "type": "integer"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.StrucUserResetValidateUserName": {
            "type": "object",
            "required": [
                "UserName",
                "edges"
            ],
            "properties": {
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.UpdateAdminMasterStruc": {
            "type": "object",
            "required": [
                "AdminUniqueID",
                "Designation",
                "EmailID",
                "EmployeeId",
                "EmployeeName",
                "FacilityID",
                "Mobile",
                "ModifiedByDesignation",
                "ModifiedByEmpId",
                "ModifiedById",
                "ModifiedByUserName",
                "RoleUserCode",
                "RoleUserDescription",
                "UserName",
                "edges"
            ],
            "properties": {
                "AdminUniqueID": {
                    "type": "integer"
                },
                "Designation": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeId": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "FacilityID": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "ModifiedByDesignation": {
                    "type": "string"
                },
                "ModifiedByEmpId": {
                    "type": "integer"
                },
                "ModifiedById": {
                    "type": "integer"
                },
                "ModifiedByUserName": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "integer"
                },
                "RoleUserDescription": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.UpdateExamCentersInIP": {
            "type": "object",
            "properties": {
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesCircleData"
                }
            }
        },
        "candidate_registation.UpdateNotificationStruct": {
            "type": "object",
            "required": [
                "AdmitCardDate",
                "ApplicationCorrectionStartDate",
                "ApplicationEndDate",
                "ApplicationVerificationLastDate",
                "CenterAllotmentEndDate",
                "CrucialDate",
                "ExamCode",
                "ExamName",
                "ExamYear",
                "NodalOfficerApprovalDate",
                "OrderDate",
                "Papers",
                "ResubmittedApplicationVerificationDate",
                "UserName"
            ],
            "properties": {
                "AdmitCardDate": {
                    "type": "string"
                },
                "ApplicationCorrectionLastDate": {
                    "type": "string"
                },
                "ApplicationCorrectionStartDate": {
                    "type": "string"
                },
                "ApplicationEndDate": {
                    "type": "string"
                },
                "ApplicationStartDate": {
                    "type": "string"
                },
                "ApplicationVerificationLastDate": {
                    "type": "string"
                },
                "CenterAllotmentEndDate": {
                    "type": "string"
                },
                "CircleOfficeFacilityId": {
                    "type": "string"
                },
                "CircleOfficeName": {
                    "type": "string"
                },
                "CreatedBy": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByName": {
                    "type": "string"
                },
                "CrucialDate": {
                    "type": "array",
                    "items": {}
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "integer"
                },
                "Id": {
                    "type": "integer"
                },
                "IssuedBy": {
                    "type": "string"
                },
                "NodalOfficerApprovalDate": {
                    "type": "string"
                },
                "NotificationOrderNumber": {
                    "type": "string"
                },
                "NotificationRemarks": {
                    "type": "string"
                },
                "NotificationStatus": {
                    "type": "string"
                },
                "OrderDate": {
                    "type": "string"
                },
                "Papers": {
                    "type": "array",
                    "items": {}
                },
                "ResubmittedApplicationVerificationDate": {
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "candidate_registation.UserRequest": {
            "type": "object",
            "properties": {
                "APSWorking": {
                    "type": "boolean"
                },
                "APSWorkingRemStatus": {
                    "type": "boolean"
                },
                "APSWorkingRemarks": {
                    "type": "string"
                },
                "APSWorkingVerified": {
                    "type": "boolean"
                },
                "Cadreid": {
                    "type": "integer"
                },
                "CadreidRemStatus": {
                    "type": "boolean"
                },
                "CadreidRemarks": {
                    "type": "string"
                },
                "CadreidVerified": {
                    "type": "boolean"
                },
                "DOB": {
                    "type": "string"
                },
                "DOBRemStatus": {
                    "type": "boolean"
                },
                "DOBRemarks": {
                    "type": "string"
                },
                "DOBVerified": {
                    "type": "boolean"
                },
                "EmployeedID": {
                    "type": "string"
                },
                "EmployeedName": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "GenderRemStatus": {
                    "type": "boolean"
                },
                "GenderRemarks": {
                    "type": "string"
                },
                "GenderVerified": {
                    "type": "boolean"
                },
                "IDRemStatus": {
                    "type": "boolean"
                },
                "IDRemarks": {
                    "type": "string"
                },
                "IDVerified": {
                    "type": "boolean"
                },
                "NameRemStatus": {
                    "type": "boolean"
                },
                "NameRemarks": {
                    "type": "string"
                },
                "NameVerified": {
                    "type": "boolean"
                },
                "OfficeID": {
                    "type": "integer"
                },
                "OfficeIDRemStatus": {
                    "type": "boolean"
                },
                "OfficeIDRemarks": {
                    "type": "string"
                },
                "OfficeIDVerified": {
                    "type": "boolean"
                },
                "PH": {
                    "type": "boolean"
                },
                "PHDetails": {
                    "type": "string"
                },
                "PHDetailsRemStatus": {
                    "type": "boolean"
                },
                "PHDetailsRemarks": {
                    "type": "string"
                },
                "PHDetailsVerified": {
                    "type": "boolean"
                },
                "PHRemStatus": {
                    "type": "boolean"
                },
                "PHRemarks": {
                    "type": "string"
                },
                "PHVerified": {
                    "type": "boolean"
                },
                "Profilestatus": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.VerifyApplicationGDSPM": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "CA_EmployeeId",
                "CA_UserName",
                "EmployeeID",
                "ServiceLength",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "CA_EmployeeDesignation": {
                    "type": "string"
                },
                "CA_EmployeeId": {
                    "type": "string"
                },
                "CA_GeneralRemarks": {
                    "type": "string"
                },
                "CA_Remarks": {
                    "type": "string"
                },
                "CA_UserName": {
                    "type": "string"
                },
                "DisciplinaryCaseStatus": {
                    "description": "new coloumn",
                    "type": "boolean"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NonQualifyingService": {
                    "type": "array",
                    "items": {}
                },
                "Post": {
                    "type": "string"
                },
                "PunishmentStatus": {
                    "description": "new coloumn",
                    "type": "boolean"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesGDSPMApplicationData"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.VerifyApplicationGroupB": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "CA_EmployeeId",
                "CA_UserName",
                "ControllingOfficeFacilityID",
                "EmployeeID",
                "ServiceLength",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "CA_EmployeeDesignation": {
                    "type": "string"
                },
                "CA_EmployeeId": {
                    "type": "string"
                },
                "CA_GeneralRemarks": {
                    "type": "string"
                },
                "CA_Remarks": {
                    "type": "string"
                },
                "CA_UserName": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "DisciplinaryCaseStatus": {
                    "type": "boolean"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NonQualifyingService": {
                    "type": "array",
                    "items": {}
                },
                "PunishmentStatus": {
                    "type": "boolean"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesPSApplicationData"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.VerifyApplicationIp": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "CA_EmployeeId",
                "CA_UserName",
                "EmployeeID",
                "ServiceLength",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "CA_EmployeeDesignation": {
                    "type": "string"
                },
                "CA_EmployeeId": {
                    "type": "string"
                },
                "CA_GeneralRemarks": {
                    "type": "string"
                },
                "CA_Remarks": {
                    "type": "string"
                },
                "CA_UserName": {
                    "type": "string"
                },
                "DisciplinaryCaseStatus": {
                    "description": "new coloumn",
                    "type": "boolean"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NonQualifyingService": {
                    "type": "array",
                    "items": {}
                },
                "PunishmentStatus": {
                    "description": "new coloumn",
                    "type": "boolean"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesIPApplicatinData"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.VerifyApplicationMTSPM": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "CA_EmployeeId",
                "CA_UserName",
                "EmployeeID",
                "ServiceLength",
                "id"
            ],
            "properties": {
                "AppliactionRemarks": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "CA_EmployeeDesignation": {
                    "type": "string"
                },
                "CA_EmployeeId": {
                    "type": "string"
                },
                "CA_GeneralRemarks": {
                    "type": "string"
                },
                "CA_Remarks": {
                    "type": "string"
                },
                "CA_UserName": {
                    "type": "string"
                },
                "DisciplinaryCaseStatus": {
                    "description": "new coloumn",
                    "type": "boolean"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "GenerateHallTicketFlag": {
                    "type": "boolean"
                },
                "NonQualifyingService": {
                    "type": "array",
                    "items": {}
                },
                "PunishmentStatus": {
                    "description": "new coloumn",
                    "type": "boolean"
                },
                "RecommendedStatus": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesMTSPMApplicationData"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "candidate_registation.VerifyApplicationVAGDSPM": {
            "type": "object",
            "required": [
                "ApplicationNumber",
                "EmployeeID",
                "ExamCode",
                "ExamName",
                "ExamShortName",
                "ExamYear",
                "VA_EmployeeId",
                "VA_GeneralRemarks",
                "VA_UserName",
                "id"
            ],
            "properties": {
                "ApplicationNumber": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "VA_EmployeeDesignation": {
                    "type": "string"
                },
                "VA_EmployeeId": {
                    "type": "string"
                },
                "VA_GeneralRemarks": {
                    "type": "string"
                },
                "VA_UserName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "handlers.ApplicationGroupBCenter": {
            "type": "object",
            "properties": {
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesPSApplicationData"
                }
            }
        },
        "handlers.ApplicationMTSPMUpdatecenter": {
            "type": "object",
            "properties": {
                "Cadre": {
                    "type": "string"
                },
                "CandidateRemarks": {
                    "type": "string"
                },
                "CategoryCode": {
                    "type": "string"
                },
                "CategoryDescription": {
                    "type": "string"
                },
                "CenterFacilityId": {
                    "type": "string"
                },
                "CenterId": {
                    "type": "integer"
                },
                "CentrePreference": {
                    "type": "string"
                },
                "ClaimingQualifyingService": {
                    "type": "string"
                },
                "ControllingOfficeFacilityID": {
                    "type": "string"
                },
                "ControllingOfficeName": {
                    "type": "string"
                },
                "DCCS": {
                    "type": "string"
                },
                "DOB": {
                    "type": "string"
                },
                "DeputationControllingOfficeID": {
                    "type": "string"
                },
                "DeputationControllingOfficeName": {
                    "type": "string"
                },
                "DeputationOfficeFacilityID": {
                    "type": "string"
                },
                "DeputationOfficeName": {
                    "type": "string"
                },
                "DeputationOfficePincode": {
                    "type": "string"
                },
                "DeputationOfficeUniqueId": {
                    "type": "string"
                },
                "DeputationType": {
                    "type": "string"
                },
                "DesignationID": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "DisabilityTypeID": {
                    "type": "string"
                },
                "EducationCode": {
                    "type": "string"
                },
                "EducationDescription": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "EmployeePost": {
                    "type": "string"
                },
                "EntryPostCode": {
                    "type": "string"
                },
                "EntryPostDescription": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "string"
                },
                "FacilityName": {
                    "type": "string"
                },
                "FacilityUniqueID": {
                    "type": "string"
                },
                "FeederPostCode": {
                    "type": "string"
                },
                "FeederPostDescription": {
                    "type": "string"
                },
                "FeederPostJoiningDate": {
                    "type": "string"
                },
                "GDSEngagement": {
                    "type": "array",
                    "items": {}
                },
                "Gender": {
                    "type": "string"
                },
                "LienControllingOfficeID": {
                    "type": "string"
                },
                "LienControllingOfficeName": {
                    "type": "string"
                },
                "MobileNumber": {
                    "type": "string"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "Photo": {
                    "type": "string"
                },
                "PhotoPath": {
                    "type": "string"
                },
                "PostPreferences": {
                    "type": "array",
                    "items": {}
                },
                "PresentDesignation": {
                    "type": "string"
                },
                "PresentPostCode": {
                    "type": "string"
                },
                "PresentPostDescription": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeName": {
                    "type": "string"
                },
                "ServiceLength": {
                    "type": "array",
                    "items": {}
                },
                "Signature": {
                    "type": "string"
                },
                "SignaturePath": {
                    "type": "string"
                },
                "TempHallTicket": {
                    "type": "string"
                },
                "UnitPreferences": {
                    "type": "array",
                    "items": {}
                },
                "UserID": {
                    "type": "integer"
                },
                "WorkingOfficeCircleFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeCircleName": {
                    "type": "string"
                },
                "WorkingOfficeDivisionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeDivisionName": {
                    "type": "string"
                },
                "WorkingOfficeFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeName": {
                    "type": "string"
                },
                "WorkingOfficePincode": {
                    "type": "integer"
                },
                "WorkingOfficeRegionFacilityID": {
                    "type": "string"
                },
                "WorkingOfficeRegionName": {
                    "type": "string"
                },
                "edges": {
                    "$ref": "#/definitions/candidate_registation.EdgesLogdata"
                }
            }
        },
        "handlers.CenterResponse": {
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "CenterCityName": {
                    "type": "string"
                },
                "ExamCenterName": {
                    "type": "string"
                },
                "ID": {
                    "type": "integer"
                },
                "Landmark": {
                    "type": "string"
                },
                "Message": {
                    "type": "string"
                },
                "Pincode": {
                    "type": "integer"
                },
                "Status": {
                    "type": "boolean"
                }
            }
        },
        "handlers.CenterrResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.DisabilityRequest": {
            "type": "object",
            "properties": {
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedByEmployeeId": {
                    "type": "string"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByUserName": {
                    "type": "string"
                },
                "CreatedDate": {
                    "type": "string"
                },
                "DeletedByDesignation": {
                    "type": "string"
                },
                "DeletedByEmployeeId": {
                    "type": "string"
                },
                "DeletedById": {
                    "type": "integer"
                },
                "DeletedByUserName": {
                    "type": "string"
                },
                "DeletedDate": {
                    "type": "string"
                },
                "DisabilityFlag": {
                    "type": "string"
                },
                "DisabilityPercentage": {
                    "type": "integer"
                },
                "DisabilityTypeCode": {
                    "type": "string"
                },
                "DisabilityTypeDescription": {
                    "type": "string"
                },
                "HallCategoryCode": {
                    "type": "string"
                },
                "OrderNumber": {
                    "type": "string"
                },
                "Statuss": {
                    "type": "string"
                },
                "VerifiedByDesignation": {
                    "type": "string"
                },
                "VerifiedByEmployeeId": {
                    "type": "string"
                },
                "VerifiedById": {
                    "type": "integer"
                },
                "VerifiedByUserName": {
                    "type": "string"
                },
                "VerifiedDate": {
                    "type": "string"
                }
            }
        },
        "handlers.DisabilityResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "handlers.ExamCalendarsResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.ExamCityCenterCreateRequest": {
            "type": "object",
            "required": [
                "ExamCode",
                "ExamName",
                "ExamYear"
            ],
            "properties": {
                "CenterCityName": {
                    "type": "string"
                },
                "CentreCityName": {
                    "type": "string"
                },
                "CentreCode": {
                    "type": "integer"
                },
                "CircleCityName": {
                    "type": "string"
                },
                "CircleID": {
                    "type": "integer"
                },
                "ConductedBy": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedByEmpId": {
                    "type": "integer"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByUserName": {
                    "type": "string"
                },
                "DivisionCode": {
                    "type": "integer"
                },
                "DivisionName": {
                    "type": "string"
                },
                "ExamCode": {
                    "type": "integer"
                },
                "ExamName": {
                    "type": "string"
                },
                "ExamShortName": {
                    "type": "string"
                },
                "ExamYear": {
                    "type": "integer"
                },
                "NodalOfficeFacilityID": {
                    "type": "string"
                },
                "NodalOfficeName": {
                    "type": "string"
                },
                "NotificationCode": {
                    "type": "integer"
                },
                "NotificationNumber": {
                    "type": "string"
                },
                "RegionCityName": {
                    "type": "string"
                },
                "RegionCode": {
                    "type": "integer"
                },
                "RegionID": {
                    "type": "integer"
                },
                "RegionName": {
                    "type": "string"
                },
                "Remarks": {
                    "type": "string"
                },
                "Status": {
                    "type": "string"
                },
                "UpdatedAt": {
                    "type": "string"
                },
                "UpdatedBy": {
                    "type": "string"
                }
            }
        },
        "handlers.ExamCityCenterCreateResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "message": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "handlers.ExamResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.ExamStatisticsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "handlers.GenerateHallticketRequestBody": {
            "type": "object",
            "properties": {
                "ExamCode": {
                    "type": "integer"
                },
                "ExamYear": {
                    "type": "string"
                },
                "nodalOfficerFacilityID": {
                    "type": "string"
                }
            }
        },
        "handlers.LogData": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "browser": {
                    "type": "string"
                },
                "devicetype": {
                    "type": "string"
                },
                "eventtime": {
                    "type": "string"
                },
                "ipaddress": {
                    "type": "string"
                },
                "latitude": {
                    "type": "number"
                },
                "longitude": {
                    "type": "number"
                },
                "os": {
                    "type": "string"
                },
                "remarks": {
                    "type": "string"
                },
                "userid": {
                    "type": "string"
                },
                "usertype": {
                    "type": "string"
                }
            }
        },
        "handlers.RequestBody": {
            "type": "object",
            "required": [
                "current_password",
                "new_password"
            ],
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "edges": {
                    "type": "object",
                    "properties": {
                        "LogData": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handlers.LogData"
                            }
                        }
                    }
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "handlers.requestBody": {
            "type": "object",
            "properties": {
                "ExamCode": {
                    "type": "integer"
                },
                "ExamYear": {
                    "type": "string"
                },
                "nodalOfficerFacilityID": {
                    "type": "string"
                }
            }
        },
        "handlers.requestBodyy": {
            "type": "object",
            "properties": {
                "ExamCode": {
                    "type": "integer"
                },
                "ExamYear": {
                    "type": "string"
                },
                "nodalOfficerFacilityID": {
                    "type": "string"
                }
            }
        },
        "start.AdminCreationResponse": {
            "type": "object",
            "properties": {
                "AuthorityFacilityName": {
                    "type": "string"
                },
                "CircleOfficeFacilityId": {
                    "type": "string"
                },
                "CircleOfficeName": {
                    "type": "string"
                },
                "CreatedByDesignation": {
                    "type": "string"
                },
                "CreatedByEmpId": {
                    "type": "integer"
                },
                "CreatedById": {
                    "type": "integer"
                },
                "CreatedByUserName": {
                    "type": "string"
                },
                "Designation": {
                    "type": "string"
                },
                "EmailID": {
                    "type": "string"
                },
                "EmployeeId": {
                    "type": "integer"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "FacilityID": {
                    "type": "string"
                },
                "FacilityIdUniqueid": {
                    "type": "integer"
                },
                "FacilityType": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeFacilityName": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "integer"
                },
                "RoleUserDescription": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "start.AdminUser": {
            "type": "object",
            "properties": {
                "AuthorityFacilityName": {
                    "type": "string"
                },
                "CircleOfficeFacilityID": {
                    "type": "string"
                },
                "CircleOfficeName": {
                    "type": "string"
                },
                "Designation": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "string"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "FacilityID": {
                    "type": "string"
                },
                "FacilityType": {
                    "type": "string"
                },
                "ReportingOfficeFacilityID": {
                    "type": "string"
                },
                "ReportingOfficeFacilityName": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "string"
                },
                "RoleUserDescription": {
                    "type": "string"
                },
                "Token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "start.AdminUserResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.AdminUserr": {
            "type": "object",
            "properties": {
                "AuthorityFacilityName": {
                    "type": "string"
                },
                "CAUsername": {
                    "type": "string"
                },
                "Designation": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "string"
                },
                "EmployeeName": {
                    "type": "string"
                },
                "FacilityID": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "string"
                },
                "SMSStatus": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "start.ApplicationData": {
            "type": "object",
            "properties": {
                "Application Status": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "EmailStatus": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "Mobile": {
                    "type": "string"
                },
                "SMSStatus": {
                    "type": "string"
                }
            }
        },
        "start.CreateApplicationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.ApplicationData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.CreateGDSPMResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.ResponseData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.EmployeeMasterResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "start.FirstTimeUserData": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "EmailStatus": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "Mobile": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "string"
                },
                "SMSStatus": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "start.GetAllCAPendingVerificationsResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.GetApplicationsResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.GetGDSPMApplicationsResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.GetGDSPMCAPendingOldRemarksByEmpIdData": {
            "type": "object",
            "properties": {
                "applicationremarks": {
                    "type": "string"
                },
                "applicationstatus": {
                    "type": "string"
                },
                "employeeid": {
                    "type": "integer"
                }
            }
        },
        "start.GetGDSPMCAPendingOldRemarksByEmpIdResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.GetGDSPMCAPendingOldRemarksByEmpIdData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.PsGroupBResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.PsgroupBData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.PsgroupBData": {
            "type": "object",
            "properties": {
                "Application Status": {
                    "type": "string"
                },
                "ApplicationNumber": {
                    "type": "string"
                },
                "Email ID": {
                    "type": "string"
                },
                "EmailDeliveryStatus": {
                    "type": "boolean"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "Mobile": {
                    "type": "string"
                },
                "SMSDeliveryStatus": {
                    "type": "boolean"
                }
            }
        },
        "start.ResponseData": {
            "type": "object",
            "properties": {
                "ApplicationNumber": {
                    "type": "string"
                },
                "ApplicationStatus": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "EmailStatus": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "Mobile": {
                    "type": "string"
                },
                "SMSStatus": {
                    "type": "string"
                }
            }
        },
        "start.RollmasterResponse": {
            "type": "object",
            "properties": {
                "RoleUserCode": {
                    "type": "integer"
                },
                "created_date": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "start.UpdateCenterCodeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.UserResetSaveNewPasswordResponse": {
            "type": "object",
            "properties": {
                "UserName": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "start.UserResetValidateOTPResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.UserResetValidateUserNameData": {
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "string"
                },
                "SMSStatus": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                }
            }
        },
        "start.UserResetValidateUserNameResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.UserResetValidateUserNameData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.UserResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.FirstTimeUserData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.VerifyAdminLoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.AdminUser"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.VerifyAdminUserLoginResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.AdminUserr"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.VerifyGDSPMVAApplicationsData": {
            "type": "object",
            "properties": {
                "ApplicationRemarks": {
                    "type": "string"
                },
                "ApplicationStatus": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "integer"
                },
                "RoleUserCode": {
                    "type": "string"
                }
            }
        },
        "start.VerifyGDSPMVAApplicationsResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.VerifyGDSPMVAApplicationsData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "start.VerifyIPApplicationData": {
            "type": "object",
            "properties": {
                "ApplicationNumber": {
                    "type": "string"
                },
                "ApplicationRemarks": {
                    "type": "string"
                },
                "ApplicationStatus": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "EmailStatus": {
                    "type": "string"
                },
                "EmployeeID": {
                    "type": "string"
                },
                "Mobile": {
                    "type": "string"
                },
                "RoleUserCode": {
                    "type": "string"
                },
                "SMSStatus": {
                    "type": "string"
                }
            }
        },
        "start.VerifyIPApplicationResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/start.VerifyIPApplicationData"
                },
                "dataexists": {
                    "type": "boolean"
                },
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Departmental Examination API",
	Description:      "This is a departmental examination API with Swagger documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
