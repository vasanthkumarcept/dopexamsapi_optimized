// Code generated by ent, DO NOT EDIT.

package employeecadre

import (
	"recruit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldID, id))
}

// Cadrecode applies equality check predicate on the "cadrecode" field. It's identical to CadrecodeEQ.
func Cadrecode(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCadrecode, v))
}

// Cadredescription applies equality check predicate on the "cadredescription" field. It's identical to CadredescriptionEQ.
func Cadredescription(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCadredescription, v))
}

// PayLevel applies equality check predicate on the "PayLevel" field. It's identical to PayLevelEQ.
func PayLevel(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldPayLevel, v))
}

// Scale applies equality check predicate on the "Scale" field. It's identical to ScaleEQ.
func Scale(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldScale, v))
}

// ExamconfigurationExamcode applies equality check predicate on the "ExamconfigurationExamcode" field. It's identical to ExamconfigurationExamcodeEQ.
func ExamconfigurationExamcode(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldExamconfigurationExamcode, v))
}

// ExamShortDescription applies equality check predicate on the "ExamShortDescription" field. It's identical to ExamShortDescriptionEQ.
func ExamShortDescription(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldExamShortDescription, v))
}

// ExamLongDescription applies equality check predicate on the "ExamLongDescription" field. It's identical to ExamLongDescriptionEQ.
func ExamLongDescription(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldExamLongDescription, v))
}

// EmployeePostPostId applies equality check predicate on the "EmployeePost_postId" field. It's identical to EmployeePostPostIdEQ.
func EmployeePostPostId(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEmployeePostPostId, v))
}

// EmployeeGroupGroupId applies equality check predicate on the "EmployeeGroup_groupId" field. It's identical to EmployeeGroupGroupIdEQ.
func EmployeeGroupGroupId(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEmployeeGroupGroupId, v))
}

// GroupDescription applies equality check predicate on the "GroupDescription" field. It's identical to GroupDescriptionEQ.
func GroupDescription(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldGroupDescription, v))
}

// PostCode applies equality check predicate on the "PostCode" field. It's identical to PostCodeEQ.
func PostCode(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldPostCode, v))
}

// PostDescription applies equality check predicate on the "PostDescription" field. It's identical to PostDescriptionEQ.
func PostDescription(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldPostDescription, v))
}

// BaseCadre applies equality check predicate on the "BaseCadre" field. It's identical to BaseCadreEQ.
func BaseCadre(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldBaseCadre, v))
}

// GdsService applies equality check predicate on the "GdsService" field. It's identical to GdsServiceEQ.
func GdsService(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldGdsService, v))
}

// AgeCriteria applies equality check predicate on the "ageCriteria" field. It's identical to AgeCriteriaEQ.
func AgeCriteria(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldAgeCriteria, v))
}

// ServiceCriteria applies equality check predicate on the "ServiceCriteria" field. It's identical to ServiceCriteriaEQ.
func ServiceCriteria(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldServiceCriteria, v))
}

// DrivingLicenceCriteria applies equality check predicate on the "DrivingLicenceCriteria" field. It's identical to DrivingLicenceCriteriaEQ.
func DrivingLicenceCriteria(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDrivingLicenceCriteria, v))
}

// ComputerKnowledge applies equality check predicate on the "ComputerKnowledge" field. It's identical to ComputerKnowledgeEQ.
func ComputerKnowledge(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldComputerKnowledge, v))
}

// EligibiltyBasedOnLevelOfPaymatrix applies equality check predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field. It's identical to EligibiltyBasedOnLevelOfPaymatrixEQ.
func EligibiltyBasedOnLevelOfPaymatrix(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEligibiltyBasedOnLevelOfPaymatrix, v))
}

// EducationDetailsEducationCode applies equality check predicate on the "EducationDetails_educationCode" field. It's identical to EducationDetailsEducationCodeEQ.
func EducationDetailsEducationCode(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEducationDetailsEducationCode, v))
}

// EducationDescription applies equality check predicate on the "EducationDescription" field. It's identical to EducationDescriptionEQ.
func EducationDescription(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEducationDescription, v))
}

// OrderNumber applies equality check predicate on the "OrderNumber" field. It's identical to OrderNumberEQ.
func OrderNumber(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldOrderNumber, v))
}

// Status applies equality check predicate on the "Status" field. It's identical to StatusEQ.
func Status(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldStatus, v))
}

// CreatedById applies equality check predicate on the "CreatedById" field. It's identical to CreatedByIdEQ.
func CreatedById(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedById, v))
}

// CreatedByUserName applies equality check predicate on the "CreatedByUserName" field. It's identical to CreatedByUserNameEQ.
func CreatedByUserName(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedByUserName, v))
}

// CreatedByEmployeeId applies equality check predicate on the "CreatedByEmployeeId" field. It's identical to CreatedByEmployeeIdEQ.
func CreatedByEmployeeId(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedByEmployeeId, v))
}

// CreatedByDesignation applies equality check predicate on the "CreatedByDesignation" field. It's identical to CreatedByDesignationEQ.
func CreatedByDesignation(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedByDesignation, v))
}

// CreatedDate applies equality check predicate on the "CreatedDate" field. It's identical to CreatedDateEQ.
func CreatedDate(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedDate, v))
}

// VerifiedById applies equality check predicate on the "VerifiedById" field. It's identical to VerifiedByIdEQ.
func VerifiedById(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedById, v))
}

// VerifiedByUserName applies equality check predicate on the "VerifiedByUserName" field. It's identical to VerifiedByUserNameEQ.
func VerifiedByUserName(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedByUserName, v))
}

// VerifiedByEmployeeId applies equality check predicate on the "VerifiedByEmployeeId" field. It's identical to VerifiedByEmployeeIdEQ.
func VerifiedByEmployeeId(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedByEmployeeId, v))
}

// VerifiedByDesignation applies equality check predicate on the "VerifiedByDesignation" field. It's identical to VerifiedByDesignationEQ.
func VerifiedByDesignation(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedByDesignation, v))
}

// VerifiedDate applies equality check predicate on the "VerifiedDate" field. It's identical to VerifiedDateEQ.
func VerifiedDate(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedDate, v))
}

// DeletedById applies equality check predicate on the "DeletedById" field. It's identical to DeletedByIdEQ.
func DeletedById(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedById, v))
}

// DeletedByUserName applies equality check predicate on the "DeletedByUserName" field. It's identical to DeletedByUserNameEQ.
func DeletedByUserName(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedByUserName, v))
}

// DeletedByEmployeeId applies equality check predicate on the "DeletedByEmployeeId" field. It's identical to DeletedByEmployeeIdEQ.
func DeletedByEmployeeId(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedByEmployeeId, v))
}

// DeletedByDesignation applies equality check predicate on the "DeletedByDesignation" field. It's identical to DeletedByDesignationEQ.
func DeletedByDesignation(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedByDesignation, v))
}

// DeletedDate applies equality check predicate on the "DeletedDate" field. It's identical to DeletedDateEQ.
func DeletedDate(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedDate, v))
}

// CadrecodeEQ applies the EQ predicate on the "cadrecode" field.
func CadrecodeEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCadrecode, v))
}

// CadrecodeNEQ applies the NEQ predicate on the "cadrecode" field.
func CadrecodeNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldCadrecode, v))
}

// CadrecodeIn applies the In predicate on the "cadrecode" field.
func CadrecodeIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldCadrecode, vs...))
}

// CadrecodeNotIn applies the NotIn predicate on the "cadrecode" field.
func CadrecodeNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldCadrecode, vs...))
}

// CadrecodeGT applies the GT predicate on the "cadrecode" field.
func CadrecodeGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldCadrecode, v))
}

// CadrecodeGTE applies the GTE predicate on the "cadrecode" field.
func CadrecodeGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldCadrecode, v))
}

// CadrecodeLT applies the LT predicate on the "cadrecode" field.
func CadrecodeLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldCadrecode, v))
}

// CadrecodeLTE applies the LTE predicate on the "cadrecode" field.
func CadrecodeLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldCadrecode, v))
}

// CadrecodeContains applies the Contains predicate on the "cadrecode" field.
func CadrecodeContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldCadrecode, v))
}

// CadrecodeHasPrefix applies the HasPrefix predicate on the "cadrecode" field.
func CadrecodeHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldCadrecode, v))
}

// CadrecodeHasSuffix applies the HasSuffix predicate on the "cadrecode" field.
func CadrecodeHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldCadrecode, v))
}

// CadrecodeEqualFold applies the EqualFold predicate on the "cadrecode" field.
func CadrecodeEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldCadrecode, v))
}

// CadrecodeContainsFold applies the ContainsFold predicate on the "cadrecode" field.
func CadrecodeContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldCadrecode, v))
}

// CadredescriptionEQ applies the EQ predicate on the "cadredescription" field.
func CadredescriptionEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCadredescription, v))
}

// CadredescriptionNEQ applies the NEQ predicate on the "cadredescription" field.
func CadredescriptionNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldCadredescription, v))
}

// CadredescriptionIn applies the In predicate on the "cadredescription" field.
func CadredescriptionIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldCadredescription, vs...))
}

// CadredescriptionNotIn applies the NotIn predicate on the "cadredescription" field.
func CadredescriptionNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldCadredescription, vs...))
}

// CadredescriptionGT applies the GT predicate on the "cadredescription" field.
func CadredescriptionGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldCadredescription, v))
}

// CadredescriptionGTE applies the GTE predicate on the "cadredescription" field.
func CadredescriptionGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldCadredescription, v))
}

// CadredescriptionLT applies the LT predicate on the "cadredescription" field.
func CadredescriptionLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldCadredescription, v))
}

// CadredescriptionLTE applies the LTE predicate on the "cadredescription" field.
func CadredescriptionLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldCadredescription, v))
}

// CadredescriptionContains applies the Contains predicate on the "cadredescription" field.
func CadredescriptionContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldCadredescription, v))
}

// CadredescriptionHasPrefix applies the HasPrefix predicate on the "cadredescription" field.
func CadredescriptionHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldCadredescription, v))
}

// CadredescriptionHasSuffix applies the HasSuffix predicate on the "cadredescription" field.
func CadredescriptionHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldCadredescription, v))
}

// CadredescriptionEqualFold applies the EqualFold predicate on the "cadredescription" field.
func CadredescriptionEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldCadredescription, v))
}

// CadredescriptionContainsFold applies the ContainsFold predicate on the "cadredescription" field.
func CadredescriptionContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldCadredescription, v))
}

// PayLevelEQ applies the EQ predicate on the "PayLevel" field.
func PayLevelEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldPayLevel, v))
}

// PayLevelNEQ applies the NEQ predicate on the "PayLevel" field.
func PayLevelNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldPayLevel, v))
}

// PayLevelIn applies the In predicate on the "PayLevel" field.
func PayLevelIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldPayLevel, vs...))
}

// PayLevelNotIn applies the NotIn predicate on the "PayLevel" field.
func PayLevelNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldPayLevel, vs...))
}

// PayLevelGT applies the GT predicate on the "PayLevel" field.
func PayLevelGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldPayLevel, v))
}

// PayLevelGTE applies the GTE predicate on the "PayLevel" field.
func PayLevelGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldPayLevel, v))
}

// PayLevelLT applies the LT predicate on the "PayLevel" field.
func PayLevelLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldPayLevel, v))
}

// PayLevelLTE applies the LTE predicate on the "PayLevel" field.
func PayLevelLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldPayLevel, v))
}

// PayLevelContains applies the Contains predicate on the "PayLevel" field.
func PayLevelContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldPayLevel, v))
}

// PayLevelHasPrefix applies the HasPrefix predicate on the "PayLevel" field.
func PayLevelHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldPayLevel, v))
}

// PayLevelHasSuffix applies the HasSuffix predicate on the "PayLevel" field.
func PayLevelHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldPayLevel, v))
}

// PayLevelEqualFold applies the EqualFold predicate on the "PayLevel" field.
func PayLevelEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldPayLevel, v))
}

// PayLevelContainsFold applies the ContainsFold predicate on the "PayLevel" field.
func PayLevelContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldPayLevel, v))
}

// ScaleEQ applies the EQ predicate on the "Scale" field.
func ScaleEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldScale, v))
}

// ScaleNEQ applies the NEQ predicate on the "Scale" field.
func ScaleNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldScale, v))
}

// ScaleIn applies the In predicate on the "Scale" field.
func ScaleIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldScale, vs...))
}

// ScaleNotIn applies the NotIn predicate on the "Scale" field.
func ScaleNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldScale, vs...))
}

// ScaleGT applies the GT predicate on the "Scale" field.
func ScaleGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldScale, v))
}

// ScaleGTE applies the GTE predicate on the "Scale" field.
func ScaleGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldScale, v))
}

// ScaleLT applies the LT predicate on the "Scale" field.
func ScaleLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldScale, v))
}

// ScaleLTE applies the LTE predicate on the "Scale" field.
func ScaleLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldScale, v))
}

// ScaleContains applies the Contains predicate on the "Scale" field.
func ScaleContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldScale, v))
}

// ScaleHasPrefix applies the HasPrefix predicate on the "Scale" field.
func ScaleHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldScale, v))
}

// ScaleHasSuffix applies the HasSuffix predicate on the "Scale" field.
func ScaleHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldScale, v))
}

// ScaleEqualFold applies the EqualFold predicate on the "Scale" field.
func ScaleEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldScale, v))
}

// ScaleContainsFold applies the ContainsFold predicate on the "Scale" field.
func ScaleContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldScale, v))
}

// ExamconfigurationExamcodeEQ applies the EQ predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldExamconfigurationExamcode, v))
}

// ExamconfigurationExamcodeNEQ applies the NEQ predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldExamconfigurationExamcode, v))
}

// ExamconfigurationExamcodeIn applies the In predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldExamconfigurationExamcode, vs...))
}

// ExamconfigurationExamcodeNotIn applies the NotIn predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldExamconfigurationExamcode, vs...))
}

// ExamconfigurationExamcodeGT applies the GT predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldExamconfigurationExamcode, v))
}

// ExamconfigurationExamcodeGTE applies the GTE predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldExamconfigurationExamcode, v))
}

// ExamconfigurationExamcodeLT applies the LT predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldExamconfigurationExamcode, v))
}

// ExamconfigurationExamcodeLTE applies the LTE predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldExamconfigurationExamcode, v))
}

// ExamconfigurationExamcodeIsNil applies the IsNil predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldExamconfigurationExamcode))
}

// ExamconfigurationExamcodeNotNil applies the NotNil predicate on the "ExamconfigurationExamcode" field.
func ExamconfigurationExamcodeNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldExamconfigurationExamcode))
}

// ExamShortDescriptionEQ applies the EQ predicate on the "ExamShortDescription" field.
func ExamShortDescriptionEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldExamShortDescription, v))
}

// ExamShortDescriptionNEQ applies the NEQ predicate on the "ExamShortDescription" field.
func ExamShortDescriptionNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldExamShortDescription, v))
}

// ExamShortDescriptionIn applies the In predicate on the "ExamShortDescription" field.
func ExamShortDescriptionIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldExamShortDescription, vs...))
}

// ExamShortDescriptionNotIn applies the NotIn predicate on the "ExamShortDescription" field.
func ExamShortDescriptionNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldExamShortDescription, vs...))
}

// ExamShortDescriptionGT applies the GT predicate on the "ExamShortDescription" field.
func ExamShortDescriptionGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldExamShortDescription, v))
}

// ExamShortDescriptionGTE applies the GTE predicate on the "ExamShortDescription" field.
func ExamShortDescriptionGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldExamShortDescription, v))
}

// ExamShortDescriptionLT applies the LT predicate on the "ExamShortDescription" field.
func ExamShortDescriptionLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldExamShortDescription, v))
}

// ExamShortDescriptionLTE applies the LTE predicate on the "ExamShortDescription" field.
func ExamShortDescriptionLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldExamShortDescription, v))
}

// ExamShortDescriptionContains applies the Contains predicate on the "ExamShortDescription" field.
func ExamShortDescriptionContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldExamShortDescription, v))
}

// ExamShortDescriptionHasPrefix applies the HasPrefix predicate on the "ExamShortDescription" field.
func ExamShortDescriptionHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldExamShortDescription, v))
}

// ExamShortDescriptionHasSuffix applies the HasSuffix predicate on the "ExamShortDescription" field.
func ExamShortDescriptionHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldExamShortDescription, v))
}

// ExamShortDescriptionIsNil applies the IsNil predicate on the "ExamShortDescription" field.
func ExamShortDescriptionIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldExamShortDescription))
}

// ExamShortDescriptionNotNil applies the NotNil predicate on the "ExamShortDescription" field.
func ExamShortDescriptionNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldExamShortDescription))
}

// ExamShortDescriptionEqualFold applies the EqualFold predicate on the "ExamShortDescription" field.
func ExamShortDescriptionEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldExamShortDescription, v))
}

// ExamShortDescriptionContainsFold applies the ContainsFold predicate on the "ExamShortDescription" field.
func ExamShortDescriptionContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldExamShortDescription, v))
}

// ExamLongDescriptionEQ applies the EQ predicate on the "ExamLongDescription" field.
func ExamLongDescriptionEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldExamLongDescription, v))
}

// ExamLongDescriptionNEQ applies the NEQ predicate on the "ExamLongDescription" field.
func ExamLongDescriptionNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldExamLongDescription, v))
}

// ExamLongDescriptionIn applies the In predicate on the "ExamLongDescription" field.
func ExamLongDescriptionIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldExamLongDescription, vs...))
}

// ExamLongDescriptionNotIn applies the NotIn predicate on the "ExamLongDescription" field.
func ExamLongDescriptionNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldExamLongDescription, vs...))
}

// ExamLongDescriptionGT applies the GT predicate on the "ExamLongDescription" field.
func ExamLongDescriptionGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldExamLongDescription, v))
}

// ExamLongDescriptionGTE applies the GTE predicate on the "ExamLongDescription" field.
func ExamLongDescriptionGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldExamLongDescription, v))
}

// ExamLongDescriptionLT applies the LT predicate on the "ExamLongDescription" field.
func ExamLongDescriptionLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldExamLongDescription, v))
}

// ExamLongDescriptionLTE applies the LTE predicate on the "ExamLongDescription" field.
func ExamLongDescriptionLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldExamLongDescription, v))
}

// ExamLongDescriptionContains applies the Contains predicate on the "ExamLongDescription" field.
func ExamLongDescriptionContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldExamLongDescription, v))
}

// ExamLongDescriptionHasPrefix applies the HasPrefix predicate on the "ExamLongDescription" field.
func ExamLongDescriptionHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldExamLongDescription, v))
}

// ExamLongDescriptionHasSuffix applies the HasSuffix predicate on the "ExamLongDescription" field.
func ExamLongDescriptionHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldExamLongDescription, v))
}

// ExamLongDescriptionIsNil applies the IsNil predicate on the "ExamLongDescription" field.
func ExamLongDescriptionIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldExamLongDescription))
}

// ExamLongDescriptionNotNil applies the NotNil predicate on the "ExamLongDescription" field.
func ExamLongDescriptionNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldExamLongDescription))
}

// ExamLongDescriptionEqualFold applies the EqualFold predicate on the "ExamLongDescription" field.
func ExamLongDescriptionEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldExamLongDescription, v))
}

// ExamLongDescriptionContainsFold applies the ContainsFold predicate on the "ExamLongDescription" field.
func ExamLongDescriptionContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldExamLongDescription, v))
}

// EmployeePostPostIdEQ applies the EQ predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEmployeePostPostId, v))
}

// EmployeePostPostIdNEQ applies the NEQ predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldEmployeePostPostId, v))
}

// EmployeePostPostIdIn applies the In predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldEmployeePostPostId, vs...))
}

// EmployeePostPostIdNotIn applies the NotIn predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldEmployeePostPostId, vs...))
}

// EmployeePostPostIdGT applies the GT predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldEmployeePostPostId, v))
}

// EmployeePostPostIdGTE applies the GTE predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldEmployeePostPostId, v))
}

// EmployeePostPostIdLT applies the LT predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldEmployeePostPostId, v))
}

// EmployeePostPostIdLTE applies the LTE predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldEmployeePostPostId, v))
}

// EmployeePostPostIdIsNil applies the IsNil predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldEmployeePostPostId))
}

// EmployeePostPostIdNotNil applies the NotNil predicate on the "EmployeePost_postId" field.
func EmployeePostPostIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldEmployeePostPostId))
}

// EmployeeGroupGroupIdEQ applies the EQ predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEmployeeGroupGroupId, v))
}

// EmployeeGroupGroupIdNEQ applies the NEQ predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldEmployeeGroupGroupId, v))
}

// EmployeeGroupGroupIdIn applies the In predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldEmployeeGroupGroupId, vs...))
}

// EmployeeGroupGroupIdNotIn applies the NotIn predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldEmployeeGroupGroupId, vs...))
}

// EmployeeGroupGroupIdGT applies the GT predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldEmployeeGroupGroupId, v))
}

// EmployeeGroupGroupIdGTE applies the GTE predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldEmployeeGroupGroupId, v))
}

// EmployeeGroupGroupIdLT applies the LT predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldEmployeeGroupGroupId, v))
}

// EmployeeGroupGroupIdLTE applies the LTE predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldEmployeeGroupGroupId, v))
}

// EmployeeGroupGroupIdIsNil applies the IsNil predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldEmployeeGroupGroupId))
}

// EmployeeGroupGroupIdNotNil applies the NotNil predicate on the "EmployeeGroup_groupId" field.
func EmployeeGroupGroupIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldEmployeeGroupGroupId))
}

// GroupDescriptionEQ applies the EQ predicate on the "GroupDescription" field.
func GroupDescriptionEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldGroupDescription, v))
}

// GroupDescriptionNEQ applies the NEQ predicate on the "GroupDescription" field.
func GroupDescriptionNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldGroupDescription, v))
}

// GroupDescriptionIn applies the In predicate on the "GroupDescription" field.
func GroupDescriptionIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldGroupDescription, vs...))
}

// GroupDescriptionNotIn applies the NotIn predicate on the "GroupDescription" field.
func GroupDescriptionNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldGroupDescription, vs...))
}

// GroupDescriptionGT applies the GT predicate on the "GroupDescription" field.
func GroupDescriptionGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldGroupDescription, v))
}

// GroupDescriptionGTE applies the GTE predicate on the "GroupDescription" field.
func GroupDescriptionGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldGroupDescription, v))
}

// GroupDescriptionLT applies the LT predicate on the "GroupDescription" field.
func GroupDescriptionLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldGroupDescription, v))
}

// GroupDescriptionLTE applies the LTE predicate on the "GroupDescription" field.
func GroupDescriptionLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldGroupDescription, v))
}

// GroupDescriptionContains applies the Contains predicate on the "GroupDescription" field.
func GroupDescriptionContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldGroupDescription, v))
}

// GroupDescriptionHasPrefix applies the HasPrefix predicate on the "GroupDescription" field.
func GroupDescriptionHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldGroupDescription, v))
}

// GroupDescriptionHasSuffix applies the HasSuffix predicate on the "GroupDescription" field.
func GroupDescriptionHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldGroupDescription, v))
}

// GroupDescriptionIsNil applies the IsNil predicate on the "GroupDescription" field.
func GroupDescriptionIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldGroupDescription))
}

// GroupDescriptionNotNil applies the NotNil predicate on the "GroupDescription" field.
func GroupDescriptionNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldGroupDescription))
}

// GroupDescriptionEqualFold applies the EqualFold predicate on the "GroupDescription" field.
func GroupDescriptionEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldGroupDescription, v))
}

// GroupDescriptionContainsFold applies the ContainsFold predicate on the "GroupDescription" field.
func GroupDescriptionContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldGroupDescription, v))
}

// PostCodeEQ applies the EQ predicate on the "PostCode" field.
func PostCodeEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldPostCode, v))
}

// PostCodeNEQ applies the NEQ predicate on the "PostCode" field.
func PostCodeNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldPostCode, v))
}

// PostCodeIn applies the In predicate on the "PostCode" field.
func PostCodeIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldPostCode, vs...))
}

// PostCodeNotIn applies the NotIn predicate on the "PostCode" field.
func PostCodeNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldPostCode, vs...))
}

// PostCodeGT applies the GT predicate on the "PostCode" field.
func PostCodeGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldPostCode, v))
}

// PostCodeGTE applies the GTE predicate on the "PostCode" field.
func PostCodeGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldPostCode, v))
}

// PostCodeLT applies the LT predicate on the "PostCode" field.
func PostCodeLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldPostCode, v))
}

// PostCodeLTE applies the LTE predicate on the "PostCode" field.
func PostCodeLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldPostCode, v))
}

// PostCodeContains applies the Contains predicate on the "PostCode" field.
func PostCodeContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldPostCode, v))
}

// PostCodeHasPrefix applies the HasPrefix predicate on the "PostCode" field.
func PostCodeHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldPostCode, v))
}

// PostCodeHasSuffix applies the HasSuffix predicate on the "PostCode" field.
func PostCodeHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldPostCode, v))
}

// PostCodeIsNil applies the IsNil predicate on the "PostCode" field.
func PostCodeIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldPostCode))
}

// PostCodeNotNil applies the NotNil predicate on the "PostCode" field.
func PostCodeNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldPostCode))
}

// PostCodeEqualFold applies the EqualFold predicate on the "PostCode" field.
func PostCodeEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldPostCode, v))
}

// PostCodeContainsFold applies the ContainsFold predicate on the "PostCode" field.
func PostCodeContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldPostCode, v))
}

// PostDescriptionEQ applies the EQ predicate on the "PostDescription" field.
func PostDescriptionEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldPostDescription, v))
}

// PostDescriptionNEQ applies the NEQ predicate on the "PostDescription" field.
func PostDescriptionNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldPostDescription, v))
}

// PostDescriptionIn applies the In predicate on the "PostDescription" field.
func PostDescriptionIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldPostDescription, vs...))
}

// PostDescriptionNotIn applies the NotIn predicate on the "PostDescription" field.
func PostDescriptionNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldPostDescription, vs...))
}

// PostDescriptionGT applies the GT predicate on the "PostDescription" field.
func PostDescriptionGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldPostDescription, v))
}

// PostDescriptionGTE applies the GTE predicate on the "PostDescription" field.
func PostDescriptionGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldPostDescription, v))
}

// PostDescriptionLT applies the LT predicate on the "PostDescription" field.
func PostDescriptionLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldPostDescription, v))
}

// PostDescriptionLTE applies the LTE predicate on the "PostDescription" field.
func PostDescriptionLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldPostDescription, v))
}

// PostDescriptionContains applies the Contains predicate on the "PostDescription" field.
func PostDescriptionContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldPostDescription, v))
}

// PostDescriptionHasPrefix applies the HasPrefix predicate on the "PostDescription" field.
func PostDescriptionHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldPostDescription, v))
}

// PostDescriptionHasSuffix applies the HasSuffix predicate on the "PostDescription" field.
func PostDescriptionHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldPostDescription, v))
}

// PostDescriptionIsNil applies the IsNil predicate on the "PostDescription" field.
func PostDescriptionIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldPostDescription))
}

// PostDescriptionNotNil applies the NotNil predicate on the "PostDescription" field.
func PostDescriptionNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldPostDescription))
}

// PostDescriptionEqualFold applies the EqualFold predicate on the "PostDescription" field.
func PostDescriptionEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldPostDescription, v))
}

// PostDescriptionContainsFold applies the ContainsFold predicate on the "PostDescription" field.
func PostDescriptionContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldPostDescription, v))
}

// BaseCadreEQ applies the EQ predicate on the "BaseCadre" field.
func BaseCadreEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldBaseCadre, v))
}

// BaseCadreNEQ applies the NEQ predicate on the "BaseCadre" field.
func BaseCadreNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldBaseCadre, v))
}

// BaseCadreIn applies the In predicate on the "BaseCadre" field.
func BaseCadreIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldBaseCadre, vs...))
}

// BaseCadreNotIn applies the NotIn predicate on the "BaseCadre" field.
func BaseCadreNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldBaseCadre, vs...))
}

// BaseCadreGT applies the GT predicate on the "BaseCadre" field.
func BaseCadreGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldBaseCadre, v))
}

// BaseCadreGTE applies the GTE predicate on the "BaseCadre" field.
func BaseCadreGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldBaseCadre, v))
}

// BaseCadreLT applies the LT predicate on the "BaseCadre" field.
func BaseCadreLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldBaseCadre, v))
}

// BaseCadreLTE applies the LTE predicate on the "BaseCadre" field.
func BaseCadreLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldBaseCadre, v))
}

// BaseCadreIsNil applies the IsNil predicate on the "BaseCadre" field.
func BaseCadreIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldBaseCadre))
}

// BaseCadreNotNil applies the NotNil predicate on the "BaseCadre" field.
func BaseCadreNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldBaseCadre))
}

// GdsServiceEQ applies the EQ predicate on the "GdsService" field.
func GdsServiceEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldGdsService, v))
}

// GdsServiceNEQ applies the NEQ predicate on the "GdsService" field.
func GdsServiceNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldGdsService, v))
}

// GdsServiceIn applies the In predicate on the "GdsService" field.
func GdsServiceIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldGdsService, vs...))
}

// GdsServiceNotIn applies the NotIn predicate on the "GdsService" field.
func GdsServiceNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldGdsService, vs...))
}

// GdsServiceGT applies the GT predicate on the "GdsService" field.
func GdsServiceGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldGdsService, v))
}

// GdsServiceGTE applies the GTE predicate on the "GdsService" field.
func GdsServiceGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldGdsService, v))
}

// GdsServiceLT applies the LT predicate on the "GdsService" field.
func GdsServiceLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldGdsService, v))
}

// GdsServiceLTE applies the LTE predicate on the "GdsService" field.
func GdsServiceLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldGdsService, v))
}

// GdsServiceIsNil applies the IsNil predicate on the "GdsService" field.
func GdsServiceIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldGdsService))
}

// GdsServiceNotNil applies the NotNil predicate on the "GdsService" field.
func GdsServiceNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldGdsService))
}

// AgeCriteriaEQ applies the EQ predicate on the "ageCriteria" field.
func AgeCriteriaEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldAgeCriteria, v))
}

// AgeCriteriaNEQ applies the NEQ predicate on the "ageCriteria" field.
func AgeCriteriaNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldAgeCriteria, v))
}

// AgeCriteriaIn applies the In predicate on the "ageCriteria" field.
func AgeCriteriaIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldAgeCriteria, vs...))
}

// AgeCriteriaNotIn applies the NotIn predicate on the "ageCriteria" field.
func AgeCriteriaNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldAgeCriteria, vs...))
}

// AgeCriteriaGT applies the GT predicate on the "ageCriteria" field.
func AgeCriteriaGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldAgeCriteria, v))
}

// AgeCriteriaGTE applies the GTE predicate on the "ageCriteria" field.
func AgeCriteriaGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldAgeCriteria, v))
}

// AgeCriteriaLT applies the LT predicate on the "ageCriteria" field.
func AgeCriteriaLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldAgeCriteria, v))
}

// AgeCriteriaLTE applies the LTE predicate on the "ageCriteria" field.
func AgeCriteriaLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldAgeCriteria, v))
}

// AgeCriteriaIsNil applies the IsNil predicate on the "ageCriteria" field.
func AgeCriteriaIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldAgeCriteria))
}

// AgeCriteriaNotNil applies the NotNil predicate on the "ageCriteria" field.
func AgeCriteriaNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldAgeCriteria))
}

// ServiceCriteriaEQ applies the EQ predicate on the "ServiceCriteria" field.
func ServiceCriteriaEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldServiceCriteria, v))
}

// ServiceCriteriaNEQ applies the NEQ predicate on the "ServiceCriteria" field.
func ServiceCriteriaNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldServiceCriteria, v))
}

// ServiceCriteriaIn applies the In predicate on the "ServiceCriteria" field.
func ServiceCriteriaIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldServiceCriteria, vs...))
}

// ServiceCriteriaNotIn applies the NotIn predicate on the "ServiceCriteria" field.
func ServiceCriteriaNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldServiceCriteria, vs...))
}

// ServiceCriteriaGT applies the GT predicate on the "ServiceCriteria" field.
func ServiceCriteriaGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldServiceCriteria, v))
}

// ServiceCriteriaGTE applies the GTE predicate on the "ServiceCriteria" field.
func ServiceCriteriaGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldServiceCriteria, v))
}

// ServiceCriteriaLT applies the LT predicate on the "ServiceCriteria" field.
func ServiceCriteriaLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldServiceCriteria, v))
}

// ServiceCriteriaLTE applies the LTE predicate on the "ServiceCriteria" field.
func ServiceCriteriaLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldServiceCriteria, v))
}

// ServiceCriteriaIsNil applies the IsNil predicate on the "ServiceCriteria" field.
func ServiceCriteriaIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldServiceCriteria))
}

// ServiceCriteriaNotNil applies the NotNil predicate on the "ServiceCriteria" field.
func ServiceCriteriaNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldServiceCriteria))
}

// DrivingLicenceCriteriaEQ applies the EQ predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaNEQ applies the NEQ predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaIn applies the In predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldDrivingLicenceCriteria, vs...))
}

// DrivingLicenceCriteriaNotIn applies the NotIn predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldDrivingLicenceCriteria, vs...))
}

// DrivingLicenceCriteriaGT applies the GT predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaGTE applies the GTE predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaLT applies the LT predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaLTE applies the LTE predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaIsNil applies the IsNil predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldDrivingLicenceCriteria))
}

// DrivingLicenceCriteriaNotNil applies the NotNil predicate on the "DrivingLicenceCriteria" field.
func DrivingLicenceCriteriaNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldDrivingLicenceCriteria))
}

// ComputerKnowledgeEQ applies the EQ predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldComputerKnowledge, v))
}

// ComputerKnowledgeNEQ applies the NEQ predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldComputerKnowledge, v))
}

// ComputerKnowledgeIn applies the In predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldComputerKnowledge, vs...))
}

// ComputerKnowledgeNotIn applies the NotIn predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldComputerKnowledge, vs...))
}

// ComputerKnowledgeGT applies the GT predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldComputerKnowledge, v))
}

// ComputerKnowledgeGTE applies the GTE predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldComputerKnowledge, v))
}

// ComputerKnowledgeLT applies the LT predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldComputerKnowledge, v))
}

// ComputerKnowledgeLTE applies the LTE predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldComputerKnowledge, v))
}

// ComputerKnowledgeIsNil applies the IsNil predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldComputerKnowledge))
}

// ComputerKnowledgeNotNil applies the NotNil predicate on the "ComputerKnowledge" field.
func ComputerKnowledgeNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldComputerKnowledge))
}

// EligibiltyBasedOnLevelOfPaymatrixEQ applies the EQ predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEligibiltyBasedOnLevelOfPaymatrix, v))
}

// EligibiltyBasedOnLevelOfPaymatrixNEQ applies the NEQ predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldEligibiltyBasedOnLevelOfPaymatrix, v))
}

// EligibiltyBasedOnLevelOfPaymatrixIn applies the In predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldEligibiltyBasedOnLevelOfPaymatrix, vs...))
}

// EligibiltyBasedOnLevelOfPaymatrixNotIn applies the NotIn predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldEligibiltyBasedOnLevelOfPaymatrix, vs...))
}

// EligibiltyBasedOnLevelOfPaymatrixGT applies the GT predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldEligibiltyBasedOnLevelOfPaymatrix, v))
}

// EligibiltyBasedOnLevelOfPaymatrixGTE applies the GTE predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldEligibiltyBasedOnLevelOfPaymatrix, v))
}

// EligibiltyBasedOnLevelOfPaymatrixLT applies the LT predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldEligibiltyBasedOnLevelOfPaymatrix, v))
}

// EligibiltyBasedOnLevelOfPaymatrixLTE applies the LTE predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldEligibiltyBasedOnLevelOfPaymatrix, v))
}

// EligibiltyBasedOnLevelOfPaymatrixIsNil applies the IsNil predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldEligibiltyBasedOnLevelOfPaymatrix))
}

// EligibiltyBasedOnLevelOfPaymatrixNotNil applies the NotNil predicate on the "EligibiltyBasedOnLevelOfPaymatrix" field.
func EligibiltyBasedOnLevelOfPaymatrixNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldEligibiltyBasedOnLevelOfPaymatrix))
}

// EducationDetailsEducationCodeEQ applies the EQ predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEducationDetailsEducationCode, v))
}

// EducationDetailsEducationCodeNEQ applies the NEQ predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldEducationDetailsEducationCode, v))
}

// EducationDetailsEducationCodeIn applies the In predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldEducationDetailsEducationCode, vs...))
}

// EducationDetailsEducationCodeNotIn applies the NotIn predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldEducationDetailsEducationCode, vs...))
}

// EducationDetailsEducationCodeGT applies the GT predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldEducationDetailsEducationCode, v))
}

// EducationDetailsEducationCodeGTE applies the GTE predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldEducationDetailsEducationCode, v))
}

// EducationDetailsEducationCodeLT applies the LT predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldEducationDetailsEducationCode, v))
}

// EducationDetailsEducationCodeLTE applies the LTE predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldEducationDetailsEducationCode, v))
}

// EducationDetailsEducationCodeIsNil applies the IsNil predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldEducationDetailsEducationCode))
}

// EducationDetailsEducationCodeNotNil applies the NotNil predicate on the "EducationDetails_educationCode" field.
func EducationDetailsEducationCodeNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldEducationDetailsEducationCode))
}

// EducationDescriptionEQ applies the EQ predicate on the "EducationDescription" field.
func EducationDescriptionEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldEducationDescription, v))
}

// EducationDescriptionNEQ applies the NEQ predicate on the "EducationDescription" field.
func EducationDescriptionNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldEducationDescription, v))
}

// EducationDescriptionIn applies the In predicate on the "EducationDescription" field.
func EducationDescriptionIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldEducationDescription, vs...))
}

// EducationDescriptionNotIn applies the NotIn predicate on the "EducationDescription" field.
func EducationDescriptionNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldEducationDescription, vs...))
}

// EducationDescriptionGT applies the GT predicate on the "EducationDescription" field.
func EducationDescriptionGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldEducationDescription, v))
}

// EducationDescriptionGTE applies the GTE predicate on the "EducationDescription" field.
func EducationDescriptionGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldEducationDescription, v))
}

// EducationDescriptionLT applies the LT predicate on the "EducationDescription" field.
func EducationDescriptionLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldEducationDescription, v))
}

// EducationDescriptionLTE applies the LTE predicate on the "EducationDescription" field.
func EducationDescriptionLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldEducationDescription, v))
}

// EducationDescriptionContains applies the Contains predicate on the "EducationDescription" field.
func EducationDescriptionContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldEducationDescription, v))
}

// EducationDescriptionHasPrefix applies the HasPrefix predicate on the "EducationDescription" field.
func EducationDescriptionHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldEducationDescription, v))
}

// EducationDescriptionHasSuffix applies the HasSuffix predicate on the "EducationDescription" field.
func EducationDescriptionHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldEducationDescription, v))
}

// EducationDescriptionIsNil applies the IsNil predicate on the "EducationDescription" field.
func EducationDescriptionIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldEducationDescription))
}

// EducationDescriptionNotNil applies the NotNil predicate on the "EducationDescription" field.
func EducationDescriptionNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldEducationDescription))
}

// EducationDescriptionEqualFold applies the EqualFold predicate on the "EducationDescription" field.
func EducationDescriptionEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldEducationDescription, v))
}

// EducationDescriptionContainsFold applies the ContainsFold predicate on the "EducationDescription" field.
func EducationDescriptionContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldEducationDescription, v))
}

// OrderNumberEQ applies the EQ predicate on the "OrderNumber" field.
func OrderNumberEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldOrderNumber, v))
}

// OrderNumberNEQ applies the NEQ predicate on the "OrderNumber" field.
func OrderNumberNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldOrderNumber, v))
}

// OrderNumberIn applies the In predicate on the "OrderNumber" field.
func OrderNumberIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldOrderNumber, vs...))
}

// OrderNumberNotIn applies the NotIn predicate on the "OrderNumber" field.
func OrderNumberNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldOrderNumber, vs...))
}

// OrderNumberGT applies the GT predicate on the "OrderNumber" field.
func OrderNumberGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldOrderNumber, v))
}

// OrderNumberGTE applies the GTE predicate on the "OrderNumber" field.
func OrderNumberGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldOrderNumber, v))
}

// OrderNumberLT applies the LT predicate on the "OrderNumber" field.
func OrderNumberLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldOrderNumber, v))
}

// OrderNumberLTE applies the LTE predicate on the "OrderNumber" field.
func OrderNumberLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldOrderNumber, v))
}

// OrderNumberContains applies the Contains predicate on the "OrderNumber" field.
func OrderNumberContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldOrderNumber, v))
}

// OrderNumberHasPrefix applies the HasPrefix predicate on the "OrderNumber" field.
func OrderNumberHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldOrderNumber, v))
}

// OrderNumberHasSuffix applies the HasSuffix predicate on the "OrderNumber" field.
func OrderNumberHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldOrderNumber, v))
}

// OrderNumberIsNil applies the IsNil predicate on the "OrderNumber" field.
func OrderNumberIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldOrderNumber))
}

// OrderNumberNotNil applies the NotNil predicate on the "OrderNumber" field.
func OrderNumberNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldOrderNumber))
}

// OrderNumberEqualFold applies the EqualFold predicate on the "OrderNumber" field.
func OrderNumberEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldOrderNumber, v))
}

// OrderNumberContainsFold applies the ContainsFold predicate on the "OrderNumber" field.
func OrderNumberContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldOrderNumber, v))
}

// StatusEQ applies the EQ predicate on the "Status" field.
func StatusEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "Status" field.
func StatusNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "Status" field.
func StatusIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "Status" field.
func StatusNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldStatus, vs...))
}

// StatusGT applies the GT predicate on the "Status" field.
func StatusGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldStatus, v))
}

// StatusGTE applies the GTE predicate on the "Status" field.
func StatusGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldStatus, v))
}

// StatusLT applies the LT predicate on the "Status" field.
func StatusLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldStatus, v))
}

// StatusLTE applies the LTE predicate on the "Status" field.
func StatusLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldStatus, v))
}

// StatusContains applies the Contains predicate on the "Status" field.
func StatusContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldStatus, v))
}

// StatusHasPrefix applies the HasPrefix predicate on the "Status" field.
func StatusHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldStatus, v))
}

// StatusHasSuffix applies the HasSuffix predicate on the "Status" field.
func StatusHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldStatus, v))
}

// StatusIsNil applies the IsNil predicate on the "Status" field.
func StatusIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldStatus))
}

// StatusNotNil applies the NotNil predicate on the "Status" field.
func StatusNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldStatus))
}

// StatusEqualFold applies the EqualFold predicate on the "Status" field.
func StatusEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldStatus, v))
}

// StatusContainsFold applies the ContainsFold predicate on the "Status" field.
func StatusContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldStatus, v))
}

// CreatedByIdEQ applies the EQ predicate on the "CreatedById" field.
func CreatedByIdEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedById, v))
}

// CreatedByIdNEQ applies the NEQ predicate on the "CreatedById" field.
func CreatedByIdNEQ(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldCreatedById, v))
}

// CreatedByIdIn applies the In predicate on the "CreatedById" field.
func CreatedByIdIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldCreatedById, vs...))
}

// CreatedByIdNotIn applies the NotIn predicate on the "CreatedById" field.
func CreatedByIdNotIn(vs ...int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldCreatedById, vs...))
}

// CreatedByIdGT applies the GT predicate on the "CreatedById" field.
func CreatedByIdGT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldCreatedById, v))
}

// CreatedByIdGTE applies the GTE predicate on the "CreatedById" field.
func CreatedByIdGTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldCreatedById, v))
}

// CreatedByIdLT applies the LT predicate on the "CreatedById" field.
func CreatedByIdLT(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldCreatedById, v))
}

// CreatedByIdLTE applies the LTE predicate on the "CreatedById" field.
func CreatedByIdLTE(v int32) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldCreatedById, v))
}

// CreatedByIdIsNil applies the IsNil predicate on the "CreatedById" field.
func CreatedByIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldCreatedById))
}

// CreatedByIdNotNil applies the NotNil predicate on the "CreatedById" field.
func CreatedByIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldCreatedById))
}

// CreatedByUserNameEQ applies the EQ predicate on the "CreatedByUserName" field.
func CreatedByUserNameEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedByUserName, v))
}

// CreatedByUserNameNEQ applies the NEQ predicate on the "CreatedByUserName" field.
func CreatedByUserNameNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldCreatedByUserName, v))
}

// CreatedByUserNameIn applies the In predicate on the "CreatedByUserName" field.
func CreatedByUserNameIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldCreatedByUserName, vs...))
}

// CreatedByUserNameNotIn applies the NotIn predicate on the "CreatedByUserName" field.
func CreatedByUserNameNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldCreatedByUserName, vs...))
}

// CreatedByUserNameGT applies the GT predicate on the "CreatedByUserName" field.
func CreatedByUserNameGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldCreatedByUserName, v))
}

// CreatedByUserNameGTE applies the GTE predicate on the "CreatedByUserName" field.
func CreatedByUserNameGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldCreatedByUserName, v))
}

// CreatedByUserNameLT applies the LT predicate on the "CreatedByUserName" field.
func CreatedByUserNameLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldCreatedByUserName, v))
}

// CreatedByUserNameLTE applies the LTE predicate on the "CreatedByUserName" field.
func CreatedByUserNameLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldCreatedByUserName, v))
}

// CreatedByUserNameContains applies the Contains predicate on the "CreatedByUserName" field.
func CreatedByUserNameContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldCreatedByUserName, v))
}

// CreatedByUserNameHasPrefix applies the HasPrefix predicate on the "CreatedByUserName" field.
func CreatedByUserNameHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldCreatedByUserName, v))
}

// CreatedByUserNameHasSuffix applies the HasSuffix predicate on the "CreatedByUserName" field.
func CreatedByUserNameHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldCreatedByUserName, v))
}

// CreatedByUserNameIsNil applies the IsNil predicate on the "CreatedByUserName" field.
func CreatedByUserNameIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldCreatedByUserName))
}

// CreatedByUserNameNotNil applies the NotNil predicate on the "CreatedByUserName" field.
func CreatedByUserNameNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldCreatedByUserName))
}

// CreatedByUserNameEqualFold applies the EqualFold predicate on the "CreatedByUserName" field.
func CreatedByUserNameEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldCreatedByUserName, v))
}

// CreatedByUserNameContainsFold applies the ContainsFold predicate on the "CreatedByUserName" field.
func CreatedByUserNameContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldCreatedByUserName, v))
}

// CreatedByEmployeeIdEQ applies the EQ predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdNEQ applies the NEQ predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdIn applies the In predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldCreatedByEmployeeId, vs...))
}

// CreatedByEmployeeIdNotIn applies the NotIn predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldCreatedByEmployeeId, vs...))
}

// CreatedByEmployeeIdGT applies the GT predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdGTE applies the GTE predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdLT applies the LT predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdLTE applies the LTE predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdContains applies the Contains predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdHasPrefix applies the HasPrefix predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdHasSuffix applies the HasSuffix predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdIsNil applies the IsNil predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldCreatedByEmployeeId))
}

// CreatedByEmployeeIdNotNil applies the NotNil predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldCreatedByEmployeeId))
}

// CreatedByEmployeeIdEqualFold applies the EqualFold predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldCreatedByEmployeeId, v))
}

// CreatedByEmployeeIdContainsFold applies the ContainsFold predicate on the "CreatedByEmployeeId" field.
func CreatedByEmployeeIdContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldCreatedByEmployeeId, v))
}

// CreatedByDesignationEQ applies the EQ predicate on the "CreatedByDesignation" field.
func CreatedByDesignationEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedByDesignation, v))
}

// CreatedByDesignationNEQ applies the NEQ predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldCreatedByDesignation, v))
}

// CreatedByDesignationIn applies the In predicate on the "CreatedByDesignation" field.
func CreatedByDesignationIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldCreatedByDesignation, vs...))
}

// CreatedByDesignationNotIn applies the NotIn predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldCreatedByDesignation, vs...))
}

// CreatedByDesignationGT applies the GT predicate on the "CreatedByDesignation" field.
func CreatedByDesignationGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldCreatedByDesignation, v))
}

// CreatedByDesignationGTE applies the GTE predicate on the "CreatedByDesignation" field.
func CreatedByDesignationGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldCreatedByDesignation, v))
}

// CreatedByDesignationLT applies the LT predicate on the "CreatedByDesignation" field.
func CreatedByDesignationLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldCreatedByDesignation, v))
}

// CreatedByDesignationLTE applies the LTE predicate on the "CreatedByDesignation" field.
func CreatedByDesignationLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldCreatedByDesignation, v))
}

// CreatedByDesignationContains applies the Contains predicate on the "CreatedByDesignation" field.
func CreatedByDesignationContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldCreatedByDesignation, v))
}

// CreatedByDesignationHasPrefix applies the HasPrefix predicate on the "CreatedByDesignation" field.
func CreatedByDesignationHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldCreatedByDesignation, v))
}

// CreatedByDesignationHasSuffix applies the HasSuffix predicate on the "CreatedByDesignation" field.
func CreatedByDesignationHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldCreatedByDesignation, v))
}

// CreatedByDesignationIsNil applies the IsNil predicate on the "CreatedByDesignation" field.
func CreatedByDesignationIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldCreatedByDesignation))
}

// CreatedByDesignationNotNil applies the NotNil predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldCreatedByDesignation))
}

// CreatedByDesignationEqualFold applies the EqualFold predicate on the "CreatedByDesignation" field.
func CreatedByDesignationEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldCreatedByDesignation, v))
}

// CreatedByDesignationContainsFold applies the ContainsFold predicate on the "CreatedByDesignation" field.
func CreatedByDesignationContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldCreatedByDesignation, v))
}

// CreatedDateEQ applies the EQ predicate on the "CreatedDate" field.
func CreatedDateEQ(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldCreatedDate, v))
}

// CreatedDateNEQ applies the NEQ predicate on the "CreatedDate" field.
func CreatedDateNEQ(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldCreatedDate, v))
}

// CreatedDateIn applies the In predicate on the "CreatedDate" field.
func CreatedDateIn(vs ...time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldCreatedDate, vs...))
}

// CreatedDateNotIn applies the NotIn predicate on the "CreatedDate" field.
func CreatedDateNotIn(vs ...time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldCreatedDate, vs...))
}

// CreatedDateGT applies the GT predicate on the "CreatedDate" field.
func CreatedDateGT(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldCreatedDate, v))
}

// CreatedDateGTE applies the GTE predicate on the "CreatedDate" field.
func CreatedDateGTE(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldCreatedDate, v))
}

// CreatedDateLT applies the LT predicate on the "CreatedDate" field.
func CreatedDateLT(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldCreatedDate, v))
}

// CreatedDateLTE applies the LTE predicate on the "CreatedDate" field.
func CreatedDateLTE(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldCreatedDate, v))
}

// CreatedDateIsNil applies the IsNil predicate on the "CreatedDate" field.
func CreatedDateIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldCreatedDate))
}

// CreatedDateNotNil applies the NotNil predicate on the "CreatedDate" field.
func CreatedDateNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldCreatedDate))
}

// VerifiedByIdEQ applies the EQ predicate on the "VerifiedById" field.
func VerifiedByIdEQ(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedById, v))
}

// VerifiedByIdNEQ applies the NEQ predicate on the "VerifiedById" field.
func VerifiedByIdNEQ(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldVerifiedById, v))
}

// VerifiedByIdIn applies the In predicate on the "VerifiedById" field.
func VerifiedByIdIn(vs ...int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldVerifiedById, vs...))
}

// VerifiedByIdNotIn applies the NotIn predicate on the "VerifiedById" field.
func VerifiedByIdNotIn(vs ...int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldVerifiedById, vs...))
}

// VerifiedByIdGT applies the GT predicate on the "VerifiedById" field.
func VerifiedByIdGT(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldVerifiedById, v))
}

// VerifiedByIdGTE applies the GTE predicate on the "VerifiedById" field.
func VerifiedByIdGTE(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldVerifiedById, v))
}

// VerifiedByIdLT applies the LT predicate on the "VerifiedById" field.
func VerifiedByIdLT(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldVerifiedById, v))
}

// VerifiedByIdLTE applies the LTE predicate on the "VerifiedById" field.
func VerifiedByIdLTE(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldVerifiedById, v))
}

// VerifiedByIdIsNil applies the IsNil predicate on the "VerifiedById" field.
func VerifiedByIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldVerifiedById))
}

// VerifiedByIdNotNil applies the NotNil predicate on the "VerifiedById" field.
func VerifiedByIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldVerifiedById))
}

// VerifiedByUserNameEQ applies the EQ predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameNEQ applies the NEQ predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameIn applies the In predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldVerifiedByUserName, vs...))
}

// VerifiedByUserNameNotIn applies the NotIn predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldVerifiedByUserName, vs...))
}

// VerifiedByUserNameGT applies the GT predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameGTE applies the GTE predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameLT applies the LT predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameLTE applies the LTE predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameContains applies the Contains predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameHasPrefix applies the HasPrefix predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameHasSuffix applies the HasSuffix predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameIsNil applies the IsNil predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldVerifiedByUserName))
}

// VerifiedByUserNameNotNil applies the NotNil predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldVerifiedByUserName))
}

// VerifiedByUserNameEqualFold applies the EqualFold predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldVerifiedByUserName, v))
}

// VerifiedByUserNameContainsFold applies the ContainsFold predicate on the "VerifiedByUserName" field.
func VerifiedByUserNameContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldVerifiedByUserName, v))
}

// VerifiedByEmployeeIdEQ applies the EQ predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdNEQ applies the NEQ predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdIn applies the In predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldVerifiedByEmployeeId, vs...))
}

// VerifiedByEmployeeIdNotIn applies the NotIn predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldVerifiedByEmployeeId, vs...))
}

// VerifiedByEmployeeIdGT applies the GT predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdGTE applies the GTE predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdLT applies the LT predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdLTE applies the LTE predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdContains applies the Contains predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdHasPrefix applies the HasPrefix predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdHasSuffix applies the HasSuffix predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdIsNil applies the IsNil predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldVerifiedByEmployeeId))
}

// VerifiedByEmployeeIdNotNil applies the NotNil predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldVerifiedByEmployeeId))
}

// VerifiedByEmployeeIdEqualFold applies the EqualFold predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldVerifiedByEmployeeId, v))
}

// VerifiedByEmployeeIdContainsFold applies the ContainsFold predicate on the "VerifiedByEmployeeId" field.
func VerifiedByEmployeeIdContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldVerifiedByEmployeeId, v))
}

// VerifiedByDesignationEQ applies the EQ predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationNEQ applies the NEQ predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationIn applies the In predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldVerifiedByDesignation, vs...))
}

// VerifiedByDesignationNotIn applies the NotIn predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldVerifiedByDesignation, vs...))
}

// VerifiedByDesignationGT applies the GT predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationGTE applies the GTE predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationLT applies the LT predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationLTE applies the LTE predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationContains applies the Contains predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationHasPrefix applies the HasPrefix predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationHasSuffix applies the HasSuffix predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationIsNil applies the IsNil predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldVerifiedByDesignation))
}

// VerifiedByDesignationNotNil applies the NotNil predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldVerifiedByDesignation))
}

// VerifiedByDesignationEqualFold applies the EqualFold predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldVerifiedByDesignation, v))
}

// VerifiedByDesignationContainsFold applies the ContainsFold predicate on the "VerifiedByDesignation" field.
func VerifiedByDesignationContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldVerifiedByDesignation, v))
}

// VerifiedDateEQ applies the EQ predicate on the "VerifiedDate" field.
func VerifiedDateEQ(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldVerifiedDate, v))
}

// VerifiedDateNEQ applies the NEQ predicate on the "VerifiedDate" field.
func VerifiedDateNEQ(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldVerifiedDate, v))
}

// VerifiedDateIn applies the In predicate on the "VerifiedDate" field.
func VerifiedDateIn(vs ...time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldVerifiedDate, vs...))
}

// VerifiedDateNotIn applies the NotIn predicate on the "VerifiedDate" field.
func VerifiedDateNotIn(vs ...time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldVerifiedDate, vs...))
}

// VerifiedDateGT applies the GT predicate on the "VerifiedDate" field.
func VerifiedDateGT(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldVerifiedDate, v))
}

// VerifiedDateGTE applies the GTE predicate on the "VerifiedDate" field.
func VerifiedDateGTE(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldVerifiedDate, v))
}

// VerifiedDateLT applies the LT predicate on the "VerifiedDate" field.
func VerifiedDateLT(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldVerifiedDate, v))
}

// VerifiedDateLTE applies the LTE predicate on the "VerifiedDate" field.
func VerifiedDateLTE(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldVerifiedDate, v))
}

// VerifiedDateIsNil applies the IsNil predicate on the "VerifiedDate" field.
func VerifiedDateIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldVerifiedDate))
}

// VerifiedDateNotNil applies the NotNil predicate on the "VerifiedDate" field.
func VerifiedDateNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldVerifiedDate))
}

// DeletedByIdEQ applies the EQ predicate on the "DeletedById" field.
func DeletedByIdEQ(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedById, v))
}

// DeletedByIdNEQ applies the NEQ predicate on the "DeletedById" field.
func DeletedByIdNEQ(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldDeletedById, v))
}

// DeletedByIdIn applies the In predicate on the "DeletedById" field.
func DeletedByIdIn(vs ...int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldDeletedById, vs...))
}

// DeletedByIdNotIn applies the NotIn predicate on the "DeletedById" field.
func DeletedByIdNotIn(vs ...int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldDeletedById, vs...))
}

// DeletedByIdGT applies the GT predicate on the "DeletedById" field.
func DeletedByIdGT(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldDeletedById, v))
}

// DeletedByIdGTE applies the GTE predicate on the "DeletedById" field.
func DeletedByIdGTE(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldDeletedById, v))
}

// DeletedByIdLT applies the LT predicate on the "DeletedById" field.
func DeletedByIdLT(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldDeletedById, v))
}

// DeletedByIdLTE applies the LTE predicate on the "DeletedById" field.
func DeletedByIdLTE(v int64) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldDeletedById, v))
}

// DeletedByIdIsNil applies the IsNil predicate on the "DeletedById" field.
func DeletedByIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldDeletedById))
}

// DeletedByIdNotNil applies the NotNil predicate on the "DeletedById" field.
func DeletedByIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldDeletedById))
}

// DeletedByUserNameEQ applies the EQ predicate on the "DeletedByUserName" field.
func DeletedByUserNameEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedByUserName, v))
}

// DeletedByUserNameNEQ applies the NEQ predicate on the "DeletedByUserName" field.
func DeletedByUserNameNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldDeletedByUserName, v))
}

// DeletedByUserNameIn applies the In predicate on the "DeletedByUserName" field.
func DeletedByUserNameIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldDeletedByUserName, vs...))
}

// DeletedByUserNameNotIn applies the NotIn predicate on the "DeletedByUserName" field.
func DeletedByUserNameNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldDeletedByUserName, vs...))
}

// DeletedByUserNameGT applies the GT predicate on the "DeletedByUserName" field.
func DeletedByUserNameGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldDeletedByUserName, v))
}

// DeletedByUserNameGTE applies the GTE predicate on the "DeletedByUserName" field.
func DeletedByUserNameGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldDeletedByUserName, v))
}

// DeletedByUserNameLT applies the LT predicate on the "DeletedByUserName" field.
func DeletedByUserNameLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldDeletedByUserName, v))
}

// DeletedByUserNameLTE applies the LTE predicate on the "DeletedByUserName" field.
func DeletedByUserNameLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldDeletedByUserName, v))
}

// DeletedByUserNameContains applies the Contains predicate on the "DeletedByUserName" field.
func DeletedByUserNameContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldDeletedByUserName, v))
}

// DeletedByUserNameHasPrefix applies the HasPrefix predicate on the "DeletedByUserName" field.
func DeletedByUserNameHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldDeletedByUserName, v))
}

// DeletedByUserNameHasSuffix applies the HasSuffix predicate on the "DeletedByUserName" field.
func DeletedByUserNameHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldDeletedByUserName, v))
}

// DeletedByUserNameIsNil applies the IsNil predicate on the "DeletedByUserName" field.
func DeletedByUserNameIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldDeletedByUserName))
}

// DeletedByUserNameNotNil applies the NotNil predicate on the "DeletedByUserName" field.
func DeletedByUserNameNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldDeletedByUserName))
}

// DeletedByUserNameEqualFold applies the EqualFold predicate on the "DeletedByUserName" field.
func DeletedByUserNameEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldDeletedByUserName, v))
}

// DeletedByUserNameContainsFold applies the ContainsFold predicate on the "DeletedByUserName" field.
func DeletedByUserNameContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldDeletedByUserName, v))
}

// DeletedByEmployeeIdEQ applies the EQ predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdNEQ applies the NEQ predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdIn applies the In predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldDeletedByEmployeeId, vs...))
}

// DeletedByEmployeeIdNotIn applies the NotIn predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldDeletedByEmployeeId, vs...))
}

// DeletedByEmployeeIdGT applies the GT predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdGTE applies the GTE predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdLT applies the LT predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdLTE applies the LTE predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdContains applies the Contains predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdHasPrefix applies the HasPrefix predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdHasSuffix applies the HasSuffix predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdIsNil applies the IsNil predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldDeletedByEmployeeId))
}

// DeletedByEmployeeIdNotNil applies the NotNil predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldDeletedByEmployeeId))
}

// DeletedByEmployeeIdEqualFold applies the EqualFold predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldDeletedByEmployeeId, v))
}

// DeletedByEmployeeIdContainsFold applies the ContainsFold predicate on the "DeletedByEmployeeId" field.
func DeletedByEmployeeIdContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldDeletedByEmployeeId, v))
}

// DeletedByDesignationEQ applies the EQ predicate on the "DeletedByDesignation" field.
func DeletedByDesignationEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedByDesignation, v))
}

// DeletedByDesignationNEQ applies the NEQ predicate on the "DeletedByDesignation" field.
func DeletedByDesignationNEQ(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldDeletedByDesignation, v))
}

// DeletedByDesignationIn applies the In predicate on the "DeletedByDesignation" field.
func DeletedByDesignationIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldDeletedByDesignation, vs...))
}

// DeletedByDesignationNotIn applies the NotIn predicate on the "DeletedByDesignation" field.
func DeletedByDesignationNotIn(vs ...string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldDeletedByDesignation, vs...))
}

// DeletedByDesignationGT applies the GT predicate on the "DeletedByDesignation" field.
func DeletedByDesignationGT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldDeletedByDesignation, v))
}

// DeletedByDesignationGTE applies the GTE predicate on the "DeletedByDesignation" field.
func DeletedByDesignationGTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldDeletedByDesignation, v))
}

// DeletedByDesignationLT applies the LT predicate on the "DeletedByDesignation" field.
func DeletedByDesignationLT(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldDeletedByDesignation, v))
}

// DeletedByDesignationLTE applies the LTE predicate on the "DeletedByDesignation" field.
func DeletedByDesignationLTE(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldDeletedByDesignation, v))
}

// DeletedByDesignationContains applies the Contains predicate on the "DeletedByDesignation" field.
func DeletedByDesignationContains(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContains(FieldDeletedByDesignation, v))
}

// DeletedByDesignationHasPrefix applies the HasPrefix predicate on the "DeletedByDesignation" field.
func DeletedByDesignationHasPrefix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasPrefix(FieldDeletedByDesignation, v))
}

// DeletedByDesignationHasSuffix applies the HasSuffix predicate on the "DeletedByDesignation" field.
func DeletedByDesignationHasSuffix(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldHasSuffix(FieldDeletedByDesignation, v))
}

// DeletedByDesignationIsNil applies the IsNil predicate on the "DeletedByDesignation" field.
func DeletedByDesignationIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldDeletedByDesignation))
}

// DeletedByDesignationNotNil applies the NotNil predicate on the "DeletedByDesignation" field.
func DeletedByDesignationNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldDeletedByDesignation))
}

// DeletedByDesignationEqualFold applies the EqualFold predicate on the "DeletedByDesignation" field.
func DeletedByDesignationEqualFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEqualFold(FieldDeletedByDesignation, v))
}

// DeletedByDesignationContainsFold applies the ContainsFold predicate on the "DeletedByDesignation" field.
func DeletedByDesignationContainsFold(v string) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldContainsFold(FieldDeletedByDesignation, v))
}

// DeletedDateEQ applies the EQ predicate on the "DeletedDate" field.
func DeletedDateEQ(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldEQ(FieldDeletedDate, v))
}

// DeletedDateNEQ applies the NEQ predicate on the "DeletedDate" field.
func DeletedDateNEQ(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNEQ(FieldDeletedDate, v))
}

// DeletedDateIn applies the In predicate on the "DeletedDate" field.
func DeletedDateIn(vs ...time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIn(FieldDeletedDate, vs...))
}

// DeletedDateNotIn applies the NotIn predicate on the "DeletedDate" field.
func DeletedDateNotIn(vs ...time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotIn(FieldDeletedDate, vs...))
}

// DeletedDateGT applies the GT predicate on the "DeletedDate" field.
func DeletedDateGT(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGT(FieldDeletedDate, v))
}

// DeletedDateGTE applies the GTE predicate on the "DeletedDate" field.
func DeletedDateGTE(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldGTE(FieldDeletedDate, v))
}

// DeletedDateLT applies the LT predicate on the "DeletedDate" field.
func DeletedDateLT(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLT(FieldDeletedDate, v))
}

// DeletedDateLTE applies the LTE predicate on the "DeletedDate" field.
func DeletedDateLTE(v time.Time) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldLTE(FieldDeletedDate, v))
}

// DeletedDateIsNil applies the IsNil predicate on the "DeletedDate" field.
func DeletedDateIsNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldIsNull(FieldDeletedDate))
}

// DeletedDateNotNil applies the NotNil predicate on the "DeletedDate" field.
func DeletedDateNotNil() predicate.EmployeeCadre {
	return predicate.EmployeeCadre(sql.FieldNotNull(FieldDeletedDate))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.EmployeeCadre) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.EmployeeCadre) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.EmployeeCadre) predicate.EmployeeCadre {
	return predicate.EmployeeCadre(func(s *sql.Selector) {
		p(s.Not())
	})
}
