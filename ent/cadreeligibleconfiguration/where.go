// Code generated by ent, DO NOT EDIT.

package cadreeligibleconfiguration

import (
	"recruit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldID, id))
}

// ExamCode applies equality check predicate on the "ExamCode" field. It's identical to ExamCodeEQ.
func ExamCode(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldExamCode, v))
}

// ExamName applies equality check predicate on the "ExamName" field. It's identical to ExamNameEQ.
func ExamName(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldExamName, v))
}

// ExamShortName applies equality check predicate on the "ExamShortName" field. It's identical to ExamShortNameEQ.
func ExamShortName(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldExamShortName, v))
}

// PostID applies equality check predicate on the "PostID" field. It's identical to PostIDEQ.
func PostID(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldPostID, v))
}

// PostCode applies equality check predicate on the "PostCode" field. It's identical to PostCodeEQ.
func PostCode(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldPostCode, v))
}

// PostDescription applies equality check predicate on the "PostDescription" field. It's identical to PostDescriptionEQ.
func PostDescription(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldPostDescription, v))
}

// GdsService applies equality check predicate on the "gdsService" field. It's identical to GdsServiceEQ.
func GdsService(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldGdsService, v))
}

// CategoryCode applies equality check predicate on the "CategoryCode" field. It's identical to CategoryCodeEQ.
func CategoryCode(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCategoryCode, v))
}

// AgeCriteria applies equality check predicate on the "ageCriteria" field. It's identical to AgeCriteriaEQ.
func AgeCriteria(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldAgeCriteria, v))
}

// ServiceCriteria applies equality check predicate on the "serviceCriteria" field. It's identical to ServiceCriteriaEQ.
func ServiceCriteria(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldServiceCriteria, v))
}

// DrivingLicenceCriteria applies equality check predicate on the "drivingLicenceCriteria" field. It's identical to DrivingLicenceCriteriaEQ.
func DrivingLicenceCriteria(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDrivingLicenceCriteria, v))
}

// ComputerKnowledge applies equality check predicate on the "computerKnowledge" field. It's identical to ComputerKnowledgeEQ.
func ComputerKnowledge(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldComputerKnowledge, v))
}

// EligibilityBasedOnLevelOfPayMatrix applies equality check predicate on the "eligibilityBasedOnLevelOfPayMatrix" field. It's identical to EligibilityBasedOnLevelOfPayMatrixEQ.
func EligibilityBasedOnLevelOfPayMatrix(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldEligibilityBasedOnLevelOfPayMatrix, v))
}

// EducationCode applies equality check predicate on the "educationCode" field. It's identical to EducationCodeEQ.
func EducationCode(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldEducationCode, v))
}

// EducationDescription applies equality check predicate on the "educationDescription" field. It's identical to EducationDescriptionEQ.
func EducationDescription(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldEducationDescription, v))
}

// OrderNumber applies equality check predicate on the "OrderNumber" field. It's identical to OrderNumberEQ.
func OrderNumber(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldOrderNumber, v))
}

// CreatedById applies equality check predicate on the "CreatedById" field. It's identical to CreatedByIdEQ.
func CreatedById(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedById, v))
}

// CreatedByUserName applies equality check predicate on the "CreatedByUserName" field. It's identical to CreatedByUserNameEQ.
func CreatedByUserName(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedByUserName, v))
}

// CreatedByEmpId applies equality check predicate on the "CreatedByEmpId" field. It's identical to CreatedByEmpIdEQ.
func CreatedByEmpId(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedByEmpId, v))
}

// CreatedByDesignation applies equality check predicate on the "CreatedByDesignation" field. It's identical to CreatedByDesignationEQ.
func CreatedByDesignation(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedByDesignation, v))
}

// CreatedDate applies equality check predicate on the "CreatedDate" field. It's identical to CreatedDateEQ.
func CreatedDate(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedDate, v))
}

// Verifiedbyid applies equality check predicate on the "verifiedbyid" field. It's identical to VerifiedbyidEQ.
func Verifiedbyid(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyid, v))
}

// Verifiedbyusername applies equality check predicate on the "verifiedbyusername" field. It's identical to VerifiedbyusernameEQ.
func Verifiedbyusername(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyusername, v))
}

// VerifiedbyEmployeeid applies equality check predicate on the "verifiedbyEmployeeid" field. It's identical to VerifiedbyEmployeeidEQ.
func VerifiedbyEmployeeid(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyEmployeeid, v))
}

// VerifiedbyDesignation applies equality check predicate on the "verifiedbyDesignation" field. It's identical to VerifiedbyDesignationEQ.
func VerifiedbyDesignation(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyDesignation, v))
}

// VerifiedDate applies equality check predicate on the "verifiedDate" field. It's identical to VerifiedDateEQ.
func VerifiedDate(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedDate, v))
}

// Statuss applies equality check predicate on the "Statuss" field. It's identical to StatussEQ.
func Statuss(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldStatuss, v))
}

// Deletedbyid applies equality check predicate on the "deletedbyid" field. It's identical to DeletedbyidEQ.
func Deletedbyid(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyid, v))
}

// Deletedbyusername applies equality check predicate on the "deletedbyusername" field. It's identical to DeletedbyusernameEQ.
func Deletedbyusername(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyusername, v))
}

// DeletedbyEmployeeid applies equality check predicate on the "deletedbyEmployeeid" field. It's identical to DeletedbyEmployeeidEQ.
func DeletedbyEmployeeid(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyEmployeeid, v))
}

// DeletedbyDesignation applies equality check predicate on the "deletedbyDesignation" field. It's identical to DeletedbyDesignationEQ.
func DeletedbyDesignation(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyDesignation, v))
}

// DeletedDate applies equality check predicate on the "deletedDate" field. It's identical to DeletedDateEQ.
func DeletedDate(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedDate, v))
}

// ExamCodeEQ applies the EQ predicate on the "ExamCode" field.
func ExamCodeEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldExamCode, v))
}

// ExamCodeNEQ applies the NEQ predicate on the "ExamCode" field.
func ExamCodeNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldExamCode, v))
}

// ExamCodeIn applies the In predicate on the "ExamCode" field.
func ExamCodeIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldExamCode, vs...))
}

// ExamCodeNotIn applies the NotIn predicate on the "ExamCode" field.
func ExamCodeNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldExamCode, vs...))
}

// ExamCodeGT applies the GT predicate on the "ExamCode" field.
func ExamCodeGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldExamCode, v))
}

// ExamCodeGTE applies the GTE predicate on the "ExamCode" field.
func ExamCodeGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldExamCode, v))
}

// ExamCodeLT applies the LT predicate on the "ExamCode" field.
func ExamCodeLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldExamCode, v))
}

// ExamCodeLTE applies the LTE predicate on the "ExamCode" field.
func ExamCodeLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldExamCode, v))
}

// ExamCodeIsNil applies the IsNil predicate on the "ExamCode" field.
func ExamCodeIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldExamCode))
}

// ExamCodeNotNil applies the NotNil predicate on the "ExamCode" field.
func ExamCodeNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldExamCode))
}

// ExamNameEQ applies the EQ predicate on the "ExamName" field.
func ExamNameEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldExamName, v))
}

// ExamNameNEQ applies the NEQ predicate on the "ExamName" field.
func ExamNameNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldExamName, v))
}

// ExamNameIn applies the In predicate on the "ExamName" field.
func ExamNameIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldExamName, vs...))
}

// ExamNameNotIn applies the NotIn predicate on the "ExamName" field.
func ExamNameNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldExamName, vs...))
}

// ExamNameGT applies the GT predicate on the "ExamName" field.
func ExamNameGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldExamName, v))
}

// ExamNameGTE applies the GTE predicate on the "ExamName" field.
func ExamNameGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldExamName, v))
}

// ExamNameLT applies the LT predicate on the "ExamName" field.
func ExamNameLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldExamName, v))
}

// ExamNameLTE applies the LTE predicate on the "ExamName" field.
func ExamNameLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldExamName, v))
}

// ExamNameContains applies the Contains predicate on the "ExamName" field.
func ExamNameContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldExamName, v))
}

// ExamNameHasPrefix applies the HasPrefix predicate on the "ExamName" field.
func ExamNameHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldExamName, v))
}

// ExamNameHasSuffix applies the HasSuffix predicate on the "ExamName" field.
func ExamNameHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldExamName, v))
}

// ExamNameIsNil applies the IsNil predicate on the "ExamName" field.
func ExamNameIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldExamName))
}

// ExamNameNotNil applies the NotNil predicate on the "ExamName" field.
func ExamNameNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldExamName))
}

// ExamNameEqualFold applies the EqualFold predicate on the "ExamName" field.
func ExamNameEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldExamName, v))
}

// ExamNameContainsFold applies the ContainsFold predicate on the "ExamName" field.
func ExamNameContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldExamName, v))
}

// ExamShortNameEQ applies the EQ predicate on the "ExamShortName" field.
func ExamShortNameEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldExamShortName, v))
}

// ExamShortNameNEQ applies the NEQ predicate on the "ExamShortName" field.
func ExamShortNameNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldExamShortName, v))
}

// ExamShortNameIn applies the In predicate on the "ExamShortName" field.
func ExamShortNameIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldExamShortName, vs...))
}

// ExamShortNameNotIn applies the NotIn predicate on the "ExamShortName" field.
func ExamShortNameNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldExamShortName, vs...))
}

// ExamShortNameGT applies the GT predicate on the "ExamShortName" field.
func ExamShortNameGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldExamShortName, v))
}

// ExamShortNameGTE applies the GTE predicate on the "ExamShortName" field.
func ExamShortNameGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldExamShortName, v))
}

// ExamShortNameLT applies the LT predicate on the "ExamShortName" field.
func ExamShortNameLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldExamShortName, v))
}

// ExamShortNameLTE applies the LTE predicate on the "ExamShortName" field.
func ExamShortNameLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldExamShortName, v))
}

// ExamShortNameContains applies the Contains predicate on the "ExamShortName" field.
func ExamShortNameContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldExamShortName, v))
}

// ExamShortNameHasPrefix applies the HasPrefix predicate on the "ExamShortName" field.
func ExamShortNameHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldExamShortName, v))
}

// ExamShortNameHasSuffix applies the HasSuffix predicate on the "ExamShortName" field.
func ExamShortNameHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldExamShortName, v))
}

// ExamShortNameIsNil applies the IsNil predicate on the "ExamShortName" field.
func ExamShortNameIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldExamShortName))
}

// ExamShortNameNotNil applies the NotNil predicate on the "ExamShortName" field.
func ExamShortNameNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldExamShortName))
}

// ExamShortNameEqualFold applies the EqualFold predicate on the "ExamShortName" field.
func ExamShortNameEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldExamShortName, v))
}

// ExamShortNameContainsFold applies the ContainsFold predicate on the "ExamShortName" field.
func ExamShortNameContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldExamShortName, v))
}

// PostIDEQ applies the EQ predicate on the "PostID" field.
func PostIDEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldPostID, v))
}

// PostIDNEQ applies the NEQ predicate on the "PostID" field.
func PostIDNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldPostID, v))
}

// PostIDIn applies the In predicate on the "PostID" field.
func PostIDIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldPostID, vs...))
}

// PostIDNotIn applies the NotIn predicate on the "PostID" field.
func PostIDNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldPostID, vs...))
}

// PostIDGT applies the GT predicate on the "PostID" field.
func PostIDGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldPostID, v))
}

// PostIDGTE applies the GTE predicate on the "PostID" field.
func PostIDGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldPostID, v))
}

// PostIDLT applies the LT predicate on the "PostID" field.
func PostIDLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldPostID, v))
}

// PostIDLTE applies the LTE predicate on the "PostID" field.
func PostIDLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldPostID, v))
}

// PostIDIsNil applies the IsNil predicate on the "PostID" field.
func PostIDIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldPostID))
}

// PostIDNotNil applies the NotNil predicate on the "PostID" field.
func PostIDNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldPostID))
}

// PostCodeEQ applies the EQ predicate on the "PostCode" field.
func PostCodeEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldPostCode, v))
}

// PostCodeNEQ applies the NEQ predicate on the "PostCode" field.
func PostCodeNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldPostCode, v))
}

// PostCodeIn applies the In predicate on the "PostCode" field.
func PostCodeIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldPostCode, vs...))
}

// PostCodeNotIn applies the NotIn predicate on the "PostCode" field.
func PostCodeNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldPostCode, vs...))
}

// PostCodeGT applies the GT predicate on the "PostCode" field.
func PostCodeGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldPostCode, v))
}

// PostCodeGTE applies the GTE predicate on the "PostCode" field.
func PostCodeGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldPostCode, v))
}

// PostCodeLT applies the LT predicate on the "PostCode" field.
func PostCodeLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldPostCode, v))
}

// PostCodeLTE applies the LTE predicate on the "PostCode" field.
func PostCodeLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldPostCode, v))
}

// PostCodeContains applies the Contains predicate on the "PostCode" field.
func PostCodeContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldPostCode, v))
}

// PostCodeHasPrefix applies the HasPrefix predicate on the "PostCode" field.
func PostCodeHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldPostCode, v))
}

// PostCodeHasSuffix applies the HasSuffix predicate on the "PostCode" field.
func PostCodeHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldPostCode, v))
}

// PostCodeIsNil applies the IsNil predicate on the "PostCode" field.
func PostCodeIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldPostCode))
}

// PostCodeNotNil applies the NotNil predicate on the "PostCode" field.
func PostCodeNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldPostCode))
}

// PostCodeEqualFold applies the EqualFold predicate on the "PostCode" field.
func PostCodeEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldPostCode, v))
}

// PostCodeContainsFold applies the ContainsFold predicate on the "PostCode" field.
func PostCodeContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldPostCode, v))
}

// PostDescriptionEQ applies the EQ predicate on the "PostDescription" field.
func PostDescriptionEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldPostDescription, v))
}

// PostDescriptionNEQ applies the NEQ predicate on the "PostDescription" field.
func PostDescriptionNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldPostDescription, v))
}

// PostDescriptionIn applies the In predicate on the "PostDescription" field.
func PostDescriptionIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldPostDescription, vs...))
}

// PostDescriptionNotIn applies the NotIn predicate on the "PostDescription" field.
func PostDescriptionNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldPostDescription, vs...))
}

// PostDescriptionGT applies the GT predicate on the "PostDescription" field.
func PostDescriptionGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldPostDescription, v))
}

// PostDescriptionGTE applies the GTE predicate on the "PostDescription" field.
func PostDescriptionGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldPostDescription, v))
}

// PostDescriptionLT applies the LT predicate on the "PostDescription" field.
func PostDescriptionLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldPostDescription, v))
}

// PostDescriptionLTE applies the LTE predicate on the "PostDescription" field.
func PostDescriptionLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldPostDescription, v))
}

// PostDescriptionContains applies the Contains predicate on the "PostDescription" field.
func PostDescriptionContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldPostDescription, v))
}

// PostDescriptionHasPrefix applies the HasPrefix predicate on the "PostDescription" field.
func PostDescriptionHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldPostDescription, v))
}

// PostDescriptionHasSuffix applies the HasSuffix predicate on the "PostDescription" field.
func PostDescriptionHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldPostDescription, v))
}

// PostDescriptionIsNil applies the IsNil predicate on the "PostDescription" field.
func PostDescriptionIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldPostDescription))
}

// PostDescriptionNotNil applies the NotNil predicate on the "PostDescription" field.
func PostDescriptionNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldPostDescription))
}

// PostDescriptionEqualFold applies the EqualFold predicate on the "PostDescription" field.
func PostDescriptionEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldPostDescription, v))
}

// PostDescriptionContainsFold applies the ContainsFold predicate on the "PostDescription" field.
func PostDescriptionContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldPostDescription, v))
}

// GdsServiceEQ applies the EQ predicate on the "gdsService" field.
func GdsServiceEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldGdsService, v))
}

// GdsServiceNEQ applies the NEQ predicate on the "gdsService" field.
func GdsServiceNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldGdsService, v))
}

// GdsServiceIn applies the In predicate on the "gdsService" field.
func GdsServiceIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldGdsService, vs...))
}

// GdsServiceNotIn applies the NotIn predicate on the "gdsService" field.
func GdsServiceNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldGdsService, vs...))
}

// GdsServiceGT applies the GT predicate on the "gdsService" field.
func GdsServiceGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldGdsService, v))
}

// GdsServiceGTE applies the GTE predicate on the "gdsService" field.
func GdsServiceGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldGdsService, v))
}

// GdsServiceLT applies the LT predicate on the "gdsService" field.
func GdsServiceLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldGdsService, v))
}

// GdsServiceLTE applies the LTE predicate on the "gdsService" field.
func GdsServiceLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldGdsService, v))
}

// GdsServiceIsNil applies the IsNil predicate on the "gdsService" field.
func GdsServiceIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldGdsService))
}

// GdsServiceNotNil applies the NotNil predicate on the "gdsService" field.
func GdsServiceNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldGdsService))
}

// CategoryCodeEQ applies the EQ predicate on the "CategoryCode" field.
func CategoryCodeEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCategoryCode, v))
}

// CategoryCodeNEQ applies the NEQ predicate on the "CategoryCode" field.
func CategoryCodeNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldCategoryCode, v))
}

// CategoryCodeIn applies the In predicate on the "CategoryCode" field.
func CategoryCodeIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldCategoryCode, vs...))
}

// CategoryCodeNotIn applies the NotIn predicate on the "CategoryCode" field.
func CategoryCodeNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldCategoryCode, vs...))
}

// CategoryCodeGT applies the GT predicate on the "CategoryCode" field.
func CategoryCodeGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldCategoryCode, v))
}

// CategoryCodeGTE applies the GTE predicate on the "CategoryCode" field.
func CategoryCodeGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldCategoryCode, v))
}

// CategoryCodeLT applies the LT predicate on the "CategoryCode" field.
func CategoryCodeLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldCategoryCode, v))
}

// CategoryCodeLTE applies the LTE predicate on the "CategoryCode" field.
func CategoryCodeLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldCategoryCode, v))
}

// CategoryCodeContains applies the Contains predicate on the "CategoryCode" field.
func CategoryCodeContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldCategoryCode, v))
}

// CategoryCodeHasPrefix applies the HasPrefix predicate on the "CategoryCode" field.
func CategoryCodeHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldCategoryCode, v))
}

// CategoryCodeHasSuffix applies the HasSuffix predicate on the "CategoryCode" field.
func CategoryCodeHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldCategoryCode, v))
}

// CategoryCodeIsNil applies the IsNil predicate on the "CategoryCode" field.
func CategoryCodeIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldCategoryCode))
}

// CategoryCodeNotNil applies the NotNil predicate on the "CategoryCode" field.
func CategoryCodeNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldCategoryCode))
}

// CategoryCodeEqualFold applies the EqualFold predicate on the "CategoryCode" field.
func CategoryCodeEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldCategoryCode, v))
}

// CategoryCodeContainsFold applies the ContainsFold predicate on the "CategoryCode" field.
func CategoryCodeContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldCategoryCode, v))
}

// AgeCriteriaEQ applies the EQ predicate on the "ageCriteria" field.
func AgeCriteriaEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldAgeCriteria, v))
}

// AgeCriteriaNEQ applies the NEQ predicate on the "ageCriteria" field.
func AgeCriteriaNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldAgeCriteria, v))
}

// AgeCriteriaIn applies the In predicate on the "ageCriteria" field.
func AgeCriteriaIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldAgeCriteria, vs...))
}

// AgeCriteriaNotIn applies the NotIn predicate on the "ageCriteria" field.
func AgeCriteriaNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldAgeCriteria, vs...))
}

// AgeCriteriaGT applies the GT predicate on the "ageCriteria" field.
func AgeCriteriaGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldAgeCriteria, v))
}

// AgeCriteriaGTE applies the GTE predicate on the "ageCriteria" field.
func AgeCriteriaGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldAgeCriteria, v))
}

// AgeCriteriaLT applies the LT predicate on the "ageCriteria" field.
func AgeCriteriaLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldAgeCriteria, v))
}

// AgeCriteriaLTE applies the LTE predicate on the "ageCriteria" field.
func AgeCriteriaLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldAgeCriteria, v))
}

// AgeCriteriaIsNil applies the IsNil predicate on the "ageCriteria" field.
func AgeCriteriaIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldAgeCriteria))
}

// AgeCriteriaNotNil applies the NotNil predicate on the "ageCriteria" field.
func AgeCriteriaNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldAgeCriteria))
}

// ServiceCriteriaEQ applies the EQ predicate on the "serviceCriteria" field.
func ServiceCriteriaEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldServiceCriteria, v))
}

// ServiceCriteriaNEQ applies the NEQ predicate on the "serviceCriteria" field.
func ServiceCriteriaNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldServiceCriteria, v))
}

// ServiceCriteriaIn applies the In predicate on the "serviceCriteria" field.
func ServiceCriteriaIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldServiceCriteria, vs...))
}

// ServiceCriteriaNotIn applies the NotIn predicate on the "serviceCriteria" field.
func ServiceCriteriaNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldServiceCriteria, vs...))
}

// ServiceCriteriaGT applies the GT predicate on the "serviceCriteria" field.
func ServiceCriteriaGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldServiceCriteria, v))
}

// ServiceCriteriaGTE applies the GTE predicate on the "serviceCriteria" field.
func ServiceCriteriaGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldServiceCriteria, v))
}

// ServiceCriteriaLT applies the LT predicate on the "serviceCriteria" field.
func ServiceCriteriaLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldServiceCriteria, v))
}

// ServiceCriteriaLTE applies the LTE predicate on the "serviceCriteria" field.
func ServiceCriteriaLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldServiceCriteria, v))
}

// ServiceCriteriaIsNil applies the IsNil predicate on the "serviceCriteria" field.
func ServiceCriteriaIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldServiceCriteria))
}

// ServiceCriteriaNotNil applies the NotNil predicate on the "serviceCriteria" field.
func ServiceCriteriaNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldServiceCriteria))
}

// DrivingLicenceCriteriaEQ applies the EQ predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaNEQ applies the NEQ predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaIn applies the In predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldDrivingLicenceCriteria, vs...))
}

// DrivingLicenceCriteriaNotIn applies the NotIn predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldDrivingLicenceCriteria, vs...))
}

// DrivingLicenceCriteriaGT applies the GT predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaGTE applies the GTE predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaLT applies the LT predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaLTE applies the LTE predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldDrivingLicenceCriteria, v))
}

// DrivingLicenceCriteriaIsNil applies the IsNil predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldDrivingLicenceCriteria))
}

// DrivingLicenceCriteriaNotNil applies the NotNil predicate on the "drivingLicenceCriteria" field.
func DrivingLicenceCriteriaNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldDrivingLicenceCriteria))
}

// ComputerKnowledgeEQ applies the EQ predicate on the "computerKnowledge" field.
func ComputerKnowledgeEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldComputerKnowledge, v))
}

// ComputerKnowledgeNEQ applies the NEQ predicate on the "computerKnowledge" field.
func ComputerKnowledgeNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldComputerKnowledge, v))
}

// ComputerKnowledgeIn applies the In predicate on the "computerKnowledge" field.
func ComputerKnowledgeIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldComputerKnowledge, vs...))
}

// ComputerKnowledgeNotIn applies the NotIn predicate on the "computerKnowledge" field.
func ComputerKnowledgeNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldComputerKnowledge, vs...))
}

// ComputerKnowledgeGT applies the GT predicate on the "computerKnowledge" field.
func ComputerKnowledgeGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldComputerKnowledge, v))
}

// ComputerKnowledgeGTE applies the GTE predicate on the "computerKnowledge" field.
func ComputerKnowledgeGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldComputerKnowledge, v))
}

// ComputerKnowledgeLT applies the LT predicate on the "computerKnowledge" field.
func ComputerKnowledgeLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldComputerKnowledge, v))
}

// ComputerKnowledgeLTE applies the LTE predicate on the "computerKnowledge" field.
func ComputerKnowledgeLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldComputerKnowledge, v))
}

// ComputerKnowledgeIsNil applies the IsNil predicate on the "computerKnowledge" field.
func ComputerKnowledgeIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldComputerKnowledge))
}

// ComputerKnowledgeNotNil applies the NotNil predicate on the "computerKnowledge" field.
func ComputerKnowledgeNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldComputerKnowledge))
}

// EligibilityBasedOnLevelOfPayMatrixEQ applies the EQ predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldEligibilityBasedOnLevelOfPayMatrix, v))
}

// EligibilityBasedOnLevelOfPayMatrixNEQ applies the NEQ predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldEligibilityBasedOnLevelOfPayMatrix, v))
}

// EligibilityBasedOnLevelOfPayMatrixIn applies the In predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldEligibilityBasedOnLevelOfPayMatrix, vs...))
}

// EligibilityBasedOnLevelOfPayMatrixNotIn applies the NotIn predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldEligibilityBasedOnLevelOfPayMatrix, vs...))
}

// EligibilityBasedOnLevelOfPayMatrixGT applies the GT predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldEligibilityBasedOnLevelOfPayMatrix, v))
}

// EligibilityBasedOnLevelOfPayMatrixGTE applies the GTE predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldEligibilityBasedOnLevelOfPayMatrix, v))
}

// EligibilityBasedOnLevelOfPayMatrixLT applies the LT predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldEligibilityBasedOnLevelOfPayMatrix, v))
}

// EligibilityBasedOnLevelOfPayMatrixLTE applies the LTE predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldEligibilityBasedOnLevelOfPayMatrix, v))
}

// EligibilityBasedOnLevelOfPayMatrixIsNil applies the IsNil predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldEligibilityBasedOnLevelOfPayMatrix))
}

// EligibilityBasedOnLevelOfPayMatrixNotNil applies the NotNil predicate on the "eligibilityBasedOnLevelOfPayMatrix" field.
func EligibilityBasedOnLevelOfPayMatrixNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldEligibilityBasedOnLevelOfPayMatrix))
}

// EducationCodeEQ applies the EQ predicate on the "educationCode" field.
func EducationCodeEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldEducationCode, v))
}

// EducationCodeNEQ applies the NEQ predicate on the "educationCode" field.
func EducationCodeNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldEducationCode, v))
}

// EducationCodeIn applies the In predicate on the "educationCode" field.
func EducationCodeIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldEducationCode, vs...))
}

// EducationCodeNotIn applies the NotIn predicate on the "educationCode" field.
func EducationCodeNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldEducationCode, vs...))
}

// EducationCodeGT applies the GT predicate on the "educationCode" field.
func EducationCodeGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldEducationCode, v))
}

// EducationCodeGTE applies the GTE predicate on the "educationCode" field.
func EducationCodeGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldEducationCode, v))
}

// EducationCodeLT applies the LT predicate on the "educationCode" field.
func EducationCodeLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldEducationCode, v))
}

// EducationCodeLTE applies the LTE predicate on the "educationCode" field.
func EducationCodeLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldEducationCode, v))
}

// EducationCodeIsNil applies the IsNil predicate on the "educationCode" field.
func EducationCodeIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldEducationCode))
}

// EducationCodeNotNil applies the NotNil predicate on the "educationCode" field.
func EducationCodeNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldEducationCode))
}

// EducationDescriptionEQ applies the EQ predicate on the "educationDescription" field.
func EducationDescriptionEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldEducationDescription, v))
}

// EducationDescriptionNEQ applies the NEQ predicate on the "educationDescription" field.
func EducationDescriptionNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldEducationDescription, v))
}

// EducationDescriptionIn applies the In predicate on the "educationDescription" field.
func EducationDescriptionIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldEducationDescription, vs...))
}

// EducationDescriptionNotIn applies the NotIn predicate on the "educationDescription" field.
func EducationDescriptionNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldEducationDescription, vs...))
}

// EducationDescriptionGT applies the GT predicate on the "educationDescription" field.
func EducationDescriptionGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldEducationDescription, v))
}

// EducationDescriptionGTE applies the GTE predicate on the "educationDescription" field.
func EducationDescriptionGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldEducationDescription, v))
}

// EducationDescriptionLT applies the LT predicate on the "educationDescription" field.
func EducationDescriptionLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldEducationDescription, v))
}

// EducationDescriptionLTE applies the LTE predicate on the "educationDescription" field.
func EducationDescriptionLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldEducationDescription, v))
}

// EducationDescriptionContains applies the Contains predicate on the "educationDescription" field.
func EducationDescriptionContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldEducationDescription, v))
}

// EducationDescriptionHasPrefix applies the HasPrefix predicate on the "educationDescription" field.
func EducationDescriptionHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldEducationDescription, v))
}

// EducationDescriptionHasSuffix applies the HasSuffix predicate on the "educationDescription" field.
func EducationDescriptionHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldEducationDescription, v))
}

// EducationDescriptionIsNil applies the IsNil predicate on the "educationDescription" field.
func EducationDescriptionIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldEducationDescription))
}

// EducationDescriptionNotNil applies the NotNil predicate on the "educationDescription" field.
func EducationDescriptionNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldEducationDescription))
}

// EducationDescriptionEqualFold applies the EqualFold predicate on the "educationDescription" field.
func EducationDescriptionEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldEducationDescription, v))
}

// EducationDescriptionContainsFold applies the ContainsFold predicate on the "educationDescription" field.
func EducationDescriptionContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldEducationDescription, v))
}

// OrderNumberEQ applies the EQ predicate on the "OrderNumber" field.
func OrderNumberEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldOrderNumber, v))
}

// OrderNumberNEQ applies the NEQ predicate on the "OrderNumber" field.
func OrderNumberNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldOrderNumber, v))
}

// OrderNumberIn applies the In predicate on the "OrderNumber" field.
func OrderNumberIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldOrderNumber, vs...))
}

// OrderNumberNotIn applies the NotIn predicate on the "OrderNumber" field.
func OrderNumberNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldOrderNumber, vs...))
}

// OrderNumberGT applies the GT predicate on the "OrderNumber" field.
func OrderNumberGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldOrderNumber, v))
}

// OrderNumberGTE applies the GTE predicate on the "OrderNumber" field.
func OrderNumberGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldOrderNumber, v))
}

// OrderNumberLT applies the LT predicate on the "OrderNumber" field.
func OrderNumberLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldOrderNumber, v))
}

// OrderNumberLTE applies the LTE predicate on the "OrderNumber" field.
func OrderNumberLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldOrderNumber, v))
}

// OrderNumberContains applies the Contains predicate on the "OrderNumber" field.
func OrderNumberContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldOrderNumber, v))
}

// OrderNumberHasPrefix applies the HasPrefix predicate on the "OrderNumber" field.
func OrderNumberHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldOrderNumber, v))
}

// OrderNumberHasSuffix applies the HasSuffix predicate on the "OrderNumber" field.
func OrderNumberHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldOrderNumber, v))
}

// OrderNumberIsNil applies the IsNil predicate on the "OrderNumber" field.
func OrderNumberIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldOrderNumber))
}

// OrderNumberNotNil applies the NotNil predicate on the "OrderNumber" field.
func OrderNumberNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldOrderNumber))
}

// OrderNumberEqualFold applies the EqualFold predicate on the "OrderNumber" field.
func OrderNumberEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldOrderNumber, v))
}

// OrderNumberContainsFold applies the ContainsFold predicate on the "OrderNumber" field.
func OrderNumberContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldOrderNumber, v))
}

// CreatedByIdEQ applies the EQ predicate on the "CreatedById" field.
func CreatedByIdEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedById, v))
}

// CreatedByIdNEQ applies the NEQ predicate on the "CreatedById" field.
func CreatedByIdNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldCreatedById, v))
}

// CreatedByIdIn applies the In predicate on the "CreatedById" field.
func CreatedByIdIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldCreatedById, vs...))
}

// CreatedByIdNotIn applies the NotIn predicate on the "CreatedById" field.
func CreatedByIdNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldCreatedById, vs...))
}

// CreatedByIdGT applies the GT predicate on the "CreatedById" field.
func CreatedByIdGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldCreatedById, v))
}

// CreatedByIdGTE applies the GTE predicate on the "CreatedById" field.
func CreatedByIdGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldCreatedById, v))
}

// CreatedByIdLT applies the LT predicate on the "CreatedById" field.
func CreatedByIdLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldCreatedById, v))
}

// CreatedByIdLTE applies the LTE predicate on the "CreatedById" field.
func CreatedByIdLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldCreatedById, v))
}

// CreatedByIdIsNil applies the IsNil predicate on the "CreatedById" field.
func CreatedByIdIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldCreatedById))
}

// CreatedByIdNotNil applies the NotNil predicate on the "CreatedById" field.
func CreatedByIdNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldCreatedById))
}

// CreatedByUserNameEQ applies the EQ predicate on the "CreatedByUserName" field.
func CreatedByUserNameEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedByUserName, v))
}

// CreatedByUserNameNEQ applies the NEQ predicate on the "CreatedByUserName" field.
func CreatedByUserNameNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldCreatedByUserName, v))
}

// CreatedByUserNameIn applies the In predicate on the "CreatedByUserName" field.
func CreatedByUserNameIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldCreatedByUserName, vs...))
}

// CreatedByUserNameNotIn applies the NotIn predicate on the "CreatedByUserName" field.
func CreatedByUserNameNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldCreatedByUserName, vs...))
}

// CreatedByUserNameGT applies the GT predicate on the "CreatedByUserName" field.
func CreatedByUserNameGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldCreatedByUserName, v))
}

// CreatedByUserNameGTE applies the GTE predicate on the "CreatedByUserName" field.
func CreatedByUserNameGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldCreatedByUserName, v))
}

// CreatedByUserNameLT applies the LT predicate on the "CreatedByUserName" field.
func CreatedByUserNameLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldCreatedByUserName, v))
}

// CreatedByUserNameLTE applies the LTE predicate on the "CreatedByUserName" field.
func CreatedByUserNameLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldCreatedByUserName, v))
}

// CreatedByUserNameContains applies the Contains predicate on the "CreatedByUserName" field.
func CreatedByUserNameContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldCreatedByUserName, v))
}

// CreatedByUserNameHasPrefix applies the HasPrefix predicate on the "CreatedByUserName" field.
func CreatedByUserNameHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldCreatedByUserName, v))
}

// CreatedByUserNameHasSuffix applies the HasSuffix predicate on the "CreatedByUserName" field.
func CreatedByUserNameHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldCreatedByUserName, v))
}

// CreatedByUserNameIsNil applies the IsNil predicate on the "CreatedByUserName" field.
func CreatedByUserNameIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldCreatedByUserName))
}

// CreatedByUserNameNotNil applies the NotNil predicate on the "CreatedByUserName" field.
func CreatedByUserNameNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldCreatedByUserName))
}

// CreatedByUserNameEqualFold applies the EqualFold predicate on the "CreatedByUserName" field.
func CreatedByUserNameEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldCreatedByUserName, v))
}

// CreatedByUserNameContainsFold applies the ContainsFold predicate on the "CreatedByUserName" field.
func CreatedByUserNameContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldCreatedByUserName, v))
}

// CreatedByEmpIdEQ applies the EQ predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdNEQ applies the NEQ predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdIn applies the In predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldCreatedByEmpId, vs...))
}

// CreatedByEmpIdNotIn applies the NotIn predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldCreatedByEmpId, vs...))
}

// CreatedByEmpIdGT applies the GT predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdGTE applies the GTE predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdLT applies the LT predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdLTE applies the LTE predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldCreatedByEmpId, v))
}

// CreatedByEmpIdIsNil applies the IsNil predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldCreatedByEmpId))
}

// CreatedByEmpIdNotNil applies the NotNil predicate on the "CreatedByEmpId" field.
func CreatedByEmpIdNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldCreatedByEmpId))
}

// CreatedByDesignationEQ applies the EQ predicate on the "CreatedByDesignation" field.
func CreatedByDesignationEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedByDesignation, v))
}

// CreatedByDesignationNEQ applies the NEQ predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldCreatedByDesignation, v))
}

// CreatedByDesignationIn applies the In predicate on the "CreatedByDesignation" field.
func CreatedByDesignationIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldCreatedByDesignation, vs...))
}

// CreatedByDesignationNotIn applies the NotIn predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldCreatedByDesignation, vs...))
}

// CreatedByDesignationGT applies the GT predicate on the "CreatedByDesignation" field.
func CreatedByDesignationGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldCreatedByDesignation, v))
}

// CreatedByDesignationGTE applies the GTE predicate on the "CreatedByDesignation" field.
func CreatedByDesignationGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldCreatedByDesignation, v))
}

// CreatedByDesignationLT applies the LT predicate on the "CreatedByDesignation" field.
func CreatedByDesignationLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldCreatedByDesignation, v))
}

// CreatedByDesignationLTE applies the LTE predicate on the "CreatedByDesignation" field.
func CreatedByDesignationLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldCreatedByDesignation, v))
}

// CreatedByDesignationContains applies the Contains predicate on the "CreatedByDesignation" field.
func CreatedByDesignationContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldCreatedByDesignation, v))
}

// CreatedByDesignationHasPrefix applies the HasPrefix predicate on the "CreatedByDesignation" field.
func CreatedByDesignationHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldCreatedByDesignation, v))
}

// CreatedByDesignationHasSuffix applies the HasSuffix predicate on the "CreatedByDesignation" field.
func CreatedByDesignationHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldCreatedByDesignation, v))
}

// CreatedByDesignationIsNil applies the IsNil predicate on the "CreatedByDesignation" field.
func CreatedByDesignationIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldCreatedByDesignation))
}

// CreatedByDesignationNotNil applies the NotNil predicate on the "CreatedByDesignation" field.
func CreatedByDesignationNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldCreatedByDesignation))
}

// CreatedByDesignationEqualFold applies the EqualFold predicate on the "CreatedByDesignation" field.
func CreatedByDesignationEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldCreatedByDesignation, v))
}

// CreatedByDesignationContainsFold applies the ContainsFold predicate on the "CreatedByDesignation" field.
func CreatedByDesignationContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldCreatedByDesignation, v))
}

// CreatedDateEQ applies the EQ predicate on the "CreatedDate" field.
func CreatedDateEQ(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldCreatedDate, v))
}

// CreatedDateNEQ applies the NEQ predicate on the "CreatedDate" field.
func CreatedDateNEQ(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldCreatedDate, v))
}

// CreatedDateIn applies the In predicate on the "CreatedDate" field.
func CreatedDateIn(vs ...time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldCreatedDate, vs...))
}

// CreatedDateNotIn applies the NotIn predicate on the "CreatedDate" field.
func CreatedDateNotIn(vs ...time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldCreatedDate, vs...))
}

// CreatedDateGT applies the GT predicate on the "CreatedDate" field.
func CreatedDateGT(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldCreatedDate, v))
}

// CreatedDateGTE applies the GTE predicate on the "CreatedDate" field.
func CreatedDateGTE(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldCreatedDate, v))
}

// CreatedDateLT applies the LT predicate on the "CreatedDate" field.
func CreatedDateLT(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldCreatedDate, v))
}

// CreatedDateLTE applies the LTE predicate on the "CreatedDate" field.
func CreatedDateLTE(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldCreatedDate, v))
}

// CreatedDateIsNil applies the IsNil predicate on the "CreatedDate" field.
func CreatedDateIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldCreatedDate))
}

// CreatedDateNotNil applies the NotNil predicate on the "CreatedDate" field.
func CreatedDateNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldCreatedDate))
}

// VerifiedbyidEQ applies the EQ predicate on the "verifiedbyid" field.
func VerifiedbyidEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyid, v))
}

// VerifiedbyidNEQ applies the NEQ predicate on the "verifiedbyid" field.
func VerifiedbyidNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldVerifiedbyid, v))
}

// VerifiedbyidIn applies the In predicate on the "verifiedbyid" field.
func VerifiedbyidIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldVerifiedbyid, vs...))
}

// VerifiedbyidNotIn applies the NotIn predicate on the "verifiedbyid" field.
func VerifiedbyidNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldVerifiedbyid, vs...))
}

// VerifiedbyidGT applies the GT predicate on the "verifiedbyid" field.
func VerifiedbyidGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldVerifiedbyid, v))
}

// VerifiedbyidGTE applies the GTE predicate on the "verifiedbyid" field.
func VerifiedbyidGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldVerifiedbyid, v))
}

// VerifiedbyidLT applies the LT predicate on the "verifiedbyid" field.
func VerifiedbyidLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldVerifiedbyid, v))
}

// VerifiedbyidLTE applies the LTE predicate on the "verifiedbyid" field.
func VerifiedbyidLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldVerifiedbyid, v))
}

// VerifiedbyidIsNil applies the IsNil predicate on the "verifiedbyid" field.
func VerifiedbyidIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldVerifiedbyid))
}

// VerifiedbyidNotNil applies the NotNil predicate on the "verifiedbyid" field.
func VerifiedbyidNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldVerifiedbyid))
}

// VerifiedbyusernameEQ applies the EQ predicate on the "verifiedbyusername" field.
func VerifiedbyusernameEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameNEQ applies the NEQ predicate on the "verifiedbyusername" field.
func VerifiedbyusernameNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameIn applies the In predicate on the "verifiedbyusername" field.
func VerifiedbyusernameIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldVerifiedbyusername, vs...))
}

// VerifiedbyusernameNotIn applies the NotIn predicate on the "verifiedbyusername" field.
func VerifiedbyusernameNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldVerifiedbyusername, vs...))
}

// VerifiedbyusernameGT applies the GT predicate on the "verifiedbyusername" field.
func VerifiedbyusernameGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameGTE applies the GTE predicate on the "verifiedbyusername" field.
func VerifiedbyusernameGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameLT applies the LT predicate on the "verifiedbyusername" field.
func VerifiedbyusernameLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameLTE applies the LTE predicate on the "verifiedbyusername" field.
func VerifiedbyusernameLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameContains applies the Contains predicate on the "verifiedbyusername" field.
func VerifiedbyusernameContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameHasPrefix applies the HasPrefix predicate on the "verifiedbyusername" field.
func VerifiedbyusernameHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameHasSuffix applies the HasSuffix predicate on the "verifiedbyusername" field.
func VerifiedbyusernameHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameIsNil applies the IsNil predicate on the "verifiedbyusername" field.
func VerifiedbyusernameIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldVerifiedbyusername))
}

// VerifiedbyusernameNotNil applies the NotNil predicate on the "verifiedbyusername" field.
func VerifiedbyusernameNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldVerifiedbyusername))
}

// VerifiedbyusernameEqualFold applies the EqualFold predicate on the "verifiedbyusername" field.
func VerifiedbyusernameEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldVerifiedbyusername, v))
}

// VerifiedbyusernameContainsFold applies the ContainsFold predicate on the "verifiedbyusername" field.
func VerifiedbyusernameContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldVerifiedbyusername, v))
}

// VerifiedbyEmployeeidEQ applies the EQ predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyEmployeeid, v))
}

// VerifiedbyEmployeeidNEQ applies the NEQ predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldVerifiedbyEmployeeid, v))
}

// VerifiedbyEmployeeidIn applies the In predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldVerifiedbyEmployeeid, vs...))
}

// VerifiedbyEmployeeidNotIn applies the NotIn predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldVerifiedbyEmployeeid, vs...))
}

// VerifiedbyEmployeeidGT applies the GT predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldVerifiedbyEmployeeid, v))
}

// VerifiedbyEmployeeidGTE applies the GTE predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldVerifiedbyEmployeeid, v))
}

// VerifiedbyEmployeeidLT applies the LT predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldVerifiedbyEmployeeid, v))
}

// VerifiedbyEmployeeidLTE applies the LTE predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldVerifiedbyEmployeeid, v))
}

// VerifiedbyEmployeeidIsNil applies the IsNil predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldVerifiedbyEmployeeid))
}

// VerifiedbyEmployeeidNotNil applies the NotNil predicate on the "verifiedbyEmployeeid" field.
func VerifiedbyEmployeeidNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldVerifiedbyEmployeeid))
}

// VerifiedbyDesignationEQ applies the EQ predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationNEQ applies the NEQ predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationIn applies the In predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldVerifiedbyDesignation, vs...))
}

// VerifiedbyDesignationNotIn applies the NotIn predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldVerifiedbyDesignation, vs...))
}

// VerifiedbyDesignationGT applies the GT predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationGTE applies the GTE predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationLT applies the LT predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationLTE applies the LTE predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationContains applies the Contains predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationHasPrefix applies the HasPrefix predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationHasSuffix applies the HasSuffix predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationIsNil applies the IsNil predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldVerifiedbyDesignation))
}

// VerifiedbyDesignationNotNil applies the NotNil predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldVerifiedbyDesignation))
}

// VerifiedbyDesignationEqualFold applies the EqualFold predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldVerifiedbyDesignation, v))
}

// VerifiedbyDesignationContainsFold applies the ContainsFold predicate on the "verifiedbyDesignation" field.
func VerifiedbyDesignationContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldVerifiedbyDesignation, v))
}

// VerifiedDateEQ applies the EQ predicate on the "verifiedDate" field.
func VerifiedDateEQ(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldVerifiedDate, v))
}

// VerifiedDateNEQ applies the NEQ predicate on the "verifiedDate" field.
func VerifiedDateNEQ(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldVerifiedDate, v))
}

// VerifiedDateIn applies the In predicate on the "verifiedDate" field.
func VerifiedDateIn(vs ...time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldVerifiedDate, vs...))
}

// VerifiedDateNotIn applies the NotIn predicate on the "verifiedDate" field.
func VerifiedDateNotIn(vs ...time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldVerifiedDate, vs...))
}

// VerifiedDateGT applies the GT predicate on the "verifiedDate" field.
func VerifiedDateGT(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldVerifiedDate, v))
}

// VerifiedDateGTE applies the GTE predicate on the "verifiedDate" field.
func VerifiedDateGTE(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldVerifiedDate, v))
}

// VerifiedDateLT applies the LT predicate on the "verifiedDate" field.
func VerifiedDateLT(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldVerifiedDate, v))
}

// VerifiedDateLTE applies the LTE predicate on the "verifiedDate" field.
func VerifiedDateLTE(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldVerifiedDate, v))
}

// VerifiedDateIsNil applies the IsNil predicate on the "verifiedDate" field.
func VerifiedDateIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldVerifiedDate))
}

// VerifiedDateNotNil applies the NotNil predicate on the "verifiedDate" field.
func VerifiedDateNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldVerifiedDate))
}

// StatussEQ applies the EQ predicate on the "Statuss" field.
func StatussEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldStatuss, v))
}

// StatussNEQ applies the NEQ predicate on the "Statuss" field.
func StatussNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldStatuss, v))
}

// StatussIn applies the In predicate on the "Statuss" field.
func StatussIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldStatuss, vs...))
}

// StatussNotIn applies the NotIn predicate on the "Statuss" field.
func StatussNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldStatuss, vs...))
}

// StatussGT applies the GT predicate on the "Statuss" field.
func StatussGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldStatuss, v))
}

// StatussGTE applies the GTE predicate on the "Statuss" field.
func StatussGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldStatuss, v))
}

// StatussLT applies the LT predicate on the "Statuss" field.
func StatussLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldStatuss, v))
}

// StatussLTE applies the LTE predicate on the "Statuss" field.
func StatussLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldStatuss, v))
}

// StatussContains applies the Contains predicate on the "Statuss" field.
func StatussContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldStatuss, v))
}

// StatussHasPrefix applies the HasPrefix predicate on the "Statuss" field.
func StatussHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldStatuss, v))
}

// StatussHasSuffix applies the HasSuffix predicate on the "Statuss" field.
func StatussHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldStatuss, v))
}

// StatussIsNil applies the IsNil predicate on the "Statuss" field.
func StatussIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldStatuss))
}

// StatussNotNil applies the NotNil predicate on the "Statuss" field.
func StatussNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldStatuss))
}

// StatussEqualFold applies the EqualFold predicate on the "Statuss" field.
func StatussEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldStatuss, v))
}

// StatussContainsFold applies the ContainsFold predicate on the "Statuss" field.
func StatussContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldStatuss, v))
}

// DeletedbyidEQ applies the EQ predicate on the "deletedbyid" field.
func DeletedbyidEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyid, v))
}

// DeletedbyidNEQ applies the NEQ predicate on the "deletedbyid" field.
func DeletedbyidNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldDeletedbyid, v))
}

// DeletedbyidIn applies the In predicate on the "deletedbyid" field.
func DeletedbyidIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldDeletedbyid, vs...))
}

// DeletedbyidNotIn applies the NotIn predicate on the "deletedbyid" field.
func DeletedbyidNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldDeletedbyid, vs...))
}

// DeletedbyidGT applies the GT predicate on the "deletedbyid" field.
func DeletedbyidGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldDeletedbyid, v))
}

// DeletedbyidGTE applies the GTE predicate on the "deletedbyid" field.
func DeletedbyidGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldDeletedbyid, v))
}

// DeletedbyidLT applies the LT predicate on the "deletedbyid" field.
func DeletedbyidLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldDeletedbyid, v))
}

// DeletedbyidLTE applies the LTE predicate on the "deletedbyid" field.
func DeletedbyidLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldDeletedbyid, v))
}

// DeletedbyidIsNil applies the IsNil predicate on the "deletedbyid" field.
func DeletedbyidIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldDeletedbyid))
}

// DeletedbyidNotNil applies the NotNil predicate on the "deletedbyid" field.
func DeletedbyidNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldDeletedbyid))
}

// DeletedbyusernameEQ applies the EQ predicate on the "deletedbyusername" field.
func DeletedbyusernameEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyusername, v))
}

// DeletedbyusernameNEQ applies the NEQ predicate on the "deletedbyusername" field.
func DeletedbyusernameNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldDeletedbyusername, v))
}

// DeletedbyusernameIn applies the In predicate on the "deletedbyusername" field.
func DeletedbyusernameIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldDeletedbyusername, vs...))
}

// DeletedbyusernameNotIn applies the NotIn predicate on the "deletedbyusername" field.
func DeletedbyusernameNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldDeletedbyusername, vs...))
}

// DeletedbyusernameGT applies the GT predicate on the "deletedbyusername" field.
func DeletedbyusernameGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldDeletedbyusername, v))
}

// DeletedbyusernameGTE applies the GTE predicate on the "deletedbyusername" field.
func DeletedbyusernameGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldDeletedbyusername, v))
}

// DeletedbyusernameLT applies the LT predicate on the "deletedbyusername" field.
func DeletedbyusernameLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldDeletedbyusername, v))
}

// DeletedbyusernameLTE applies the LTE predicate on the "deletedbyusername" field.
func DeletedbyusernameLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldDeletedbyusername, v))
}

// DeletedbyusernameContains applies the Contains predicate on the "deletedbyusername" field.
func DeletedbyusernameContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldDeletedbyusername, v))
}

// DeletedbyusernameHasPrefix applies the HasPrefix predicate on the "deletedbyusername" field.
func DeletedbyusernameHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldDeletedbyusername, v))
}

// DeletedbyusernameHasSuffix applies the HasSuffix predicate on the "deletedbyusername" field.
func DeletedbyusernameHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldDeletedbyusername, v))
}

// DeletedbyusernameIsNil applies the IsNil predicate on the "deletedbyusername" field.
func DeletedbyusernameIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldDeletedbyusername))
}

// DeletedbyusernameNotNil applies the NotNil predicate on the "deletedbyusername" field.
func DeletedbyusernameNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldDeletedbyusername))
}

// DeletedbyusernameEqualFold applies the EqualFold predicate on the "deletedbyusername" field.
func DeletedbyusernameEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldDeletedbyusername, v))
}

// DeletedbyusernameContainsFold applies the ContainsFold predicate on the "deletedbyusername" field.
func DeletedbyusernameContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldDeletedbyusername, v))
}

// DeletedbyEmployeeidEQ applies the EQ predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyEmployeeid, v))
}

// DeletedbyEmployeeidNEQ applies the NEQ predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidNEQ(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldDeletedbyEmployeeid, v))
}

// DeletedbyEmployeeidIn applies the In predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldDeletedbyEmployeeid, vs...))
}

// DeletedbyEmployeeidNotIn applies the NotIn predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidNotIn(vs ...int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldDeletedbyEmployeeid, vs...))
}

// DeletedbyEmployeeidGT applies the GT predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidGT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldDeletedbyEmployeeid, v))
}

// DeletedbyEmployeeidGTE applies the GTE predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidGTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldDeletedbyEmployeeid, v))
}

// DeletedbyEmployeeidLT applies the LT predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidLT(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldDeletedbyEmployeeid, v))
}

// DeletedbyEmployeeidLTE applies the LTE predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidLTE(v int64) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldDeletedbyEmployeeid, v))
}

// DeletedbyEmployeeidIsNil applies the IsNil predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldDeletedbyEmployeeid))
}

// DeletedbyEmployeeidNotNil applies the NotNil predicate on the "deletedbyEmployeeid" field.
func DeletedbyEmployeeidNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldDeletedbyEmployeeid))
}

// DeletedbyDesignationEQ applies the EQ predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationNEQ applies the NEQ predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationNEQ(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationIn applies the In predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldDeletedbyDesignation, vs...))
}

// DeletedbyDesignationNotIn applies the NotIn predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationNotIn(vs ...string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldDeletedbyDesignation, vs...))
}

// DeletedbyDesignationGT applies the GT predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationGT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationGTE applies the GTE predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationGTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationLT applies the LT predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationLT(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationLTE applies the LTE predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationLTE(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationContains applies the Contains predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationContains(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContains(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationHasPrefix applies the HasPrefix predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationHasPrefix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasPrefix(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationHasSuffix applies the HasSuffix predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationHasSuffix(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldHasSuffix(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationIsNil applies the IsNil predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldDeletedbyDesignation))
}

// DeletedbyDesignationNotNil applies the NotNil predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldDeletedbyDesignation))
}

// DeletedbyDesignationEqualFold applies the EqualFold predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationEqualFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEqualFold(FieldDeletedbyDesignation, v))
}

// DeletedbyDesignationContainsFold applies the ContainsFold predicate on the "deletedbyDesignation" field.
func DeletedbyDesignationContainsFold(v string) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldContainsFold(FieldDeletedbyDesignation, v))
}

// DeletedDateEQ applies the EQ predicate on the "deletedDate" field.
func DeletedDateEQ(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldEQ(FieldDeletedDate, v))
}

// DeletedDateNEQ applies the NEQ predicate on the "deletedDate" field.
func DeletedDateNEQ(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNEQ(FieldDeletedDate, v))
}

// DeletedDateIn applies the In predicate on the "deletedDate" field.
func DeletedDateIn(vs ...time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIn(FieldDeletedDate, vs...))
}

// DeletedDateNotIn applies the NotIn predicate on the "deletedDate" field.
func DeletedDateNotIn(vs ...time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotIn(FieldDeletedDate, vs...))
}

// DeletedDateGT applies the GT predicate on the "deletedDate" field.
func DeletedDateGT(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGT(FieldDeletedDate, v))
}

// DeletedDateGTE applies the GTE predicate on the "deletedDate" field.
func DeletedDateGTE(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldGTE(FieldDeletedDate, v))
}

// DeletedDateLT applies the LT predicate on the "deletedDate" field.
func DeletedDateLT(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLT(FieldDeletedDate, v))
}

// DeletedDateLTE applies the LTE predicate on the "deletedDate" field.
func DeletedDateLTE(v time.Time) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldLTE(FieldDeletedDate, v))
}

// DeletedDateIsNil applies the IsNil predicate on the "deletedDate" field.
func DeletedDateIsNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldIsNull(FieldDeletedDate))
}

// DeletedDateNotNil applies the NotNil predicate on the "deletedDate" field.
func DeletedDateNotNil() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(sql.FieldNotNull(FieldDeletedDate))
}

// HasLogData applies the HasEdge predicate on the "LogData" edge.
func HasLogData() predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, LogDataTable, LogDataColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasLogDataWith applies the HasEdge predicate on the "LogData" edge with a given conditions (other predicates).
func HasLogDataWith(preds ...predicate.Logs) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(func(s *sql.Selector) {
		step := newLogDataStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.CadreEligibleConfiguration) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.CadreEligibleConfiguration) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.CadreEligibleConfiguration) predicate.CadreEligibleConfiguration {
	return predicate.CadreEligibleConfiguration(func(s *sql.Selector) {
		p(s.Not())
	})
}
