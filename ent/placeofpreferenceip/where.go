// Code generated by ent, DO NOT EDIT.

package placeofpreferenceip

import (
	"recruit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLTE(FieldID, id))
}

// ApplicationID applies equality check predicate on the "ApplicationID" field. It's identical to ApplicationIDEQ.
func ApplicationID(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldApplicationID, v))
}

// PlacePrefNo applies equality check predicate on the "PlacePrefNo" field. It's identical to PlacePrefNoEQ.
func PlacePrefNo(v int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldPlacePrefNo, v))
}

// PlacePrefValue applies equality check predicate on the "PlacePrefValue" field. It's identical to PlacePrefValueEQ.
func PlacePrefValue(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldPlacePrefValue, v))
}

// EmployeeID applies equality check predicate on the "EmployeeID" field. It's identical to EmployeeIDEQ.
func EmployeeID(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldEmployeeID, v))
}

// UpdatedAt applies equality check predicate on the "UpdatedAt" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedBy applies equality check predicate on the "UpdatedBy" field. It's identical to UpdatedByEQ.
func UpdatedBy(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldUpdatedBy, v))
}

// ApplicationIDEQ applies the EQ predicate on the "ApplicationID" field.
func ApplicationIDEQ(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldApplicationID, v))
}

// ApplicationIDNEQ applies the NEQ predicate on the "ApplicationID" field.
func ApplicationIDNEQ(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNEQ(FieldApplicationID, v))
}

// ApplicationIDIn applies the In predicate on the "ApplicationID" field.
func ApplicationIDIn(vs ...int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIn(FieldApplicationID, vs...))
}

// ApplicationIDNotIn applies the NotIn predicate on the "ApplicationID" field.
func ApplicationIDNotIn(vs ...int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotIn(FieldApplicationID, vs...))
}

// ApplicationIDGT applies the GT predicate on the "ApplicationID" field.
func ApplicationIDGT(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGT(FieldApplicationID, v))
}

// ApplicationIDGTE applies the GTE predicate on the "ApplicationID" field.
func ApplicationIDGTE(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGTE(FieldApplicationID, v))
}

// ApplicationIDLT applies the LT predicate on the "ApplicationID" field.
func ApplicationIDLT(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLT(FieldApplicationID, v))
}

// ApplicationIDLTE applies the LTE predicate on the "ApplicationID" field.
func ApplicationIDLTE(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLTE(FieldApplicationID, v))
}

// ApplicationIDIsNil applies the IsNil predicate on the "ApplicationID" field.
func ApplicationIDIsNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIsNull(FieldApplicationID))
}

// ApplicationIDNotNil applies the NotNil predicate on the "ApplicationID" field.
func ApplicationIDNotNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotNull(FieldApplicationID))
}

// PlacePrefNoEQ applies the EQ predicate on the "PlacePrefNo" field.
func PlacePrefNoEQ(v int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldPlacePrefNo, v))
}

// PlacePrefNoNEQ applies the NEQ predicate on the "PlacePrefNo" field.
func PlacePrefNoNEQ(v int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNEQ(FieldPlacePrefNo, v))
}

// PlacePrefNoIn applies the In predicate on the "PlacePrefNo" field.
func PlacePrefNoIn(vs ...int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIn(FieldPlacePrefNo, vs...))
}

// PlacePrefNoNotIn applies the NotIn predicate on the "PlacePrefNo" field.
func PlacePrefNoNotIn(vs ...int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotIn(FieldPlacePrefNo, vs...))
}

// PlacePrefNoGT applies the GT predicate on the "PlacePrefNo" field.
func PlacePrefNoGT(v int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGT(FieldPlacePrefNo, v))
}

// PlacePrefNoGTE applies the GTE predicate on the "PlacePrefNo" field.
func PlacePrefNoGTE(v int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGTE(FieldPlacePrefNo, v))
}

// PlacePrefNoLT applies the LT predicate on the "PlacePrefNo" field.
func PlacePrefNoLT(v int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLT(FieldPlacePrefNo, v))
}

// PlacePrefNoLTE applies the LTE predicate on the "PlacePrefNo" field.
func PlacePrefNoLTE(v int32) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLTE(FieldPlacePrefNo, v))
}

// PlacePrefNoIsNil applies the IsNil predicate on the "PlacePrefNo" field.
func PlacePrefNoIsNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIsNull(FieldPlacePrefNo))
}

// PlacePrefNoNotNil applies the NotNil predicate on the "PlacePrefNo" field.
func PlacePrefNoNotNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotNull(FieldPlacePrefNo))
}

// PlacePrefValueEQ applies the EQ predicate on the "PlacePrefValue" field.
func PlacePrefValueEQ(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldPlacePrefValue, v))
}

// PlacePrefValueNEQ applies the NEQ predicate on the "PlacePrefValue" field.
func PlacePrefValueNEQ(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNEQ(FieldPlacePrefValue, v))
}

// PlacePrefValueIn applies the In predicate on the "PlacePrefValue" field.
func PlacePrefValueIn(vs ...string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIn(FieldPlacePrefValue, vs...))
}

// PlacePrefValueNotIn applies the NotIn predicate on the "PlacePrefValue" field.
func PlacePrefValueNotIn(vs ...string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotIn(FieldPlacePrefValue, vs...))
}

// PlacePrefValueGT applies the GT predicate on the "PlacePrefValue" field.
func PlacePrefValueGT(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGT(FieldPlacePrefValue, v))
}

// PlacePrefValueGTE applies the GTE predicate on the "PlacePrefValue" field.
func PlacePrefValueGTE(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGTE(FieldPlacePrefValue, v))
}

// PlacePrefValueLT applies the LT predicate on the "PlacePrefValue" field.
func PlacePrefValueLT(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLT(FieldPlacePrefValue, v))
}

// PlacePrefValueLTE applies the LTE predicate on the "PlacePrefValue" field.
func PlacePrefValueLTE(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLTE(FieldPlacePrefValue, v))
}

// PlacePrefValueContains applies the Contains predicate on the "PlacePrefValue" field.
func PlacePrefValueContains(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldContains(FieldPlacePrefValue, v))
}

// PlacePrefValueHasPrefix applies the HasPrefix predicate on the "PlacePrefValue" field.
func PlacePrefValueHasPrefix(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldHasPrefix(FieldPlacePrefValue, v))
}

// PlacePrefValueHasSuffix applies the HasSuffix predicate on the "PlacePrefValue" field.
func PlacePrefValueHasSuffix(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldHasSuffix(FieldPlacePrefValue, v))
}

// PlacePrefValueIsNil applies the IsNil predicate on the "PlacePrefValue" field.
func PlacePrefValueIsNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIsNull(FieldPlacePrefValue))
}

// PlacePrefValueNotNil applies the NotNil predicate on the "PlacePrefValue" field.
func PlacePrefValueNotNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotNull(FieldPlacePrefValue))
}

// PlacePrefValueEqualFold applies the EqualFold predicate on the "PlacePrefValue" field.
func PlacePrefValueEqualFold(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEqualFold(FieldPlacePrefValue, v))
}

// PlacePrefValueContainsFold applies the ContainsFold predicate on the "PlacePrefValue" field.
func PlacePrefValueContainsFold(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldContainsFold(FieldPlacePrefValue, v))
}

// EmployeeIDEQ applies the EQ predicate on the "EmployeeID" field.
func EmployeeIDEQ(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldEmployeeID, v))
}

// EmployeeIDNEQ applies the NEQ predicate on the "EmployeeID" field.
func EmployeeIDNEQ(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNEQ(FieldEmployeeID, v))
}

// EmployeeIDIn applies the In predicate on the "EmployeeID" field.
func EmployeeIDIn(vs ...int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIn(FieldEmployeeID, vs...))
}

// EmployeeIDNotIn applies the NotIn predicate on the "EmployeeID" field.
func EmployeeIDNotIn(vs ...int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotIn(FieldEmployeeID, vs...))
}

// EmployeeIDGT applies the GT predicate on the "EmployeeID" field.
func EmployeeIDGT(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGT(FieldEmployeeID, v))
}

// EmployeeIDGTE applies the GTE predicate on the "EmployeeID" field.
func EmployeeIDGTE(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGTE(FieldEmployeeID, v))
}

// EmployeeIDLT applies the LT predicate on the "EmployeeID" field.
func EmployeeIDLT(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLT(FieldEmployeeID, v))
}

// EmployeeIDLTE applies the LTE predicate on the "EmployeeID" field.
func EmployeeIDLTE(v int64) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLTE(FieldEmployeeID, v))
}

// EmployeeIDIsNil applies the IsNil predicate on the "EmployeeID" field.
func EmployeeIDIsNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIsNull(FieldEmployeeID))
}

// EmployeeIDNotNil applies the NotNil predicate on the "EmployeeID" field.
func EmployeeIDNotNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotNull(FieldEmployeeID))
}

// UpdatedAtEQ applies the EQ predicate on the "UpdatedAt" field.
func UpdatedAtEQ(v time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "UpdatedAt" field.
func UpdatedAtNEQ(v time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "UpdatedAt" field.
func UpdatedAtIn(vs ...time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "UpdatedAt" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "UpdatedAt" field.
func UpdatedAtGT(v time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "UpdatedAt" field.
func UpdatedAtGTE(v time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "UpdatedAt" field.
func UpdatedAtLT(v time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "UpdatedAt" field.
func UpdatedAtLTE(v time.Time) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "UpdatedAt" field.
func UpdatedAtIsNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "UpdatedAt" field.
func UpdatedAtNotNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotNull(FieldUpdatedAt))
}

// UpdatedByEQ applies the EQ predicate on the "UpdatedBy" field.
func UpdatedByEQ(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEQ(FieldUpdatedBy, v))
}

// UpdatedByNEQ applies the NEQ predicate on the "UpdatedBy" field.
func UpdatedByNEQ(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNEQ(FieldUpdatedBy, v))
}

// UpdatedByIn applies the In predicate on the "UpdatedBy" field.
func UpdatedByIn(vs ...string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIn(FieldUpdatedBy, vs...))
}

// UpdatedByNotIn applies the NotIn predicate on the "UpdatedBy" field.
func UpdatedByNotIn(vs ...string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotIn(FieldUpdatedBy, vs...))
}

// UpdatedByGT applies the GT predicate on the "UpdatedBy" field.
func UpdatedByGT(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGT(FieldUpdatedBy, v))
}

// UpdatedByGTE applies the GTE predicate on the "UpdatedBy" field.
func UpdatedByGTE(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldGTE(FieldUpdatedBy, v))
}

// UpdatedByLT applies the LT predicate on the "UpdatedBy" field.
func UpdatedByLT(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLT(FieldUpdatedBy, v))
}

// UpdatedByLTE applies the LTE predicate on the "UpdatedBy" field.
func UpdatedByLTE(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldLTE(FieldUpdatedBy, v))
}

// UpdatedByContains applies the Contains predicate on the "UpdatedBy" field.
func UpdatedByContains(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldContains(FieldUpdatedBy, v))
}

// UpdatedByHasPrefix applies the HasPrefix predicate on the "UpdatedBy" field.
func UpdatedByHasPrefix(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldHasPrefix(FieldUpdatedBy, v))
}

// UpdatedByHasSuffix applies the HasSuffix predicate on the "UpdatedBy" field.
func UpdatedByHasSuffix(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldHasSuffix(FieldUpdatedBy, v))
}

// UpdatedByIsNil applies the IsNil predicate on the "UpdatedBy" field.
func UpdatedByIsNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldIsNull(FieldUpdatedBy))
}

// UpdatedByNotNil applies the NotNil predicate on the "UpdatedBy" field.
func UpdatedByNotNil() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldNotNull(FieldUpdatedBy))
}

// UpdatedByEqualFold applies the EqualFold predicate on the "UpdatedBy" field.
func UpdatedByEqualFold(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldEqualFold(FieldUpdatedBy, v))
}

// UpdatedByContainsFold applies the ContainsFold predicate on the "UpdatedBy" field.
func UpdatedByContainsFold(v string) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(sql.FieldContainsFold(FieldUpdatedBy, v))
}

// HasApplnIPRef applies the HasEdge predicate on the "ApplnIP_Ref" edge.
func HasApplnIPRef() predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, ApplnIPRefTable, ApplnIPRefColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasApplnIPRefWith applies the HasEdge predicate on the "ApplnIP_Ref" edge with a given conditions (other predicates).
func HasApplnIPRefWith(preds ...predicate.Exam_Applications_IP) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(func(s *sql.Selector) {
		step := newApplnIPRefStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PlaceOfPreferenceIP) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PlaceOfPreferenceIP) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PlaceOfPreferenceIP) predicate.PlaceOfPreferenceIP {
	return predicate.PlaceOfPreferenceIP(func(s *sql.Selector) {
		p(s.Not())
	})
}
