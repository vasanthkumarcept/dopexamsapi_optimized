// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/dialect"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
	"time"
)

type CadreEligibleConfiguration struct {
	ent.Schema
}


func (CadreEligibleConfiguration) Fields() []ent.Field {
	return []ent.Field{
		field.Int64("id").StorageKey("cadreEligibleCode"),
		field.Int64("ExamCode").Optional(),
		field.String("ExamName").Optional(),
		field.String("ExamShortName").Optional(),
		//field.String("ExamShortName").Optional(),
		field.Int64("PostID").Optional(),
		field.String("PostCode").Optional(),
		field.String("PostDescription").Optional(),
		field.Int64("gdsService").Optional(),
		field.String("CategoryCode").Optional(),
		field.Int64("ageCriteria").Optional(),
		field.Int64("serviceCriteria").Optional(),
		field.Int64("drivingLicenceCriteria").Optional(),
		field.Int64("computerKnowledge").Optional(),
		field.Int64("eligibilityBasedOnLevelOfPayMatrix").Optional(),
		field.Int64("educationCode").Optional(),
		field.String("educationDescription").Optional(),
		field.String("OrderNumber").Optional(),
		field.Int64("CreatedById").Optional(),
		field.String("CreatedByUserName").Optional(),
		field.Int64("CreatedByEmpId").Optional(),
		field.String("CreatedByDesignation").Optional(),
		field.Time("CreatedDate").SchemaType(map[string]string{
			dialect.Postgres: "timestamp",
		}).Default(time.Now).Optional(),
		field.Int64("verifiedbyid").Optional(),
		field.String("verifiedbyusername").Optional(),
		field.Int64("verifiedbyEmployeeid").Optional(),
		field.String("verifiedbyDesignation").Optional(),
		field.Time("verifiedDate").SchemaType(map[string]string{
			dialect.Postgres: "timestamp",
		}).Default(time.Now).Optional(),
		field.String("Statuss").Default("active"). Optional(),
		field.Int64("deletedbyid").Optional(),
		field.String("deletedbyusername").Optional(),
		field.Int64("deletedbyEmployeeid").Optional(),
		field.String("deletedbyDesignation").Optional(),
		field.Time("deletedDate").SchemaType(map[string]string{
			dialect.Postgres: "timestamp",
		}).Default(time.Now).Optional(),
		
		}
}
func (CadreEligibleConfiguration) Edges() []ent.Edge {
	return []ent.Edge{
		edge.To("LogData", Logs.Type),
	}
	
}


func (CadreEligibleConfiguration) Annotations() []schema.Annotation {
	return []schema.Annotation{entsql.Annotation{Table: "CadreEligibleConfiguration"}}
}


