// Code generated by entimport, DO NOT EDIT.

package schema

import (
	
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent"
	"time"
	"entgo.io/ent/dialect"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)
// not required to be deleted
// Exam holds the schema definition for the Exam entity.
type Cadre_Choice_IP struct {
	ent.Schema
}

/// Fields of the Exam.
func (Cadre_Choice_IP) Fields() []ent.Field {
	return []ent.Field{field.Int32("id").StorageKey("CadrePrefId"), 
	field.Int64("ApplicationID").Optional(),
	field.String("CadrePrefNo").Optional(), 
	//field.Int32("NumOfPapers"),
	field.String("CadrePrefValue").Optional(), 	
	field.Int64("EmployeeID").Optional(),	
	field.Time("UpdatedAt").SchemaType(map[string]string{
		dialect.Postgres: "date",
	}).SchemaType(map[string]string{
			dialect.Postgres: "timestamp",
		}).Default(time.Now).Optional(),	
	field.String("UpdatedBy").Default("API").Optional(),}
}
// Edges of the Exam.
func (Cadre_Choice_IP) Edges() []ent.Edge {
	return []ent.Edge{edge.From("ApplnIP_Ref", Exam_Applications_IP.Type).Ref("CadrePref_Ref").Unique().Field("ApplicationID"),
	}
	//edge.To("examcal_ps_ref", ExamCalendar.Type),	
	}


func (Cadre_Choice_IP) Annotations() []schema.Annotation {
	return []schema.Annotation{entsql.Annotation{Table: "Cadre_Choice_IP"}}
}

