// Code generated by entimport, DO NOT EDIT.

package schema

import (
	"entgo.io/ent"
	"entgo.io/ent/dialect"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

type ExamCityCenter struct {
	ent.Schema
}

func (ExamCityCenter) Fields() []ent.Field {
	return []ent.Field{field.Int32("id").StorageKey("ExamCityCentreCode"),
	field.Int32("ExamCode").Optional().Default(0), 
	field.String("ExamName").Optional(),
	field.String("ExamShortName").Optional(), 
	field.Int32("ExamYear").Optional().Default(0),
	field.String("ConductedBy").Optional(),
	field.String("NodalOfficeFacilityID").Optional(),
	field.String("NodalOfficeName").Optional(),
	field.Int32("NotificationCode").Optional().Default(0),
	field.String("NotificationNumber").Optional(),
	field.String("CenterCityName").Optional(),
	field.Int64("CreatedById").Optional().Default(0),
	field.String("CreatedByUserName").Optional(),
	field.Int64("CreatedByEmpId").Optional().Default(0),
	field.String("CreatedByDesignation").Optional(),
	field.Time("CreatedDate").SchemaType(map[string]string{
			dialect.Postgres: "date",
		}).Optional(),
	field.String("Status").Optional(),
	field.Int64("deletedbyid").Optional().Default(0),
	field.String("deletedbyusername").Optional(),
	field.Int64("deletedbyEmployeeid").Optional().Default(0),
	field.String("deletedbyDesignation").Optional(),
	field.Time("deletedDate").SchemaType(map[string]string{
			dialect.Postgres: "date",
		}).Optional(),
	field.String("CircleCityName").Optional(),
	field.Int32("DivisionCode").Optional().Default(0),
	field.Int32("RegionCode").Optional().Default(0),
	field.String("DivisionName").Optional(),
	field.Int32("RegionID").Optional(),
	field.String("RegionName").Optional(),
	field.String("RegionCityName").Optional(),
	field.String("CentreCityName").Optional(),
	field.String("Remarks").Optional(),	
	//field.String("CircleCityName").Optional(),
	field.Time("UpdatedAt").SchemaType(map[string]string{
		dialect.Postgres: "timestamp",
	}).Optional(),
	field.String("UpdatedBy").Optional(),


	field.Int32("CentreCode").Optional().Default(0),
	field.Int32("CircleID").Optional().Default(0),

	

}
}
func (ExamCityCenter) Edges() []ent.Edge {
	return []ent.Edge{
		edge.To("ExamCityCenterRef", Exam_Applications_IP.Type),
		edge.To("ExamCityCenterMTSPMMGRef", Exam_Application_MTSPMMG.Type),
		edge.To("ExamCityCenterGDSPARef", Exam_Applications_GDSPA.Type),
		edge.To("ExamCityCenterGDSPMRef", Exam_Applications_GDSPM.Type),
		edge.To("ExamCityCenterPMPARef", Exam_Applications_PMPA.Type),
		edge.To("ExamCityCenterPSRef", Exam_Applications_PS.Type),
}
}
func (ExamCityCenter) Annotations() []schema.Annotation {
	return []schema.Annotation{entsql.Annotation{Table: "ExamCityCenter"}}
}
