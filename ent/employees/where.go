// Code generated by ent, DO NOT EDIT.

package employees

import (
	"recruit/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldID, id))
}

// EmployeedID applies equality check predicate on the "EmployeedID" field. It's identical to EmployeedIDEQ.
func EmployeedID(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeedID, v))
}

// IDVerified applies equality check predicate on the "IDVerified" field. It's identical to IDVerifiedEQ.
func IDVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldIDVerified, v))
}

// IDRemStatus applies equality check predicate on the "IDRemStatus" field. It's identical to IDRemStatusEQ.
func IDRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldIDRemStatus, v))
}

// IDRemarks applies equality check predicate on the "IDRemarks" field. It's identical to IDRemarksEQ.
func IDRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldIDRemarks, v))
}

// EmployeeName applies equality check predicate on the "EmployeeName" field. It's identical to EmployeeNameEQ.
func EmployeeName(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeName, v))
}

// NameVerified applies equality check predicate on the "nameVerified" field. It's identical to NameVerifiedEQ.
func NameVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldNameVerified, v))
}

// NameRemStatus applies equality check predicate on the "nameRemStatus" field. It's identical to NameRemStatusEQ.
func NameRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldNameRemStatus, v))
}

// NameRemarks applies equality check predicate on the "nameRemarks" field. It's identical to NameRemarksEQ.
func NameRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldNameRemarks, v))
}

// EmployeeFathersName applies equality check predicate on the "EmployeeFathersName" field. It's identical to EmployeeFathersNameEQ.
func EmployeeFathersName(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeFathersName, v))
}

// FathersNameVerified applies equality check predicate on the "FathersNameVerified" field. It's identical to FathersNameVerifiedEQ.
func FathersNameVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldFathersNameVerified, v))
}

// FathersNameRemStatus applies equality check predicate on the "FathersNameRemStatus" field. It's identical to FathersNameRemStatusEQ.
func FathersNameRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldFathersNameRemStatus, v))
}

// FathersNameRemarks applies equality check predicate on the "FathersNameRemarks" field. It's identical to FathersNameRemarksEQ.
func FathersNameRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldFathersNameRemarks, v))
}

// DOB applies equality check predicate on the "DOB" field. It's identical to DOBEQ.
func DOB(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOB, v))
}

// DOBVerified applies equality check predicate on the "DOBVerified" field. It's identical to DOBVerifiedEQ.
func DOBVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOBVerified, v))
}

// DOBRemStatus applies equality check predicate on the "DOBRemStatus" field. It's identical to DOBRemStatusEQ.
func DOBRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOBRemStatus, v))
}

// DOBRemarks applies equality check predicate on the "DOBRemarks" field. It's identical to DOBRemarksEQ.
func DOBRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOBRemarks, v))
}

// GenderVerified applies equality check predicate on the "genderVerified" field. It's identical to GenderVerifiedEQ.
func GenderVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldGenderVerified, v))
}

// GenderRemStatus applies equality check predicate on the "genderRemStatus" field. It's identical to GenderRemStatusEQ.
func GenderRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldGenderRemStatus, v))
}

// GenderRemarks applies equality check predicate on the "genderRemarks" field. It's identical to GenderRemarksEQ.
func GenderRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldGenderRemarks, v))
}

// MobileNumber applies equality check predicate on the "MobileNumber" field. It's identical to MobileNumberEQ.
func MobileNumber(v int64) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumber, v))
}

// MobileNumberVerified applies equality check predicate on the "MobileNumberVerified" field. It's identical to MobileNumberVerifiedEQ.
func MobileNumberVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumberVerified, v))
}

// MobileNumberRemStatus applies equality check predicate on the "MobileNumberRemStatus" field. It's identical to MobileNumberRemStatusEQ.
func MobileNumberRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumberRemStatus, v))
}

// MobileNumberRemarks applies equality check predicate on the "MobileNumberRemarks" field. It's identical to MobileNumberRemarksEQ.
func MobileNumberRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumberRemarks, v))
}

// EmailID applies equality check predicate on the "EmailID" field. It's identical to EmailIDEQ.
func EmailID(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailID, v))
}

// EmailIDVerified applies equality check predicate on the "EmailIDVerified" field. It's identical to EmailIDVerifiedEQ.
func EmailIDVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailIDVerified, v))
}

// EmailIDRemStatus applies equality check predicate on the "EmailIDRemStatus" field. It's identical to EmailIDRemStatusEQ.
func EmailIDRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailIDRemStatus, v))
}

// EmailIDRemarks applies equality check predicate on the "EmailIDRemarks" field. It's identical to EmailIDRemarksEQ.
func EmailIDRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailIDRemarks, v))
}

// Categoryid applies equality check predicate on the "Categoryid" field. It's identical to CategoryidEQ.
func Categoryid(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCategoryid, v))
}

// EmployeeCategoryCode applies equality check predicate on the "EmployeeCategoryCode" field. It's identical to EmployeeCategoryCodeEQ.
func EmployeeCategoryCode(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCode, v))
}

// EmployeeCategory applies equality check predicate on the "EmployeeCategory" field. It's identical to EmployeeCategoryEQ.
func EmployeeCategory(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategory, v))
}

// EmployeeCategoryCodeVerified applies equality check predicate on the "EmployeeCategoryCodeVerified" field. It's identical to EmployeeCategoryCodeVerifiedEQ.
func EmployeeCategoryCodeVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCodeVerified, v))
}

// EmployeeCategoryCodeRemStatus applies equality check predicate on the "EmployeeCategoryCodeRemStatus" field. It's identical to EmployeeCategoryCodeRemStatusEQ.
func EmployeeCategoryCodeRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCodeRemStatus, v))
}

// EmployeeCategoryCodeRemarks applies equality check predicate on the "EmployeeCategoryCodeRemarks" field. It's identical to EmployeeCategoryCodeRemarksEQ.
func EmployeeCategoryCodeRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCodeRemarks, v))
}

// WithDisability applies equality check predicate on the "WithDisability" field. It's identical to WithDisabilityEQ.
func WithDisability(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisability, v))
}

// WithDisabilityVerified applies equality check predicate on the "WithDisabilityVerified" field. It's identical to WithDisabilityVerifiedEQ.
func WithDisabilityVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisabilityVerified, v))
}

// WithDisabilityRemStatus applies equality check predicate on the "WithDisabilityRemStatus" field. It's identical to WithDisabilityRemStatusEQ.
func WithDisabilityRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisabilityRemStatus, v))
}

// WithDisabilityRemarks applies equality check predicate on the "WithDisabilityRemarks" field. It's identical to WithDisabilityRemarksEQ.
func WithDisabilityRemarks(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisabilityRemarks, v))
}

// DisabilityType applies equality check predicate on the "DisabilityType" field. It's identical to DisabilityTypeEQ.
func DisabilityType(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityType, v))
}

// DisabilityTypeVerified applies equality check predicate on the "DisabilityTypeVerified" field. It's identical to DisabilityTypeVerifiedEQ.
func DisabilityTypeVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityTypeVerified, v))
}

// DisabilityTypeRemStatus applies equality check predicate on the "DisabilityTypeRemStatus" field. It's identical to DisabilityTypeRemStatusEQ.
func DisabilityTypeRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityTypeRemStatus, v))
}

// DisabilityTypeRemarks applies equality check predicate on the "DisabilityTypeRemarks" field. It's identical to DisabilityTypeRemarksEQ.
func DisabilityTypeRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityTypeRemarks, v))
}

// DisabilityPercentage applies equality check predicate on the "DisabilityPercentage" field. It's identical to DisabilityPercentageEQ.
func DisabilityPercentage(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentage, v))
}

// DisabilityPercentageVerified applies equality check predicate on the "DisabilityPercentageVerified" field. It's identical to DisabilityPercentageVerifiedEQ.
func DisabilityPercentageVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentageVerified, v))
}

// DisabilityPercentageRemStatus applies equality check predicate on the "DisabilityPercentageRemStatus" field. It's identical to DisabilityPercentageRemStatusEQ.
func DisabilityPercentageRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentageRemStatus, v))
}

// DisabilityPercentageRemarks applies equality check predicate on the "DisabilityPercentageRemarks" field. It's identical to DisabilityPercentageRemarksEQ.
func DisabilityPercentageRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentageRemarks, v))
}

// Signature applies equality check predicate on the "Signature" field. It's identical to SignatureEQ.
func Signature(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignature, v))
}

// SignatureVerified applies equality check predicate on the "SignatureVerified" field. It's identical to SignatureVerifiedEQ.
func SignatureVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignatureVerified, v))
}

// SignatureRemStatus applies equality check predicate on the "SignatureRemStatus" field. It's identical to SignatureRemStatusEQ.
func SignatureRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignatureRemStatus, v))
}

// SignatureRemarks applies equality check predicate on the "SignatureRemarks" field. It's identical to SignatureRemarksEQ.
func SignatureRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignatureRemarks, v))
}

// Photo applies equality check predicate on the "Photo" field. It's identical to PhotoEQ.
func Photo(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhoto, v))
}

// PhotoVerified applies equality check predicate on the "PhotoVerified" field. It's identical to PhotoVerifiedEQ.
func PhotoVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhotoVerified, v))
}

// PhotoRemStatus applies equality check predicate on the "PhotoRemStatus" field. It's identical to PhotoRemStatusEQ.
func PhotoRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhotoRemStatus, v))
}

// PhotoRemarks applies equality check predicate on the "PhotoRemarks" field. It's identical to PhotoRemarksEQ.
func PhotoRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhotoRemarks, v))
}

// PostID applies equality check predicate on the "PostID" field. It's identical to PostIDEQ.
func PostID(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPostID, v))
}

// PostCode applies equality check predicate on the "PostCode" field. It's identical to PostCodeEQ.
func PostCode(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPostCode, v))
}

// EmployeePost applies equality check predicate on the "EmployeePost" field. It's identical to EmployeePostEQ.
func EmployeePost(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePost, v))
}

// EmployeePostVerified applies equality check predicate on the "EmployeePostVerified" field. It's identical to EmployeePostVerifiedEQ.
func EmployeePostVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePostVerified, v))
}

// EmployeePostRemStatus applies equality check predicate on the "EmployeePostRemStatus" field. It's identical to EmployeePostRemStatusEQ.
func EmployeePostRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePostRemStatus, v))
}

// EmployeePostRemarks applies equality check predicate on the "EmployeePostRemarks" field. It's identical to EmployeePostRemarksEQ.
func EmployeePostRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePostRemarks, v))
}

// DesignationID applies equality check predicate on the "DesignationID" field. It's identical to DesignationIDEQ.
func DesignationID(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDesignationID, v))
}

// EmployeeDesignation applies equality check predicate on the "EmployeeDesignation" field. It's identical to EmployeeDesignationEQ.
func EmployeeDesignation(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignation, v))
}

// EmployeeDesignationVerified applies equality check predicate on the "EmployeeDesignationVerified" field. It's identical to EmployeeDesignationVerifiedEQ.
func EmployeeDesignationVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignationVerified, v))
}

// EmployeeDesignationRemStatus applies equality check predicate on the "EmployeeDesignationRemStatus" field. It's identical to EmployeeDesignationRemStatusEQ.
func EmployeeDesignationRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignationRemStatus, v))
}

// EmployeeDesignationRemarks applies equality check predicate on the "EmployeeDesignationRemarks" field. It's identical to EmployeeDesignationRemarksEQ.
func EmployeeDesignationRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignationRemarks, v))
}

// CircleID applies equality check predicate on the "CircleID" field. It's identical to CircleIDEQ.
func CircleID(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleID, v))
}

// CircleName applies equality check predicate on the "CircleName" field. It's identical to CircleNameEQ.
func CircleName(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleName, v))
}

// CircleVerified applies equality check predicate on the "CircleVerified" field. It's identical to CircleVerifiedEQ.
func CircleVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleVerified, v))
}

// CircleRemStatus applies equality check predicate on the "CircleRemStatus" field. It's identical to CircleRemStatusEQ.
func CircleRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleRemStatus, v))
}

// CircleRemarks applies equality check predicate on the "CircleRemarks" field. It's identical to CircleRemarksEQ.
func CircleRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleRemarks, v))
}

// RegionID applies equality check predicate on the "RegionID" field. It's identical to RegionIDEQ.
func RegionID(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionID, v))
}

// RegionName applies equality check predicate on the "RegionName" field. It's identical to RegionNameEQ.
func RegionName(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionName, v))
}

// RegionVerified applies equality check predicate on the "RegionVerified" field. It's identical to RegionVerifiedEQ.
func RegionVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionVerified, v))
}

// RegionRemStatus applies equality check predicate on the "RegionRemStatus" field. It's identical to RegionRemStatusEQ.
func RegionRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionRemStatus, v))
}

// RegionRemarks applies equality check predicate on the "RegionRemarks" field. It's identical to RegionRemarksEQ.
func RegionRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionRemarks, v))
}

// DivisionID applies equality check predicate on the "DivisionID" field. It's identical to DivisionIDEQ.
func DivisionID(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionID, v))
}

// DivisionName applies equality check predicate on the "DivisionName" field. It's identical to DivisionNameEQ.
func DivisionName(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionName, v))
}

// DivisionVerified applies equality check predicate on the "DivisionVerified" field. It's identical to DivisionVerifiedEQ.
func DivisionVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionVerified, v))
}

// DivisionRemStatus applies equality check predicate on the "DivisionRemStatus" field. It's identical to DivisionRemStatusEQ.
func DivisionRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionRemStatus, v))
}

// DivisionRemarks applies equality check predicate on the "DivisionRemarks" field. It's identical to DivisionRemarksEQ.
func DivisionRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionRemarks, v))
}

// OfficeID applies equality check predicate on the "OfficeID" field. It's identical to OfficeIDEQ.
func OfficeID(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeID, v))
}

// OfficeName applies equality check predicate on the "OfficeName" field. It's identical to OfficeNameEQ.
func OfficeName(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeName, v))
}

// OfficeVerified applies equality check predicate on the "OfficeVerified" field. It's identical to OfficeVerifiedEQ.
func OfficeVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeVerified, v))
}

// OfficeRemStatus applies equality check predicate on the "OfficeRemStatus" field. It's identical to OfficeRemStatusEQ.
func OfficeRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeRemStatus, v))
}

// OfficeRemarks applies equality check predicate on the "OfficeRemarks" field. It's identical to OfficeRemarksEQ.
func OfficeRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeRemarks, v))
}

// Role applies equality check predicate on the "Role" field. It's identical to RoleEQ.
func Role(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRole, v))
}

// RoleVerified applies equality check predicate on the "RoleVerified" field. It's identical to RoleVerifiedEQ.
func RoleVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleVerified, v))
}

// RoleRemStatus applies equality check predicate on the "RoleRemStatus" field. It's identical to RoleRemStatusEQ.
func RoleRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleRemStatus, v))
}

// RoleRemarks applies equality check predicate on the "RoleRemarks" field. It's identical to RoleRemarksEQ.
func RoleRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleRemarks, v))
}

// DCCS applies equality check predicate on the "DCCS" field. It's identical to DCCSEQ.
func DCCS(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCS, v))
}

// DCCSVerified applies equality check predicate on the "DCCSVerified" field. It's identical to DCCSVerifiedEQ.
func DCCSVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCSVerified, v))
}

// DCCSRemStatus applies equality check predicate on the "DCCSRemStatus" field. It's identical to DCCSRemStatusEQ.
func DCCSRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCSRemStatus, v))
}

// DCCSRemarks applies equality check predicate on the "DCCSRemarks" field. It's identical to DCCSRemarksEQ.
func DCCSRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCSRemarks, v))
}

// DCInPresentCadre applies equality check predicate on the "DCInPresentCadre" field. It's identical to DCInPresentCadreEQ.
func DCInPresentCadre(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadre, v))
}

// DCInPresentCadreVerified applies equality check predicate on the "DCInPresentCadreVerified" field. It's identical to DCInPresentCadreVerifiedEQ.
func DCInPresentCadreVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadreVerified, v))
}

// DCInPresentCadreRemStatus applies equality check predicate on the "DCInPresentCadreRemStatus" field. It's identical to DCInPresentCadreRemStatusEQ.
func DCInPresentCadreRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadreRemStatus, v))
}

// DCInPresentCadreRemarks applies equality check predicate on the "DCInPresentCadreRemarks" field. It's identical to DCInPresentCadreRemarksEQ.
func DCInPresentCadreRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadreRemarks, v))
}

// APSWorking applies equality check predicate on the "APSWorking" field. It's identical to APSWorkingEQ.
func APSWorking(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorking, v))
}

// APSWorkingVerified applies equality check predicate on the "APSWorkingVerified" field. It's identical to APSWorkingVerifiedEQ.
func APSWorkingVerified(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorkingVerified, v))
}

// APSWorkingRemStatus applies equality check predicate on the "APSWorkingRemStatus" field. It's identical to APSWorkingRemStatusEQ.
func APSWorkingRemStatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorkingRemStatus, v))
}

// APSWorkingRemarks applies equality check predicate on the "APSWorkingRemarks" field. It's identical to APSWorkingRemarksEQ.
func APSWorkingRemarks(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorkingRemarks, v))
}

// Profilestatus applies equality check predicate on the "profilestatus" field. It's identical to ProfilestatusEQ.
func Profilestatus(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldProfilestatus, v))
}

// RoleUserCode applies equality check predicate on the "RoleUserCode" field. It's identical to RoleUserCodeEQ.
func RoleUserCode(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleUserCode, v))
}

// EmployeedIDEQ applies the EQ predicate on the "EmployeedID" field.
func EmployeedIDEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeedID, v))
}

// EmployeedIDNEQ applies the NEQ predicate on the "EmployeedID" field.
func EmployeedIDNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeedID, v))
}

// EmployeedIDIn applies the In predicate on the "EmployeedID" field.
func EmployeedIDIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeedID, vs...))
}

// EmployeedIDNotIn applies the NotIn predicate on the "EmployeedID" field.
func EmployeedIDNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeedID, vs...))
}

// EmployeedIDGT applies the GT predicate on the "EmployeedID" field.
func EmployeedIDGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeedID, v))
}

// EmployeedIDGTE applies the GTE predicate on the "EmployeedID" field.
func EmployeedIDGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeedID, v))
}

// EmployeedIDLT applies the LT predicate on the "EmployeedID" field.
func EmployeedIDLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeedID, v))
}

// EmployeedIDLTE applies the LTE predicate on the "EmployeedID" field.
func EmployeedIDLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeedID, v))
}

// IDVerifiedEQ applies the EQ predicate on the "IDVerified" field.
func IDVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldIDVerified, v))
}

// IDVerifiedNEQ applies the NEQ predicate on the "IDVerified" field.
func IDVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldIDVerified, v))
}

// IDRemStatusEQ applies the EQ predicate on the "IDRemStatus" field.
func IDRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldIDRemStatus, v))
}

// IDRemStatusNEQ applies the NEQ predicate on the "IDRemStatus" field.
func IDRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldIDRemStatus, v))
}

// IDRemarksEQ applies the EQ predicate on the "IDRemarks" field.
func IDRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldIDRemarks, v))
}

// IDRemarksNEQ applies the NEQ predicate on the "IDRemarks" field.
func IDRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldIDRemarks, v))
}

// IDRemarksIn applies the In predicate on the "IDRemarks" field.
func IDRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldIDRemarks, vs...))
}

// IDRemarksNotIn applies the NotIn predicate on the "IDRemarks" field.
func IDRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldIDRemarks, vs...))
}

// IDRemarksGT applies the GT predicate on the "IDRemarks" field.
func IDRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldIDRemarks, v))
}

// IDRemarksGTE applies the GTE predicate on the "IDRemarks" field.
func IDRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldIDRemarks, v))
}

// IDRemarksLT applies the LT predicate on the "IDRemarks" field.
func IDRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldIDRemarks, v))
}

// IDRemarksLTE applies the LTE predicate on the "IDRemarks" field.
func IDRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldIDRemarks, v))
}

// IDRemarksContains applies the Contains predicate on the "IDRemarks" field.
func IDRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldIDRemarks, v))
}

// IDRemarksHasPrefix applies the HasPrefix predicate on the "IDRemarks" field.
func IDRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldIDRemarks, v))
}

// IDRemarksHasSuffix applies the HasSuffix predicate on the "IDRemarks" field.
func IDRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldIDRemarks, v))
}

// IDRemarksIsNil applies the IsNil predicate on the "IDRemarks" field.
func IDRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldIDRemarks))
}

// IDRemarksNotNil applies the NotNil predicate on the "IDRemarks" field.
func IDRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldIDRemarks))
}

// IDRemarksEqualFold applies the EqualFold predicate on the "IDRemarks" field.
func IDRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldIDRemarks, v))
}

// IDRemarksContainsFold applies the ContainsFold predicate on the "IDRemarks" field.
func IDRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldIDRemarks, v))
}

// EmployeeNameEQ applies the EQ predicate on the "EmployeeName" field.
func EmployeeNameEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeName, v))
}

// EmployeeNameNEQ applies the NEQ predicate on the "EmployeeName" field.
func EmployeeNameNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeName, v))
}

// EmployeeNameIn applies the In predicate on the "EmployeeName" field.
func EmployeeNameIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeeName, vs...))
}

// EmployeeNameNotIn applies the NotIn predicate on the "EmployeeName" field.
func EmployeeNameNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeeName, vs...))
}

// EmployeeNameGT applies the GT predicate on the "EmployeeName" field.
func EmployeeNameGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeeName, v))
}

// EmployeeNameGTE applies the GTE predicate on the "EmployeeName" field.
func EmployeeNameGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeeName, v))
}

// EmployeeNameLT applies the LT predicate on the "EmployeeName" field.
func EmployeeNameLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeeName, v))
}

// EmployeeNameLTE applies the LTE predicate on the "EmployeeName" field.
func EmployeeNameLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeeName, v))
}

// EmployeeNameContains applies the Contains predicate on the "EmployeeName" field.
func EmployeeNameContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeeName, v))
}

// EmployeeNameHasPrefix applies the HasPrefix predicate on the "EmployeeName" field.
func EmployeeNameHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeeName, v))
}

// EmployeeNameHasSuffix applies the HasSuffix predicate on the "EmployeeName" field.
func EmployeeNameHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeeName, v))
}

// EmployeeNameEqualFold applies the EqualFold predicate on the "EmployeeName" field.
func EmployeeNameEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeeName, v))
}

// EmployeeNameContainsFold applies the ContainsFold predicate on the "EmployeeName" field.
func EmployeeNameContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeeName, v))
}

// NameVerifiedEQ applies the EQ predicate on the "nameVerified" field.
func NameVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldNameVerified, v))
}

// NameVerifiedNEQ applies the NEQ predicate on the "nameVerified" field.
func NameVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldNameVerified, v))
}

// NameRemStatusEQ applies the EQ predicate on the "nameRemStatus" field.
func NameRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldNameRemStatus, v))
}

// NameRemStatusNEQ applies the NEQ predicate on the "nameRemStatus" field.
func NameRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldNameRemStatus, v))
}

// NameRemarksEQ applies the EQ predicate on the "nameRemarks" field.
func NameRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldNameRemarks, v))
}

// NameRemarksNEQ applies the NEQ predicate on the "nameRemarks" field.
func NameRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldNameRemarks, v))
}

// NameRemarksIn applies the In predicate on the "nameRemarks" field.
func NameRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldNameRemarks, vs...))
}

// NameRemarksNotIn applies the NotIn predicate on the "nameRemarks" field.
func NameRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldNameRemarks, vs...))
}

// NameRemarksGT applies the GT predicate on the "nameRemarks" field.
func NameRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldNameRemarks, v))
}

// NameRemarksGTE applies the GTE predicate on the "nameRemarks" field.
func NameRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldNameRemarks, v))
}

// NameRemarksLT applies the LT predicate on the "nameRemarks" field.
func NameRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldNameRemarks, v))
}

// NameRemarksLTE applies the LTE predicate on the "nameRemarks" field.
func NameRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldNameRemarks, v))
}

// NameRemarksContains applies the Contains predicate on the "nameRemarks" field.
func NameRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldNameRemarks, v))
}

// NameRemarksHasPrefix applies the HasPrefix predicate on the "nameRemarks" field.
func NameRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldNameRemarks, v))
}

// NameRemarksHasSuffix applies the HasSuffix predicate on the "nameRemarks" field.
func NameRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldNameRemarks, v))
}

// NameRemarksIsNil applies the IsNil predicate on the "nameRemarks" field.
func NameRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldNameRemarks))
}

// NameRemarksNotNil applies the NotNil predicate on the "nameRemarks" field.
func NameRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldNameRemarks))
}

// NameRemarksEqualFold applies the EqualFold predicate on the "nameRemarks" field.
func NameRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldNameRemarks, v))
}

// NameRemarksContainsFold applies the ContainsFold predicate on the "nameRemarks" field.
func NameRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldNameRemarks, v))
}

// EmployeeFathersNameEQ applies the EQ predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameNEQ applies the NEQ predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameIn applies the In predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeeFathersName, vs...))
}

// EmployeeFathersNameNotIn applies the NotIn predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeeFathersName, vs...))
}

// EmployeeFathersNameGT applies the GT predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameGTE applies the GTE predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameLT applies the LT predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameLTE applies the LTE predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameContains applies the Contains predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameHasPrefix applies the HasPrefix predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameHasSuffix applies the HasSuffix predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameEqualFold applies the EqualFold predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeeFathersName, v))
}

// EmployeeFathersNameContainsFold applies the ContainsFold predicate on the "EmployeeFathersName" field.
func EmployeeFathersNameContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeeFathersName, v))
}

// FathersNameVerifiedEQ applies the EQ predicate on the "FathersNameVerified" field.
func FathersNameVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldFathersNameVerified, v))
}

// FathersNameVerifiedNEQ applies the NEQ predicate on the "FathersNameVerified" field.
func FathersNameVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldFathersNameVerified, v))
}

// FathersNameRemStatusEQ applies the EQ predicate on the "FathersNameRemStatus" field.
func FathersNameRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldFathersNameRemStatus, v))
}

// FathersNameRemStatusNEQ applies the NEQ predicate on the "FathersNameRemStatus" field.
func FathersNameRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldFathersNameRemStatus, v))
}

// FathersNameRemarksEQ applies the EQ predicate on the "FathersNameRemarks" field.
func FathersNameRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldFathersNameRemarks, v))
}

// FathersNameRemarksNEQ applies the NEQ predicate on the "FathersNameRemarks" field.
func FathersNameRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldFathersNameRemarks, v))
}

// FathersNameRemarksIn applies the In predicate on the "FathersNameRemarks" field.
func FathersNameRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldFathersNameRemarks, vs...))
}

// FathersNameRemarksNotIn applies the NotIn predicate on the "FathersNameRemarks" field.
func FathersNameRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldFathersNameRemarks, vs...))
}

// FathersNameRemarksGT applies the GT predicate on the "FathersNameRemarks" field.
func FathersNameRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldFathersNameRemarks, v))
}

// FathersNameRemarksGTE applies the GTE predicate on the "FathersNameRemarks" field.
func FathersNameRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldFathersNameRemarks, v))
}

// FathersNameRemarksLT applies the LT predicate on the "FathersNameRemarks" field.
func FathersNameRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldFathersNameRemarks, v))
}

// FathersNameRemarksLTE applies the LTE predicate on the "FathersNameRemarks" field.
func FathersNameRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldFathersNameRemarks, v))
}

// FathersNameRemarksContains applies the Contains predicate on the "FathersNameRemarks" field.
func FathersNameRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldFathersNameRemarks, v))
}

// FathersNameRemarksHasPrefix applies the HasPrefix predicate on the "FathersNameRemarks" field.
func FathersNameRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldFathersNameRemarks, v))
}

// FathersNameRemarksHasSuffix applies the HasSuffix predicate on the "FathersNameRemarks" field.
func FathersNameRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldFathersNameRemarks, v))
}

// FathersNameRemarksIsNil applies the IsNil predicate on the "FathersNameRemarks" field.
func FathersNameRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldFathersNameRemarks))
}

// FathersNameRemarksNotNil applies the NotNil predicate on the "FathersNameRemarks" field.
func FathersNameRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldFathersNameRemarks))
}

// FathersNameRemarksEqualFold applies the EqualFold predicate on the "FathersNameRemarks" field.
func FathersNameRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldFathersNameRemarks, v))
}

// FathersNameRemarksContainsFold applies the ContainsFold predicate on the "FathersNameRemarks" field.
func FathersNameRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldFathersNameRemarks, v))
}

// DOBEQ applies the EQ predicate on the "DOB" field.
func DOBEQ(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOB, v))
}

// DOBNEQ applies the NEQ predicate on the "DOB" field.
func DOBNEQ(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDOB, v))
}

// DOBIn applies the In predicate on the "DOB" field.
func DOBIn(vs ...time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDOB, vs...))
}

// DOBNotIn applies the NotIn predicate on the "DOB" field.
func DOBNotIn(vs ...time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDOB, vs...))
}

// DOBGT applies the GT predicate on the "DOB" field.
func DOBGT(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDOB, v))
}

// DOBGTE applies the GTE predicate on the "DOB" field.
func DOBGTE(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDOB, v))
}

// DOBLT applies the LT predicate on the "DOB" field.
func DOBLT(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDOB, v))
}

// DOBLTE applies the LTE predicate on the "DOB" field.
func DOBLTE(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDOB, v))
}

// DOBVerifiedEQ applies the EQ predicate on the "DOBVerified" field.
func DOBVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOBVerified, v))
}

// DOBVerifiedNEQ applies the NEQ predicate on the "DOBVerified" field.
func DOBVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDOBVerified, v))
}

// DOBRemStatusEQ applies the EQ predicate on the "DOBRemStatus" field.
func DOBRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOBRemStatus, v))
}

// DOBRemStatusNEQ applies the NEQ predicate on the "DOBRemStatus" field.
func DOBRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDOBRemStatus, v))
}

// DOBRemarksEQ applies the EQ predicate on the "DOBRemarks" field.
func DOBRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDOBRemarks, v))
}

// DOBRemarksNEQ applies the NEQ predicate on the "DOBRemarks" field.
func DOBRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDOBRemarks, v))
}

// DOBRemarksIn applies the In predicate on the "DOBRemarks" field.
func DOBRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDOBRemarks, vs...))
}

// DOBRemarksNotIn applies the NotIn predicate on the "DOBRemarks" field.
func DOBRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDOBRemarks, vs...))
}

// DOBRemarksGT applies the GT predicate on the "DOBRemarks" field.
func DOBRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDOBRemarks, v))
}

// DOBRemarksGTE applies the GTE predicate on the "DOBRemarks" field.
func DOBRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDOBRemarks, v))
}

// DOBRemarksLT applies the LT predicate on the "DOBRemarks" field.
func DOBRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDOBRemarks, v))
}

// DOBRemarksLTE applies the LTE predicate on the "DOBRemarks" field.
func DOBRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDOBRemarks, v))
}

// DOBRemarksContains applies the Contains predicate on the "DOBRemarks" field.
func DOBRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDOBRemarks, v))
}

// DOBRemarksHasPrefix applies the HasPrefix predicate on the "DOBRemarks" field.
func DOBRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDOBRemarks, v))
}

// DOBRemarksHasSuffix applies the HasSuffix predicate on the "DOBRemarks" field.
func DOBRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDOBRemarks, v))
}

// DOBRemarksIsNil applies the IsNil predicate on the "DOBRemarks" field.
func DOBRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDOBRemarks))
}

// DOBRemarksNotNil applies the NotNil predicate on the "DOBRemarks" field.
func DOBRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDOBRemarks))
}

// DOBRemarksEqualFold applies the EqualFold predicate on the "DOBRemarks" field.
func DOBRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDOBRemarks, v))
}

// DOBRemarksContainsFold applies the ContainsFold predicate on the "DOBRemarks" field.
func DOBRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDOBRemarks, v))
}

// GenderEQ applies the EQ predicate on the "Gender" field.
func GenderEQ(v Gender) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldGender, v))
}

// GenderNEQ applies the NEQ predicate on the "Gender" field.
func GenderNEQ(v Gender) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldGender, v))
}

// GenderIn applies the In predicate on the "Gender" field.
func GenderIn(vs ...Gender) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldGender, vs...))
}

// GenderNotIn applies the NotIn predicate on the "Gender" field.
func GenderNotIn(vs ...Gender) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldGender, vs...))
}

// GenderVerifiedEQ applies the EQ predicate on the "genderVerified" field.
func GenderVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldGenderVerified, v))
}

// GenderVerifiedNEQ applies the NEQ predicate on the "genderVerified" field.
func GenderVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldGenderVerified, v))
}

// GenderRemStatusEQ applies the EQ predicate on the "genderRemStatus" field.
func GenderRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldGenderRemStatus, v))
}

// GenderRemStatusNEQ applies the NEQ predicate on the "genderRemStatus" field.
func GenderRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldGenderRemStatus, v))
}

// GenderRemarksEQ applies the EQ predicate on the "genderRemarks" field.
func GenderRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldGenderRemarks, v))
}

// GenderRemarksNEQ applies the NEQ predicate on the "genderRemarks" field.
func GenderRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldGenderRemarks, v))
}

// GenderRemarksIn applies the In predicate on the "genderRemarks" field.
func GenderRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldGenderRemarks, vs...))
}

// GenderRemarksNotIn applies the NotIn predicate on the "genderRemarks" field.
func GenderRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldGenderRemarks, vs...))
}

// GenderRemarksGT applies the GT predicate on the "genderRemarks" field.
func GenderRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldGenderRemarks, v))
}

// GenderRemarksGTE applies the GTE predicate on the "genderRemarks" field.
func GenderRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldGenderRemarks, v))
}

// GenderRemarksLT applies the LT predicate on the "genderRemarks" field.
func GenderRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldGenderRemarks, v))
}

// GenderRemarksLTE applies the LTE predicate on the "genderRemarks" field.
func GenderRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldGenderRemarks, v))
}

// GenderRemarksContains applies the Contains predicate on the "genderRemarks" field.
func GenderRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldGenderRemarks, v))
}

// GenderRemarksHasPrefix applies the HasPrefix predicate on the "genderRemarks" field.
func GenderRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldGenderRemarks, v))
}

// GenderRemarksHasSuffix applies the HasSuffix predicate on the "genderRemarks" field.
func GenderRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldGenderRemarks, v))
}

// GenderRemarksIsNil applies the IsNil predicate on the "genderRemarks" field.
func GenderRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldGenderRemarks))
}

// GenderRemarksNotNil applies the NotNil predicate on the "genderRemarks" field.
func GenderRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldGenderRemarks))
}

// GenderRemarksEqualFold applies the EqualFold predicate on the "genderRemarks" field.
func GenderRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldGenderRemarks, v))
}

// GenderRemarksContainsFold applies the ContainsFold predicate on the "genderRemarks" field.
func GenderRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldGenderRemarks, v))
}

// MobileNumberEQ applies the EQ predicate on the "MobileNumber" field.
func MobileNumberEQ(v int64) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumber, v))
}

// MobileNumberNEQ applies the NEQ predicate on the "MobileNumber" field.
func MobileNumberNEQ(v int64) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldMobileNumber, v))
}

// MobileNumberIn applies the In predicate on the "MobileNumber" field.
func MobileNumberIn(vs ...int64) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldMobileNumber, vs...))
}

// MobileNumberNotIn applies the NotIn predicate on the "MobileNumber" field.
func MobileNumberNotIn(vs ...int64) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldMobileNumber, vs...))
}

// MobileNumberGT applies the GT predicate on the "MobileNumber" field.
func MobileNumberGT(v int64) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldMobileNumber, v))
}

// MobileNumberGTE applies the GTE predicate on the "MobileNumber" field.
func MobileNumberGTE(v int64) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldMobileNumber, v))
}

// MobileNumberLT applies the LT predicate on the "MobileNumber" field.
func MobileNumberLT(v int64) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldMobileNumber, v))
}

// MobileNumberLTE applies the LTE predicate on the "MobileNumber" field.
func MobileNumberLTE(v int64) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldMobileNumber, v))
}

// MobileNumberIsNil applies the IsNil predicate on the "MobileNumber" field.
func MobileNumberIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldMobileNumber))
}

// MobileNumberNotNil applies the NotNil predicate on the "MobileNumber" field.
func MobileNumberNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldMobileNumber))
}

// MobileNumberVerifiedEQ applies the EQ predicate on the "MobileNumberVerified" field.
func MobileNumberVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumberVerified, v))
}

// MobileNumberVerifiedNEQ applies the NEQ predicate on the "MobileNumberVerified" field.
func MobileNumberVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldMobileNumberVerified, v))
}

// MobileNumberRemStatusEQ applies the EQ predicate on the "MobileNumberRemStatus" field.
func MobileNumberRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumberRemStatus, v))
}

// MobileNumberRemStatusNEQ applies the NEQ predicate on the "MobileNumberRemStatus" field.
func MobileNumberRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldMobileNumberRemStatus, v))
}

// MobileNumberRemarksEQ applies the EQ predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksNEQ applies the NEQ predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksIn applies the In predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldMobileNumberRemarks, vs...))
}

// MobileNumberRemarksNotIn applies the NotIn predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldMobileNumberRemarks, vs...))
}

// MobileNumberRemarksGT applies the GT predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksGTE applies the GTE predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksLT applies the LT predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksLTE applies the LTE predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksContains applies the Contains predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksHasPrefix applies the HasPrefix predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksHasSuffix applies the HasSuffix predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksIsNil applies the IsNil predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldMobileNumberRemarks))
}

// MobileNumberRemarksNotNil applies the NotNil predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldMobileNumberRemarks))
}

// MobileNumberRemarksEqualFold applies the EqualFold predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldMobileNumberRemarks, v))
}

// MobileNumberRemarksContainsFold applies the ContainsFold predicate on the "MobileNumberRemarks" field.
func MobileNumberRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldMobileNumberRemarks, v))
}

// EmailIDEQ applies the EQ predicate on the "EmailID" field.
func EmailIDEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailID, v))
}

// EmailIDNEQ applies the NEQ predicate on the "EmailID" field.
func EmailIDNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmailID, v))
}

// EmailIDIn applies the In predicate on the "EmailID" field.
func EmailIDIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmailID, vs...))
}

// EmailIDNotIn applies the NotIn predicate on the "EmailID" field.
func EmailIDNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmailID, vs...))
}

// EmailIDGT applies the GT predicate on the "EmailID" field.
func EmailIDGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmailID, v))
}

// EmailIDGTE applies the GTE predicate on the "EmailID" field.
func EmailIDGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmailID, v))
}

// EmailIDLT applies the LT predicate on the "EmailID" field.
func EmailIDLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmailID, v))
}

// EmailIDLTE applies the LTE predicate on the "EmailID" field.
func EmailIDLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmailID, v))
}

// EmailIDContains applies the Contains predicate on the "EmailID" field.
func EmailIDContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmailID, v))
}

// EmailIDHasPrefix applies the HasPrefix predicate on the "EmailID" field.
func EmailIDHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmailID, v))
}

// EmailIDHasSuffix applies the HasSuffix predicate on the "EmailID" field.
func EmailIDHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmailID, v))
}

// EmailIDIsNil applies the IsNil predicate on the "EmailID" field.
func EmailIDIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldEmailID))
}

// EmailIDNotNil applies the NotNil predicate on the "EmailID" field.
func EmailIDNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldEmailID))
}

// EmailIDEqualFold applies the EqualFold predicate on the "EmailID" field.
func EmailIDEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmailID, v))
}

// EmailIDContainsFold applies the ContainsFold predicate on the "EmailID" field.
func EmailIDContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmailID, v))
}

// EmailIDVerifiedEQ applies the EQ predicate on the "EmailIDVerified" field.
func EmailIDVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailIDVerified, v))
}

// EmailIDVerifiedNEQ applies the NEQ predicate on the "EmailIDVerified" field.
func EmailIDVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmailIDVerified, v))
}

// EmailIDRemStatusEQ applies the EQ predicate on the "EmailIDRemStatus" field.
func EmailIDRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailIDRemStatus, v))
}

// EmailIDRemStatusNEQ applies the NEQ predicate on the "EmailIDRemStatus" field.
func EmailIDRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmailIDRemStatus, v))
}

// EmailIDRemarksEQ applies the EQ predicate on the "EmailIDRemarks" field.
func EmailIDRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmailIDRemarks, v))
}

// EmailIDRemarksNEQ applies the NEQ predicate on the "EmailIDRemarks" field.
func EmailIDRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmailIDRemarks, v))
}

// EmailIDRemarksIn applies the In predicate on the "EmailIDRemarks" field.
func EmailIDRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmailIDRemarks, vs...))
}

// EmailIDRemarksNotIn applies the NotIn predicate on the "EmailIDRemarks" field.
func EmailIDRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmailIDRemarks, vs...))
}

// EmailIDRemarksGT applies the GT predicate on the "EmailIDRemarks" field.
func EmailIDRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmailIDRemarks, v))
}

// EmailIDRemarksGTE applies the GTE predicate on the "EmailIDRemarks" field.
func EmailIDRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmailIDRemarks, v))
}

// EmailIDRemarksLT applies the LT predicate on the "EmailIDRemarks" field.
func EmailIDRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmailIDRemarks, v))
}

// EmailIDRemarksLTE applies the LTE predicate on the "EmailIDRemarks" field.
func EmailIDRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmailIDRemarks, v))
}

// EmailIDRemarksContains applies the Contains predicate on the "EmailIDRemarks" field.
func EmailIDRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmailIDRemarks, v))
}

// EmailIDRemarksHasPrefix applies the HasPrefix predicate on the "EmailIDRemarks" field.
func EmailIDRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmailIDRemarks, v))
}

// EmailIDRemarksHasSuffix applies the HasSuffix predicate on the "EmailIDRemarks" field.
func EmailIDRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmailIDRemarks, v))
}

// EmailIDRemarksIsNil applies the IsNil predicate on the "EmailIDRemarks" field.
func EmailIDRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldEmailIDRemarks))
}

// EmailIDRemarksNotNil applies the NotNil predicate on the "EmailIDRemarks" field.
func EmailIDRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldEmailIDRemarks))
}

// EmailIDRemarksEqualFold applies the EqualFold predicate on the "EmailIDRemarks" field.
func EmailIDRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmailIDRemarks, v))
}

// EmailIDRemarksContainsFold applies the ContainsFold predicate on the "EmailIDRemarks" field.
func EmailIDRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmailIDRemarks, v))
}

// CategoryidEQ applies the EQ predicate on the "Categoryid" field.
func CategoryidEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCategoryid, v))
}

// CategoryidNEQ applies the NEQ predicate on the "Categoryid" field.
func CategoryidNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldCategoryid, v))
}

// CategoryidIn applies the In predicate on the "Categoryid" field.
func CategoryidIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldCategoryid, vs...))
}

// CategoryidNotIn applies the NotIn predicate on the "Categoryid" field.
func CategoryidNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldCategoryid, vs...))
}

// CategoryidGT applies the GT predicate on the "Categoryid" field.
func CategoryidGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldCategoryid, v))
}

// CategoryidGTE applies the GTE predicate on the "Categoryid" field.
func CategoryidGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldCategoryid, v))
}

// CategoryidLT applies the LT predicate on the "Categoryid" field.
func CategoryidLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldCategoryid, v))
}

// CategoryidLTE applies the LTE predicate on the "Categoryid" field.
func CategoryidLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldCategoryid, v))
}

// CategoryidIsNil applies the IsNil predicate on the "Categoryid" field.
func CategoryidIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldCategoryid))
}

// CategoryidNotNil applies the NotNil predicate on the "Categoryid" field.
func CategoryidNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldCategoryid))
}

// EmployeeCategoryCodeEQ applies the EQ predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeNEQ applies the NEQ predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeIn applies the In predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeeCategoryCode, vs...))
}

// EmployeeCategoryCodeNotIn applies the NotIn predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeeCategoryCode, vs...))
}

// EmployeeCategoryCodeGT applies the GT predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeGTE applies the GTE predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeLT applies the LT predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeLTE applies the LTE predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeContains applies the Contains predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeHasPrefix applies the HasPrefix predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeHasSuffix applies the HasSuffix predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeIsNil applies the IsNil predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldEmployeeCategoryCode))
}

// EmployeeCategoryCodeNotNil applies the NotNil predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldEmployeeCategoryCode))
}

// EmployeeCategoryCodeEqualFold applies the EqualFold predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryCodeContainsFold applies the ContainsFold predicate on the "EmployeeCategoryCode" field.
func EmployeeCategoryCodeContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeeCategoryCode, v))
}

// EmployeeCategoryEQ applies the EQ predicate on the "EmployeeCategory" field.
func EmployeeCategoryEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategory, v))
}

// EmployeeCategoryNEQ applies the NEQ predicate on the "EmployeeCategory" field.
func EmployeeCategoryNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeCategory, v))
}

// EmployeeCategoryIn applies the In predicate on the "EmployeeCategory" field.
func EmployeeCategoryIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeeCategory, vs...))
}

// EmployeeCategoryNotIn applies the NotIn predicate on the "EmployeeCategory" field.
func EmployeeCategoryNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeeCategory, vs...))
}

// EmployeeCategoryGT applies the GT predicate on the "EmployeeCategory" field.
func EmployeeCategoryGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeeCategory, v))
}

// EmployeeCategoryGTE applies the GTE predicate on the "EmployeeCategory" field.
func EmployeeCategoryGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeeCategory, v))
}

// EmployeeCategoryLT applies the LT predicate on the "EmployeeCategory" field.
func EmployeeCategoryLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeeCategory, v))
}

// EmployeeCategoryLTE applies the LTE predicate on the "EmployeeCategory" field.
func EmployeeCategoryLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeeCategory, v))
}

// EmployeeCategoryContains applies the Contains predicate on the "EmployeeCategory" field.
func EmployeeCategoryContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeeCategory, v))
}

// EmployeeCategoryHasPrefix applies the HasPrefix predicate on the "EmployeeCategory" field.
func EmployeeCategoryHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeeCategory, v))
}

// EmployeeCategoryHasSuffix applies the HasSuffix predicate on the "EmployeeCategory" field.
func EmployeeCategoryHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeeCategory, v))
}

// EmployeeCategoryEqualFold applies the EqualFold predicate on the "EmployeeCategory" field.
func EmployeeCategoryEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeeCategory, v))
}

// EmployeeCategoryContainsFold applies the ContainsFold predicate on the "EmployeeCategory" field.
func EmployeeCategoryContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeeCategory, v))
}

// EmployeeCategoryCodeVerifiedEQ applies the EQ predicate on the "EmployeeCategoryCodeVerified" field.
func EmployeeCategoryCodeVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCodeVerified, v))
}

// EmployeeCategoryCodeVerifiedNEQ applies the NEQ predicate on the "EmployeeCategoryCodeVerified" field.
func EmployeeCategoryCodeVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeCategoryCodeVerified, v))
}

// EmployeeCategoryCodeRemStatusEQ applies the EQ predicate on the "EmployeeCategoryCodeRemStatus" field.
func EmployeeCategoryCodeRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCodeRemStatus, v))
}

// EmployeeCategoryCodeRemStatusNEQ applies the NEQ predicate on the "EmployeeCategoryCodeRemStatus" field.
func EmployeeCategoryCodeRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeCategoryCodeRemStatus, v))
}

// EmployeeCategoryCodeRemarksEQ applies the EQ predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksNEQ applies the NEQ predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksIn applies the In predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeeCategoryCodeRemarks, vs...))
}

// EmployeeCategoryCodeRemarksNotIn applies the NotIn predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeeCategoryCodeRemarks, vs...))
}

// EmployeeCategoryCodeRemarksGT applies the GT predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksGTE applies the GTE predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksLT applies the LT predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksLTE applies the LTE predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksContains applies the Contains predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksHasPrefix applies the HasPrefix predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksHasSuffix applies the HasSuffix predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksIsNil applies the IsNil predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldEmployeeCategoryCodeRemarks))
}

// EmployeeCategoryCodeRemarksNotNil applies the NotNil predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldEmployeeCategoryCodeRemarks))
}

// EmployeeCategoryCodeRemarksEqualFold applies the EqualFold predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeeCategoryCodeRemarks, v))
}

// EmployeeCategoryCodeRemarksContainsFold applies the ContainsFold predicate on the "EmployeeCategoryCodeRemarks" field.
func EmployeeCategoryCodeRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeeCategoryCodeRemarks, v))
}

// WithDisabilityEQ applies the EQ predicate on the "WithDisability" field.
func WithDisabilityEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisability, v))
}

// WithDisabilityNEQ applies the NEQ predicate on the "WithDisability" field.
func WithDisabilityNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldWithDisability, v))
}

// WithDisabilityIn applies the In predicate on the "WithDisability" field.
func WithDisabilityIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldWithDisability, vs...))
}

// WithDisabilityNotIn applies the NotIn predicate on the "WithDisability" field.
func WithDisabilityNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldWithDisability, vs...))
}

// WithDisabilityGT applies the GT predicate on the "WithDisability" field.
func WithDisabilityGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldWithDisability, v))
}

// WithDisabilityGTE applies the GTE predicate on the "WithDisability" field.
func WithDisabilityGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldWithDisability, v))
}

// WithDisabilityLT applies the LT predicate on the "WithDisability" field.
func WithDisabilityLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldWithDisability, v))
}

// WithDisabilityLTE applies the LTE predicate on the "WithDisability" field.
func WithDisabilityLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldWithDisability, v))
}

// WithDisabilityContains applies the Contains predicate on the "WithDisability" field.
func WithDisabilityContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldWithDisability, v))
}

// WithDisabilityHasPrefix applies the HasPrefix predicate on the "WithDisability" field.
func WithDisabilityHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldWithDisability, v))
}

// WithDisabilityHasSuffix applies the HasSuffix predicate on the "WithDisability" field.
func WithDisabilityHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldWithDisability, v))
}

// WithDisabilityEqualFold applies the EqualFold predicate on the "WithDisability" field.
func WithDisabilityEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldWithDisability, v))
}

// WithDisabilityContainsFold applies the ContainsFold predicate on the "WithDisability" field.
func WithDisabilityContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldWithDisability, v))
}

// WithDisabilityVerifiedEQ applies the EQ predicate on the "WithDisabilityVerified" field.
func WithDisabilityVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisabilityVerified, v))
}

// WithDisabilityVerifiedNEQ applies the NEQ predicate on the "WithDisabilityVerified" field.
func WithDisabilityVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldWithDisabilityVerified, v))
}

// WithDisabilityRemStatusEQ applies the EQ predicate on the "WithDisabilityRemStatus" field.
func WithDisabilityRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisabilityRemStatus, v))
}

// WithDisabilityRemStatusNEQ applies the NEQ predicate on the "WithDisabilityRemStatus" field.
func WithDisabilityRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldWithDisabilityRemStatus, v))
}

// WithDisabilityRemarksEQ applies the EQ predicate on the "WithDisabilityRemarks" field.
func WithDisabilityRemarksEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldWithDisabilityRemarks, v))
}

// WithDisabilityRemarksNEQ applies the NEQ predicate on the "WithDisabilityRemarks" field.
func WithDisabilityRemarksNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldWithDisabilityRemarks, v))
}

// WithDisabilityRemarksIsNil applies the IsNil predicate on the "WithDisabilityRemarks" field.
func WithDisabilityRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldWithDisabilityRemarks))
}

// WithDisabilityRemarksNotNil applies the NotNil predicate on the "WithDisabilityRemarks" field.
func WithDisabilityRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldWithDisabilityRemarks))
}

// DisabilityTypeEQ applies the EQ predicate on the "DisabilityType" field.
func DisabilityTypeEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityType, v))
}

// DisabilityTypeNEQ applies the NEQ predicate on the "DisabilityType" field.
func DisabilityTypeNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityType, v))
}

// DisabilityTypeIn applies the In predicate on the "DisabilityType" field.
func DisabilityTypeIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDisabilityType, vs...))
}

// DisabilityTypeNotIn applies the NotIn predicate on the "DisabilityType" field.
func DisabilityTypeNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDisabilityType, vs...))
}

// DisabilityTypeGT applies the GT predicate on the "DisabilityType" field.
func DisabilityTypeGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDisabilityType, v))
}

// DisabilityTypeGTE applies the GTE predicate on the "DisabilityType" field.
func DisabilityTypeGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDisabilityType, v))
}

// DisabilityTypeLT applies the LT predicate on the "DisabilityType" field.
func DisabilityTypeLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDisabilityType, v))
}

// DisabilityTypeLTE applies the LTE predicate on the "DisabilityType" field.
func DisabilityTypeLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDisabilityType, v))
}

// DisabilityTypeContains applies the Contains predicate on the "DisabilityType" field.
func DisabilityTypeContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDisabilityType, v))
}

// DisabilityTypeHasPrefix applies the HasPrefix predicate on the "DisabilityType" field.
func DisabilityTypeHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDisabilityType, v))
}

// DisabilityTypeHasSuffix applies the HasSuffix predicate on the "DisabilityType" field.
func DisabilityTypeHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDisabilityType, v))
}

// DisabilityTypeIsNil applies the IsNil predicate on the "DisabilityType" field.
func DisabilityTypeIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDisabilityType))
}

// DisabilityTypeNotNil applies the NotNil predicate on the "DisabilityType" field.
func DisabilityTypeNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDisabilityType))
}

// DisabilityTypeEqualFold applies the EqualFold predicate on the "DisabilityType" field.
func DisabilityTypeEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDisabilityType, v))
}

// DisabilityTypeContainsFold applies the ContainsFold predicate on the "DisabilityType" field.
func DisabilityTypeContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDisabilityType, v))
}

// DisabilityTypeVerifiedEQ applies the EQ predicate on the "DisabilityTypeVerified" field.
func DisabilityTypeVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityTypeVerified, v))
}

// DisabilityTypeVerifiedNEQ applies the NEQ predicate on the "DisabilityTypeVerified" field.
func DisabilityTypeVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityTypeVerified, v))
}

// DisabilityTypeRemStatusEQ applies the EQ predicate on the "DisabilityTypeRemStatus" field.
func DisabilityTypeRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityTypeRemStatus, v))
}

// DisabilityTypeRemStatusNEQ applies the NEQ predicate on the "DisabilityTypeRemStatus" field.
func DisabilityTypeRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityTypeRemStatus, v))
}

// DisabilityTypeRemarksEQ applies the EQ predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksNEQ applies the NEQ predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksIn applies the In predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDisabilityTypeRemarks, vs...))
}

// DisabilityTypeRemarksNotIn applies the NotIn predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDisabilityTypeRemarks, vs...))
}

// DisabilityTypeRemarksGT applies the GT predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksGTE applies the GTE predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksLT applies the LT predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksLTE applies the LTE predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksContains applies the Contains predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksHasPrefix applies the HasPrefix predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksHasSuffix applies the HasSuffix predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksIsNil applies the IsNil predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDisabilityTypeRemarks))
}

// DisabilityTypeRemarksNotNil applies the NotNil predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDisabilityTypeRemarks))
}

// DisabilityTypeRemarksEqualFold applies the EqualFold predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDisabilityTypeRemarks, v))
}

// DisabilityTypeRemarksContainsFold applies the ContainsFold predicate on the "DisabilityTypeRemarks" field.
func DisabilityTypeRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDisabilityTypeRemarks, v))
}

// DisabilityPercentageEQ applies the EQ predicate on the "DisabilityPercentage" field.
func DisabilityPercentageEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentage, v))
}

// DisabilityPercentageNEQ applies the NEQ predicate on the "DisabilityPercentage" field.
func DisabilityPercentageNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityPercentage, v))
}

// DisabilityPercentageIn applies the In predicate on the "DisabilityPercentage" field.
func DisabilityPercentageIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDisabilityPercentage, vs...))
}

// DisabilityPercentageNotIn applies the NotIn predicate on the "DisabilityPercentage" field.
func DisabilityPercentageNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDisabilityPercentage, vs...))
}

// DisabilityPercentageGT applies the GT predicate on the "DisabilityPercentage" field.
func DisabilityPercentageGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDisabilityPercentage, v))
}

// DisabilityPercentageGTE applies the GTE predicate on the "DisabilityPercentage" field.
func DisabilityPercentageGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDisabilityPercentage, v))
}

// DisabilityPercentageLT applies the LT predicate on the "DisabilityPercentage" field.
func DisabilityPercentageLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDisabilityPercentage, v))
}

// DisabilityPercentageLTE applies the LTE predicate on the "DisabilityPercentage" field.
func DisabilityPercentageLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDisabilityPercentage, v))
}

// DisabilityPercentageIsNil applies the IsNil predicate on the "DisabilityPercentage" field.
func DisabilityPercentageIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDisabilityPercentage))
}

// DisabilityPercentageNotNil applies the NotNil predicate on the "DisabilityPercentage" field.
func DisabilityPercentageNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDisabilityPercentage))
}

// DisabilityPercentageVerifiedEQ applies the EQ predicate on the "DisabilityPercentageVerified" field.
func DisabilityPercentageVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentageVerified, v))
}

// DisabilityPercentageVerifiedNEQ applies the NEQ predicate on the "DisabilityPercentageVerified" field.
func DisabilityPercentageVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityPercentageVerified, v))
}

// DisabilityPercentageRemStatusEQ applies the EQ predicate on the "DisabilityPercentageRemStatus" field.
func DisabilityPercentageRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentageRemStatus, v))
}

// DisabilityPercentageRemStatusNEQ applies the NEQ predicate on the "DisabilityPercentageRemStatus" field.
func DisabilityPercentageRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityPercentageRemStatus, v))
}

// DisabilityPercentageRemarksEQ applies the EQ predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksNEQ applies the NEQ predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksIn applies the In predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDisabilityPercentageRemarks, vs...))
}

// DisabilityPercentageRemarksNotIn applies the NotIn predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDisabilityPercentageRemarks, vs...))
}

// DisabilityPercentageRemarksGT applies the GT predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksGTE applies the GTE predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksLT applies the LT predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksLTE applies the LTE predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksContains applies the Contains predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksHasPrefix applies the HasPrefix predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksHasSuffix applies the HasSuffix predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksIsNil applies the IsNil predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDisabilityPercentageRemarks))
}

// DisabilityPercentageRemarksNotNil applies the NotNil predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDisabilityPercentageRemarks))
}

// DisabilityPercentageRemarksEqualFold applies the EqualFold predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDisabilityPercentageRemarks, v))
}

// DisabilityPercentageRemarksContainsFold applies the ContainsFold predicate on the "DisabilityPercentageRemarks" field.
func DisabilityPercentageRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDisabilityPercentageRemarks, v))
}

// SignatureEQ applies the EQ predicate on the "Signature" field.
func SignatureEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignature, v))
}

// SignatureNEQ applies the NEQ predicate on the "Signature" field.
func SignatureNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldSignature, v))
}

// SignatureIn applies the In predicate on the "Signature" field.
func SignatureIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldSignature, vs...))
}

// SignatureNotIn applies the NotIn predicate on the "Signature" field.
func SignatureNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldSignature, vs...))
}

// SignatureGT applies the GT predicate on the "Signature" field.
func SignatureGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldSignature, v))
}

// SignatureGTE applies the GTE predicate on the "Signature" field.
func SignatureGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldSignature, v))
}

// SignatureLT applies the LT predicate on the "Signature" field.
func SignatureLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldSignature, v))
}

// SignatureLTE applies the LTE predicate on the "Signature" field.
func SignatureLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldSignature, v))
}

// SignatureContains applies the Contains predicate on the "Signature" field.
func SignatureContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldSignature, v))
}

// SignatureHasPrefix applies the HasPrefix predicate on the "Signature" field.
func SignatureHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldSignature, v))
}

// SignatureHasSuffix applies the HasSuffix predicate on the "Signature" field.
func SignatureHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldSignature, v))
}

// SignatureEqualFold applies the EqualFold predicate on the "Signature" field.
func SignatureEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldSignature, v))
}

// SignatureContainsFold applies the ContainsFold predicate on the "Signature" field.
func SignatureContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldSignature, v))
}

// SignatureVerifiedEQ applies the EQ predicate on the "SignatureVerified" field.
func SignatureVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignatureVerified, v))
}

// SignatureVerifiedNEQ applies the NEQ predicate on the "SignatureVerified" field.
func SignatureVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldSignatureVerified, v))
}

// SignatureRemStatusEQ applies the EQ predicate on the "SignatureRemStatus" field.
func SignatureRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignatureRemStatus, v))
}

// SignatureRemStatusNEQ applies the NEQ predicate on the "SignatureRemStatus" field.
func SignatureRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldSignatureRemStatus, v))
}

// SignatureRemarksEQ applies the EQ predicate on the "SignatureRemarks" field.
func SignatureRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldSignatureRemarks, v))
}

// SignatureRemarksNEQ applies the NEQ predicate on the "SignatureRemarks" field.
func SignatureRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldSignatureRemarks, v))
}

// SignatureRemarksIn applies the In predicate on the "SignatureRemarks" field.
func SignatureRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldSignatureRemarks, vs...))
}

// SignatureRemarksNotIn applies the NotIn predicate on the "SignatureRemarks" field.
func SignatureRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldSignatureRemarks, vs...))
}

// SignatureRemarksGT applies the GT predicate on the "SignatureRemarks" field.
func SignatureRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldSignatureRemarks, v))
}

// SignatureRemarksGTE applies the GTE predicate on the "SignatureRemarks" field.
func SignatureRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldSignatureRemarks, v))
}

// SignatureRemarksLT applies the LT predicate on the "SignatureRemarks" field.
func SignatureRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldSignatureRemarks, v))
}

// SignatureRemarksLTE applies the LTE predicate on the "SignatureRemarks" field.
func SignatureRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldSignatureRemarks, v))
}

// SignatureRemarksContains applies the Contains predicate on the "SignatureRemarks" field.
func SignatureRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldSignatureRemarks, v))
}

// SignatureRemarksHasPrefix applies the HasPrefix predicate on the "SignatureRemarks" field.
func SignatureRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldSignatureRemarks, v))
}

// SignatureRemarksHasSuffix applies the HasSuffix predicate on the "SignatureRemarks" field.
func SignatureRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldSignatureRemarks, v))
}

// SignatureRemarksIsNil applies the IsNil predicate on the "SignatureRemarks" field.
func SignatureRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldSignatureRemarks))
}

// SignatureRemarksNotNil applies the NotNil predicate on the "SignatureRemarks" field.
func SignatureRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldSignatureRemarks))
}

// SignatureRemarksEqualFold applies the EqualFold predicate on the "SignatureRemarks" field.
func SignatureRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldSignatureRemarks, v))
}

// SignatureRemarksContainsFold applies the ContainsFold predicate on the "SignatureRemarks" field.
func SignatureRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldSignatureRemarks, v))
}

// PhotoEQ applies the EQ predicate on the "Photo" field.
func PhotoEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhoto, v))
}

// PhotoNEQ applies the NEQ predicate on the "Photo" field.
func PhotoNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldPhoto, v))
}

// PhotoIn applies the In predicate on the "Photo" field.
func PhotoIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldPhoto, vs...))
}

// PhotoNotIn applies the NotIn predicate on the "Photo" field.
func PhotoNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldPhoto, vs...))
}

// PhotoGT applies the GT predicate on the "Photo" field.
func PhotoGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldPhoto, v))
}

// PhotoGTE applies the GTE predicate on the "Photo" field.
func PhotoGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldPhoto, v))
}

// PhotoLT applies the LT predicate on the "Photo" field.
func PhotoLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldPhoto, v))
}

// PhotoLTE applies the LTE predicate on the "Photo" field.
func PhotoLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldPhoto, v))
}

// PhotoContains applies the Contains predicate on the "Photo" field.
func PhotoContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldPhoto, v))
}

// PhotoHasPrefix applies the HasPrefix predicate on the "Photo" field.
func PhotoHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldPhoto, v))
}

// PhotoHasSuffix applies the HasSuffix predicate on the "Photo" field.
func PhotoHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldPhoto, v))
}

// PhotoEqualFold applies the EqualFold predicate on the "Photo" field.
func PhotoEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldPhoto, v))
}

// PhotoContainsFold applies the ContainsFold predicate on the "Photo" field.
func PhotoContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldPhoto, v))
}

// PhotoVerifiedEQ applies the EQ predicate on the "PhotoVerified" field.
func PhotoVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhotoVerified, v))
}

// PhotoVerifiedNEQ applies the NEQ predicate on the "PhotoVerified" field.
func PhotoVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldPhotoVerified, v))
}

// PhotoRemStatusEQ applies the EQ predicate on the "PhotoRemStatus" field.
func PhotoRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhotoRemStatus, v))
}

// PhotoRemStatusNEQ applies the NEQ predicate on the "PhotoRemStatus" field.
func PhotoRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldPhotoRemStatus, v))
}

// PhotoRemarksEQ applies the EQ predicate on the "PhotoRemarks" field.
func PhotoRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPhotoRemarks, v))
}

// PhotoRemarksNEQ applies the NEQ predicate on the "PhotoRemarks" field.
func PhotoRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldPhotoRemarks, v))
}

// PhotoRemarksIn applies the In predicate on the "PhotoRemarks" field.
func PhotoRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldPhotoRemarks, vs...))
}

// PhotoRemarksNotIn applies the NotIn predicate on the "PhotoRemarks" field.
func PhotoRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldPhotoRemarks, vs...))
}

// PhotoRemarksGT applies the GT predicate on the "PhotoRemarks" field.
func PhotoRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldPhotoRemarks, v))
}

// PhotoRemarksGTE applies the GTE predicate on the "PhotoRemarks" field.
func PhotoRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldPhotoRemarks, v))
}

// PhotoRemarksLT applies the LT predicate on the "PhotoRemarks" field.
func PhotoRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldPhotoRemarks, v))
}

// PhotoRemarksLTE applies the LTE predicate on the "PhotoRemarks" field.
func PhotoRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldPhotoRemarks, v))
}

// PhotoRemarksContains applies the Contains predicate on the "PhotoRemarks" field.
func PhotoRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldPhotoRemarks, v))
}

// PhotoRemarksHasPrefix applies the HasPrefix predicate on the "PhotoRemarks" field.
func PhotoRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldPhotoRemarks, v))
}

// PhotoRemarksHasSuffix applies the HasSuffix predicate on the "PhotoRemarks" field.
func PhotoRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldPhotoRemarks, v))
}

// PhotoRemarksIsNil applies the IsNil predicate on the "PhotoRemarks" field.
func PhotoRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldPhotoRemarks))
}

// PhotoRemarksNotNil applies the NotNil predicate on the "PhotoRemarks" field.
func PhotoRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldPhotoRemarks))
}

// PhotoRemarksEqualFold applies the EqualFold predicate on the "PhotoRemarks" field.
func PhotoRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldPhotoRemarks, v))
}

// PhotoRemarksContainsFold applies the ContainsFold predicate on the "PhotoRemarks" field.
func PhotoRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldPhotoRemarks, v))
}

// PostIDEQ applies the EQ predicate on the "PostID" field.
func PostIDEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPostID, v))
}

// PostIDNEQ applies the NEQ predicate on the "PostID" field.
func PostIDNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldPostID, v))
}

// PostIDIn applies the In predicate on the "PostID" field.
func PostIDIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldPostID, vs...))
}

// PostIDNotIn applies the NotIn predicate on the "PostID" field.
func PostIDNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldPostID, vs...))
}

// PostIDGT applies the GT predicate on the "PostID" field.
func PostIDGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldPostID, v))
}

// PostIDGTE applies the GTE predicate on the "PostID" field.
func PostIDGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldPostID, v))
}

// PostIDLT applies the LT predicate on the "PostID" field.
func PostIDLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldPostID, v))
}

// PostIDLTE applies the LTE predicate on the "PostID" field.
func PostIDLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldPostID, v))
}

// PostIDIsNil applies the IsNil predicate on the "PostID" field.
func PostIDIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldPostID))
}

// PostIDNotNil applies the NotNil predicate on the "PostID" field.
func PostIDNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldPostID))
}

// PostCodeEQ applies the EQ predicate on the "PostCode" field.
func PostCodeEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldPostCode, v))
}

// PostCodeNEQ applies the NEQ predicate on the "PostCode" field.
func PostCodeNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldPostCode, v))
}

// PostCodeIn applies the In predicate on the "PostCode" field.
func PostCodeIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldPostCode, vs...))
}

// PostCodeNotIn applies the NotIn predicate on the "PostCode" field.
func PostCodeNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldPostCode, vs...))
}

// PostCodeGT applies the GT predicate on the "PostCode" field.
func PostCodeGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldPostCode, v))
}

// PostCodeGTE applies the GTE predicate on the "PostCode" field.
func PostCodeGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldPostCode, v))
}

// PostCodeLT applies the LT predicate on the "PostCode" field.
func PostCodeLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldPostCode, v))
}

// PostCodeLTE applies the LTE predicate on the "PostCode" field.
func PostCodeLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldPostCode, v))
}

// PostCodeContains applies the Contains predicate on the "PostCode" field.
func PostCodeContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldPostCode, v))
}

// PostCodeHasPrefix applies the HasPrefix predicate on the "PostCode" field.
func PostCodeHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldPostCode, v))
}

// PostCodeHasSuffix applies the HasSuffix predicate on the "PostCode" field.
func PostCodeHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldPostCode, v))
}

// PostCodeIsNil applies the IsNil predicate on the "PostCode" field.
func PostCodeIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldPostCode))
}

// PostCodeNotNil applies the NotNil predicate on the "PostCode" field.
func PostCodeNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldPostCode))
}

// PostCodeEqualFold applies the EqualFold predicate on the "PostCode" field.
func PostCodeEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldPostCode, v))
}

// PostCodeContainsFold applies the ContainsFold predicate on the "PostCode" field.
func PostCodeContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldPostCode, v))
}

// EmployeePostEQ applies the EQ predicate on the "EmployeePost" field.
func EmployeePostEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePost, v))
}

// EmployeePostNEQ applies the NEQ predicate on the "EmployeePost" field.
func EmployeePostNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeePost, v))
}

// EmployeePostIn applies the In predicate on the "EmployeePost" field.
func EmployeePostIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeePost, vs...))
}

// EmployeePostNotIn applies the NotIn predicate on the "EmployeePost" field.
func EmployeePostNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeePost, vs...))
}

// EmployeePostGT applies the GT predicate on the "EmployeePost" field.
func EmployeePostGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeePost, v))
}

// EmployeePostGTE applies the GTE predicate on the "EmployeePost" field.
func EmployeePostGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeePost, v))
}

// EmployeePostLT applies the LT predicate on the "EmployeePost" field.
func EmployeePostLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeePost, v))
}

// EmployeePostLTE applies the LTE predicate on the "EmployeePost" field.
func EmployeePostLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeePost, v))
}

// EmployeePostContains applies the Contains predicate on the "EmployeePost" field.
func EmployeePostContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeePost, v))
}

// EmployeePostHasPrefix applies the HasPrefix predicate on the "EmployeePost" field.
func EmployeePostHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeePost, v))
}

// EmployeePostHasSuffix applies the HasSuffix predicate on the "EmployeePost" field.
func EmployeePostHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeePost, v))
}

// EmployeePostEqualFold applies the EqualFold predicate on the "EmployeePost" field.
func EmployeePostEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeePost, v))
}

// EmployeePostContainsFold applies the ContainsFold predicate on the "EmployeePost" field.
func EmployeePostContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeePost, v))
}

// EmployeePostVerifiedEQ applies the EQ predicate on the "EmployeePostVerified" field.
func EmployeePostVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePostVerified, v))
}

// EmployeePostVerifiedNEQ applies the NEQ predicate on the "EmployeePostVerified" field.
func EmployeePostVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeePostVerified, v))
}

// EmployeePostRemStatusEQ applies the EQ predicate on the "EmployeePostRemStatus" field.
func EmployeePostRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePostRemStatus, v))
}

// EmployeePostRemStatusNEQ applies the NEQ predicate on the "EmployeePostRemStatus" field.
func EmployeePostRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeePostRemStatus, v))
}

// EmployeePostRemarksEQ applies the EQ predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksNEQ applies the NEQ predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksIn applies the In predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeePostRemarks, vs...))
}

// EmployeePostRemarksNotIn applies the NotIn predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeePostRemarks, vs...))
}

// EmployeePostRemarksGT applies the GT predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksGTE applies the GTE predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksLT applies the LT predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksLTE applies the LTE predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksContains applies the Contains predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksHasPrefix applies the HasPrefix predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksHasSuffix applies the HasSuffix predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksIsNil applies the IsNil predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldEmployeePostRemarks))
}

// EmployeePostRemarksNotNil applies the NotNil predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldEmployeePostRemarks))
}

// EmployeePostRemarksEqualFold applies the EqualFold predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeePostRemarks, v))
}

// EmployeePostRemarksContainsFold applies the ContainsFold predicate on the "EmployeePostRemarks" field.
func EmployeePostRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeePostRemarks, v))
}

// DesignationIDEQ applies the EQ predicate on the "DesignationID" field.
func DesignationIDEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDesignationID, v))
}

// DesignationIDNEQ applies the NEQ predicate on the "DesignationID" field.
func DesignationIDNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDesignationID, v))
}

// DesignationIDIn applies the In predicate on the "DesignationID" field.
func DesignationIDIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDesignationID, vs...))
}

// DesignationIDNotIn applies the NotIn predicate on the "DesignationID" field.
func DesignationIDNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDesignationID, vs...))
}

// DesignationIDGT applies the GT predicate on the "DesignationID" field.
func DesignationIDGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDesignationID, v))
}

// DesignationIDGTE applies the GTE predicate on the "DesignationID" field.
func DesignationIDGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDesignationID, v))
}

// DesignationIDLT applies the LT predicate on the "DesignationID" field.
func DesignationIDLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDesignationID, v))
}

// DesignationIDLTE applies the LTE predicate on the "DesignationID" field.
func DesignationIDLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDesignationID, v))
}

// DesignationIDIsNil applies the IsNil predicate on the "DesignationID" field.
func DesignationIDIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDesignationID))
}

// DesignationIDNotNil applies the NotNil predicate on the "DesignationID" field.
func DesignationIDNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDesignationID))
}

// EmployeeDesignationEQ applies the EQ predicate on the "EmployeeDesignation" field.
func EmployeeDesignationEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignation, v))
}

// EmployeeDesignationNEQ applies the NEQ predicate on the "EmployeeDesignation" field.
func EmployeeDesignationNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeDesignation, v))
}

// EmployeeDesignationIn applies the In predicate on the "EmployeeDesignation" field.
func EmployeeDesignationIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeeDesignation, vs...))
}

// EmployeeDesignationNotIn applies the NotIn predicate on the "EmployeeDesignation" field.
func EmployeeDesignationNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeeDesignation, vs...))
}

// EmployeeDesignationGT applies the GT predicate on the "EmployeeDesignation" field.
func EmployeeDesignationGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeeDesignation, v))
}

// EmployeeDesignationGTE applies the GTE predicate on the "EmployeeDesignation" field.
func EmployeeDesignationGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeeDesignation, v))
}

// EmployeeDesignationLT applies the LT predicate on the "EmployeeDesignation" field.
func EmployeeDesignationLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeeDesignation, v))
}

// EmployeeDesignationLTE applies the LTE predicate on the "EmployeeDesignation" field.
func EmployeeDesignationLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeeDesignation, v))
}

// EmployeeDesignationContains applies the Contains predicate on the "EmployeeDesignation" field.
func EmployeeDesignationContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeeDesignation, v))
}

// EmployeeDesignationHasPrefix applies the HasPrefix predicate on the "EmployeeDesignation" field.
func EmployeeDesignationHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeeDesignation, v))
}

// EmployeeDesignationHasSuffix applies the HasSuffix predicate on the "EmployeeDesignation" field.
func EmployeeDesignationHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeeDesignation, v))
}

// EmployeeDesignationEqualFold applies the EqualFold predicate on the "EmployeeDesignation" field.
func EmployeeDesignationEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeeDesignation, v))
}

// EmployeeDesignationContainsFold applies the ContainsFold predicate on the "EmployeeDesignation" field.
func EmployeeDesignationContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeeDesignation, v))
}

// EmployeeDesignationVerifiedEQ applies the EQ predicate on the "EmployeeDesignationVerified" field.
func EmployeeDesignationVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignationVerified, v))
}

// EmployeeDesignationVerifiedNEQ applies the NEQ predicate on the "EmployeeDesignationVerified" field.
func EmployeeDesignationVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeDesignationVerified, v))
}

// EmployeeDesignationRemStatusEQ applies the EQ predicate on the "EmployeeDesignationRemStatus" field.
func EmployeeDesignationRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignationRemStatus, v))
}

// EmployeeDesignationRemStatusNEQ applies the NEQ predicate on the "EmployeeDesignationRemStatus" field.
func EmployeeDesignationRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeDesignationRemStatus, v))
}

// EmployeeDesignationRemarksEQ applies the EQ predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksNEQ applies the NEQ predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksIn applies the In predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldEmployeeDesignationRemarks, vs...))
}

// EmployeeDesignationRemarksNotIn applies the NotIn predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldEmployeeDesignationRemarks, vs...))
}

// EmployeeDesignationRemarksGT applies the GT predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksGTE applies the GTE predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksLT applies the LT predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksLTE applies the LTE predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksContains applies the Contains predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksHasPrefix applies the HasPrefix predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksHasSuffix applies the HasSuffix predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksIsNil applies the IsNil predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldEmployeeDesignationRemarks))
}

// EmployeeDesignationRemarksNotNil applies the NotNil predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldEmployeeDesignationRemarks))
}

// EmployeeDesignationRemarksEqualFold applies the EqualFold predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldEmployeeDesignationRemarks, v))
}

// EmployeeDesignationRemarksContainsFold applies the ContainsFold predicate on the "EmployeeDesignationRemarks" field.
func EmployeeDesignationRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldEmployeeDesignationRemarks, v))
}

// CircleIDEQ applies the EQ predicate on the "CircleID" field.
func CircleIDEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleID, v))
}

// CircleIDNEQ applies the NEQ predicate on the "CircleID" field.
func CircleIDNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldCircleID, v))
}

// CircleIDIn applies the In predicate on the "CircleID" field.
func CircleIDIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldCircleID, vs...))
}

// CircleIDNotIn applies the NotIn predicate on the "CircleID" field.
func CircleIDNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldCircleID, vs...))
}

// CircleIDGT applies the GT predicate on the "CircleID" field.
func CircleIDGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldCircleID, v))
}

// CircleIDGTE applies the GTE predicate on the "CircleID" field.
func CircleIDGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldCircleID, v))
}

// CircleIDLT applies the LT predicate on the "CircleID" field.
func CircleIDLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldCircleID, v))
}

// CircleIDLTE applies the LTE predicate on the "CircleID" field.
func CircleIDLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldCircleID, v))
}

// CircleIDIsNil applies the IsNil predicate on the "CircleID" field.
func CircleIDIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldCircleID))
}

// CircleIDNotNil applies the NotNil predicate on the "CircleID" field.
func CircleIDNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldCircleID))
}

// CircleNameEQ applies the EQ predicate on the "CircleName" field.
func CircleNameEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleName, v))
}

// CircleNameNEQ applies the NEQ predicate on the "CircleName" field.
func CircleNameNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldCircleName, v))
}

// CircleNameIn applies the In predicate on the "CircleName" field.
func CircleNameIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldCircleName, vs...))
}

// CircleNameNotIn applies the NotIn predicate on the "CircleName" field.
func CircleNameNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldCircleName, vs...))
}

// CircleNameGT applies the GT predicate on the "CircleName" field.
func CircleNameGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldCircleName, v))
}

// CircleNameGTE applies the GTE predicate on the "CircleName" field.
func CircleNameGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldCircleName, v))
}

// CircleNameLT applies the LT predicate on the "CircleName" field.
func CircleNameLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldCircleName, v))
}

// CircleNameLTE applies the LTE predicate on the "CircleName" field.
func CircleNameLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldCircleName, v))
}

// CircleNameContains applies the Contains predicate on the "CircleName" field.
func CircleNameContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldCircleName, v))
}

// CircleNameHasPrefix applies the HasPrefix predicate on the "CircleName" field.
func CircleNameHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldCircleName, v))
}

// CircleNameHasSuffix applies the HasSuffix predicate on the "CircleName" field.
func CircleNameHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldCircleName, v))
}

// CircleNameEqualFold applies the EqualFold predicate on the "CircleName" field.
func CircleNameEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldCircleName, v))
}

// CircleNameContainsFold applies the ContainsFold predicate on the "CircleName" field.
func CircleNameContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldCircleName, v))
}

// CircleVerifiedEQ applies the EQ predicate on the "CircleVerified" field.
func CircleVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleVerified, v))
}

// CircleVerifiedNEQ applies the NEQ predicate on the "CircleVerified" field.
func CircleVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldCircleVerified, v))
}

// CircleRemStatusEQ applies the EQ predicate on the "CircleRemStatus" field.
func CircleRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleRemStatus, v))
}

// CircleRemStatusNEQ applies the NEQ predicate on the "CircleRemStatus" field.
func CircleRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldCircleRemStatus, v))
}

// CircleRemarksEQ applies the EQ predicate on the "CircleRemarks" field.
func CircleRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldCircleRemarks, v))
}

// CircleRemarksNEQ applies the NEQ predicate on the "CircleRemarks" field.
func CircleRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldCircleRemarks, v))
}

// CircleRemarksIn applies the In predicate on the "CircleRemarks" field.
func CircleRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldCircleRemarks, vs...))
}

// CircleRemarksNotIn applies the NotIn predicate on the "CircleRemarks" field.
func CircleRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldCircleRemarks, vs...))
}

// CircleRemarksGT applies the GT predicate on the "CircleRemarks" field.
func CircleRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldCircleRemarks, v))
}

// CircleRemarksGTE applies the GTE predicate on the "CircleRemarks" field.
func CircleRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldCircleRemarks, v))
}

// CircleRemarksLT applies the LT predicate on the "CircleRemarks" field.
func CircleRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldCircleRemarks, v))
}

// CircleRemarksLTE applies the LTE predicate on the "CircleRemarks" field.
func CircleRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldCircleRemarks, v))
}

// CircleRemarksContains applies the Contains predicate on the "CircleRemarks" field.
func CircleRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldCircleRemarks, v))
}

// CircleRemarksHasPrefix applies the HasPrefix predicate on the "CircleRemarks" field.
func CircleRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldCircleRemarks, v))
}

// CircleRemarksHasSuffix applies the HasSuffix predicate on the "CircleRemarks" field.
func CircleRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldCircleRemarks, v))
}

// CircleRemarksIsNil applies the IsNil predicate on the "CircleRemarks" field.
func CircleRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldCircleRemarks))
}

// CircleRemarksNotNil applies the NotNil predicate on the "CircleRemarks" field.
func CircleRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldCircleRemarks))
}

// CircleRemarksEqualFold applies the EqualFold predicate on the "CircleRemarks" field.
func CircleRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldCircleRemarks, v))
}

// CircleRemarksContainsFold applies the ContainsFold predicate on the "CircleRemarks" field.
func CircleRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldCircleRemarks, v))
}

// RegionIDEQ applies the EQ predicate on the "RegionID" field.
func RegionIDEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionID, v))
}

// RegionIDNEQ applies the NEQ predicate on the "RegionID" field.
func RegionIDNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRegionID, v))
}

// RegionIDIn applies the In predicate on the "RegionID" field.
func RegionIDIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldRegionID, vs...))
}

// RegionIDNotIn applies the NotIn predicate on the "RegionID" field.
func RegionIDNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldRegionID, vs...))
}

// RegionIDGT applies the GT predicate on the "RegionID" field.
func RegionIDGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldRegionID, v))
}

// RegionIDGTE applies the GTE predicate on the "RegionID" field.
func RegionIDGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldRegionID, v))
}

// RegionIDLT applies the LT predicate on the "RegionID" field.
func RegionIDLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldRegionID, v))
}

// RegionIDLTE applies the LTE predicate on the "RegionID" field.
func RegionIDLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldRegionID, v))
}

// RegionIDIsNil applies the IsNil predicate on the "RegionID" field.
func RegionIDIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldRegionID))
}

// RegionIDNotNil applies the NotNil predicate on the "RegionID" field.
func RegionIDNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldRegionID))
}

// RegionNameEQ applies the EQ predicate on the "RegionName" field.
func RegionNameEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionName, v))
}

// RegionNameNEQ applies the NEQ predicate on the "RegionName" field.
func RegionNameNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRegionName, v))
}

// RegionNameIn applies the In predicate on the "RegionName" field.
func RegionNameIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldRegionName, vs...))
}

// RegionNameNotIn applies the NotIn predicate on the "RegionName" field.
func RegionNameNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldRegionName, vs...))
}

// RegionNameGT applies the GT predicate on the "RegionName" field.
func RegionNameGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldRegionName, v))
}

// RegionNameGTE applies the GTE predicate on the "RegionName" field.
func RegionNameGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldRegionName, v))
}

// RegionNameLT applies the LT predicate on the "RegionName" field.
func RegionNameLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldRegionName, v))
}

// RegionNameLTE applies the LTE predicate on the "RegionName" field.
func RegionNameLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldRegionName, v))
}

// RegionNameContains applies the Contains predicate on the "RegionName" field.
func RegionNameContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldRegionName, v))
}

// RegionNameHasPrefix applies the HasPrefix predicate on the "RegionName" field.
func RegionNameHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldRegionName, v))
}

// RegionNameHasSuffix applies the HasSuffix predicate on the "RegionName" field.
func RegionNameHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldRegionName, v))
}

// RegionNameIsNil applies the IsNil predicate on the "RegionName" field.
func RegionNameIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldRegionName))
}

// RegionNameNotNil applies the NotNil predicate on the "RegionName" field.
func RegionNameNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldRegionName))
}

// RegionNameEqualFold applies the EqualFold predicate on the "RegionName" field.
func RegionNameEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldRegionName, v))
}

// RegionNameContainsFold applies the ContainsFold predicate on the "RegionName" field.
func RegionNameContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldRegionName, v))
}

// RegionVerifiedEQ applies the EQ predicate on the "RegionVerified" field.
func RegionVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionVerified, v))
}

// RegionVerifiedNEQ applies the NEQ predicate on the "RegionVerified" field.
func RegionVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRegionVerified, v))
}

// RegionRemStatusEQ applies the EQ predicate on the "RegionRemStatus" field.
func RegionRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionRemStatus, v))
}

// RegionRemStatusNEQ applies the NEQ predicate on the "RegionRemStatus" field.
func RegionRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRegionRemStatus, v))
}

// RegionRemarksEQ applies the EQ predicate on the "RegionRemarks" field.
func RegionRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRegionRemarks, v))
}

// RegionRemarksNEQ applies the NEQ predicate on the "RegionRemarks" field.
func RegionRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRegionRemarks, v))
}

// RegionRemarksIn applies the In predicate on the "RegionRemarks" field.
func RegionRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldRegionRemarks, vs...))
}

// RegionRemarksNotIn applies the NotIn predicate on the "RegionRemarks" field.
func RegionRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldRegionRemarks, vs...))
}

// RegionRemarksGT applies the GT predicate on the "RegionRemarks" field.
func RegionRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldRegionRemarks, v))
}

// RegionRemarksGTE applies the GTE predicate on the "RegionRemarks" field.
func RegionRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldRegionRemarks, v))
}

// RegionRemarksLT applies the LT predicate on the "RegionRemarks" field.
func RegionRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldRegionRemarks, v))
}

// RegionRemarksLTE applies the LTE predicate on the "RegionRemarks" field.
func RegionRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldRegionRemarks, v))
}

// RegionRemarksContains applies the Contains predicate on the "RegionRemarks" field.
func RegionRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldRegionRemarks, v))
}

// RegionRemarksHasPrefix applies the HasPrefix predicate on the "RegionRemarks" field.
func RegionRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldRegionRemarks, v))
}

// RegionRemarksHasSuffix applies the HasSuffix predicate on the "RegionRemarks" field.
func RegionRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldRegionRemarks, v))
}

// RegionRemarksIsNil applies the IsNil predicate on the "RegionRemarks" field.
func RegionRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldRegionRemarks))
}

// RegionRemarksNotNil applies the NotNil predicate on the "RegionRemarks" field.
func RegionRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldRegionRemarks))
}

// RegionRemarksEqualFold applies the EqualFold predicate on the "RegionRemarks" field.
func RegionRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldRegionRemarks, v))
}

// RegionRemarksContainsFold applies the ContainsFold predicate on the "RegionRemarks" field.
func RegionRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldRegionRemarks, v))
}

// DivisionIDEQ applies the EQ predicate on the "DivisionID" field.
func DivisionIDEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionID, v))
}

// DivisionIDNEQ applies the NEQ predicate on the "DivisionID" field.
func DivisionIDNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDivisionID, v))
}

// DivisionIDIn applies the In predicate on the "DivisionID" field.
func DivisionIDIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDivisionID, vs...))
}

// DivisionIDNotIn applies the NotIn predicate on the "DivisionID" field.
func DivisionIDNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDivisionID, vs...))
}

// DivisionIDGT applies the GT predicate on the "DivisionID" field.
func DivisionIDGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDivisionID, v))
}

// DivisionIDGTE applies the GTE predicate on the "DivisionID" field.
func DivisionIDGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDivisionID, v))
}

// DivisionIDLT applies the LT predicate on the "DivisionID" field.
func DivisionIDLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDivisionID, v))
}

// DivisionIDLTE applies the LTE predicate on the "DivisionID" field.
func DivisionIDLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDivisionID, v))
}

// DivisionIDIsNil applies the IsNil predicate on the "DivisionID" field.
func DivisionIDIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDivisionID))
}

// DivisionIDNotNil applies the NotNil predicate on the "DivisionID" field.
func DivisionIDNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDivisionID))
}

// DivisionNameEQ applies the EQ predicate on the "DivisionName" field.
func DivisionNameEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionName, v))
}

// DivisionNameNEQ applies the NEQ predicate on the "DivisionName" field.
func DivisionNameNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDivisionName, v))
}

// DivisionNameIn applies the In predicate on the "DivisionName" field.
func DivisionNameIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDivisionName, vs...))
}

// DivisionNameNotIn applies the NotIn predicate on the "DivisionName" field.
func DivisionNameNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDivisionName, vs...))
}

// DivisionNameGT applies the GT predicate on the "DivisionName" field.
func DivisionNameGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDivisionName, v))
}

// DivisionNameGTE applies the GTE predicate on the "DivisionName" field.
func DivisionNameGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDivisionName, v))
}

// DivisionNameLT applies the LT predicate on the "DivisionName" field.
func DivisionNameLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDivisionName, v))
}

// DivisionNameLTE applies the LTE predicate on the "DivisionName" field.
func DivisionNameLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDivisionName, v))
}

// DivisionNameContains applies the Contains predicate on the "DivisionName" field.
func DivisionNameContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDivisionName, v))
}

// DivisionNameHasPrefix applies the HasPrefix predicate on the "DivisionName" field.
func DivisionNameHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDivisionName, v))
}

// DivisionNameHasSuffix applies the HasSuffix predicate on the "DivisionName" field.
func DivisionNameHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDivisionName, v))
}

// DivisionNameIsNil applies the IsNil predicate on the "DivisionName" field.
func DivisionNameIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDivisionName))
}

// DivisionNameNotNil applies the NotNil predicate on the "DivisionName" field.
func DivisionNameNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDivisionName))
}

// DivisionNameEqualFold applies the EqualFold predicate on the "DivisionName" field.
func DivisionNameEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDivisionName, v))
}

// DivisionNameContainsFold applies the ContainsFold predicate on the "DivisionName" field.
func DivisionNameContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDivisionName, v))
}

// DivisionVerifiedEQ applies the EQ predicate on the "DivisionVerified" field.
func DivisionVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionVerified, v))
}

// DivisionVerifiedNEQ applies the NEQ predicate on the "DivisionVerified" field.
func DivisionVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDivisionVerified, v))
}

// DivisionRemStatusEQ applies the EQ predicate on the "DivisionRemStatus" field.
func DivisionRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionRemStatus, v))
}

// DivisionRemStatusNEQ applies the NEQ predicate on the "DivisionRemStatus" field.
func DivisionRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDivisionRemStatus, v))
}

// DivisionRemarksEQ applies the EQ predicate on the "DivisionRemarks" field.
func DivisionRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDivisionRemarks, v))
}

// DivisionRemarksNEQ applies the NEQ predicate on the "DivisionRemarks" field.
func DivisionRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDivisionRemarks, v))
}

// DivisionRemarksIn applies the In predicate on the "DivisionRemarks" field.
func DivisionRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDivisionRemarks, vs...))
}

// DivisionRemarksNotIn applies the NotIn predicate on the "DivisionRemarks" field.
func DivisionRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDivisionRemarks, vs...))
}

// DivisionRemarksGT applies the GT predicate on the "DivisionRemarks" field.
func DivisionRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDivisionRemarks, v))
}

// DivisionRemarksGTE applies the GTE predicate on the "DivisionRemarks" field.
func DivisionRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDivisionRemarks, v))
}

// DivisionRemarksLT applies the LT predicate on the "DivisionRemarks" field.
func DivisionRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDivisionRemarks, v))
}

// DivisionRemarksLTE applies the LTE predicate on the "DivisionRemarks" field.
func DivisionRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDivisionRemarks, v))
}

// DivisionRemarksContains applies the Contains predicate on the "DivisionRemarks" field.
func DivisionRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDivisionRemarks, v))
}

// DivisionRemarksHasPrefix applies the HasPrefix predicate on the "DivisionRemarks" field.
func DivisionRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDivisionRemarks, v))
}

// DivisionRemarksHasSuffix applies the HasSuffix predicate on the "DivisionRemarks" field.
func DivisionRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDivisionRemarks, v))
}

// DivisionRemarksEqualFold applies the EqualFold predicate on the "DivisionRemarks" field.
func DivisionRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDivisionRemarks, v))
}

// DivisionRemarksContainsFold applies the ContainsFold predicate on the "DivisionRemarks" field.
func DivisionRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDivisionRemarks, v))
}

// OfficeIDEQ applies the EQ predicate on the "OfficeID" field.
func OfficeIDEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeID, v))
}

// OfficeIDNEQ applies the NEQ predicate on the "OfficeID" field.
func OfficeIDNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldOfficeID, v))
}

// OfficeIDIn applies the In predicate on the "OfficeID" field.
func OfficeIDIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldOfficeID, vs...))
}

// OfficeIDNotIn applies the NotIn predicate on the "OfficeID" field.
func OfficeIDNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldOfficeID, vs...))
}

// OfficeIDGT applies the GT predicate on the "OfficeID" field.
func OfficeIDGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldOfficeID, v))
}

// OfficeIDGTE applies the GTE predicate on the "OfficeID" field.
func OfficeIDGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldOfficeID, v))
}

// OfficeIDLT applies the LT predicate on the "OfficeID" field.
func OfficeIDLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldOfficeID, v))
}

// OfficeIDLTE applies the LTE predicate on the "OfficeID" field.
func OfficeIDLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldOfficeID, v))
}

// OfficeIDIsNil applies the IsNil predicate on the "OfficeID" field.
func OfficeIDIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldOfficeID))
}

// OfficeIDNotNil applies the NotNil predicate on the "OfficeID" field.
func OfficeIDNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldOfficeID))
}

// OfficeNameEQ applies the EQ predicate on the "OfficeName" field.
func OfficeNameEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeName, v))
}

// OfficeNameNEQ applies the NEQ predicate on the "OfficeName" field.
func OfficeNameNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldOfficeName, v))
}

// OfficeNameIn applies the In predicate on the "OfficeName" field.
func OfficeNameIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldOfficeName, vs...))
}

// OfficeNameNotIn applies the NotIn predicate on the "OfficeName" field.
func OfficeNameNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldOfficeName, vs...))
}

// OfficeNameGT applies the GT predicate on the "OfficeName" field.
func OfficeNameGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldOfficeName, v))
}

// OfficeNameGTE applies the GTE predicate on the "OfficeName" field.
func OfficeNameGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldOfficeName, v))
}

// OfficeNameLT applies the LT predicate on the "OfficeName" field.
func OfficeNameLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldOfficeName, v))
}

// OfficeNameLTE applies the LTE predicate on the "OfficeName" field.
func OfficeNameLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldOfficeName, v))
}

// OfficeNameContains applies the Contains predicate on the "OfficeName" field.
func OfficeNameContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldOfficeName, v))
}

// OfficeNameHasPrefix applies the HasPrefix predicate on the "OfficeName" field.
func OfficeNameHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldOfficeName, v))
}

// OfficeNameHasSuffix applies the HasSuffix predicate on the "OfficeName" field.
func OfficeNameHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldOfficeName, v))
}

// OfficeNameEqualFold applies the EqualFold predicate on the "OfficeName" field.
func OfficeNameEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldOfficeName, v))
}

// OfficeNameContainsFold applies the ContainsFold predicate on the "OfficeName" field.
func OfficeNameContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldOfficeName, v))
}

// OfficeVerifiedEQ applies the EQ predicate on the "OfficeVerified" field.
func OfficeVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeVerified, v))
}

// OfficeVerifiedNEQ applies the NEQ predicate on the "OfficeVerified" field.
func OfficeVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldOfficeVerified, v))
}

// OfficeRemStatusEQ applies the EQ predicate on the "OfficeRemStatus" field.
func OfficeRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeRemStatus, v))
}

// OfficeRemStatusNEQ applies the NEQ predicate on the "OfficeRemStatus" field.
func OfficeRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldOfficeRemStatus, v))
}

// OfficeRemarksEQ applies the EQ predicate on the "OfficeRemarks" field.
func OfficeRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldOfficeRemarks, v))
}

// OfficeRemarksNEQ applies the NEQ predicate on the "OfficeRemarks" field.
func OfficeRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldOfficeRemarks, v))
}

// OfficeRemarksIn applies the In predicate on the "OfficeRemarks" field.
func OfficeRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldOfficeRemarks, vs...))
}

// OfficeRemarksNotIn applies the NotIn predicate on the "OfficeRemarks" field.
func OfficeRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldOfficeRemarks, vs...))
}

// OfficeRemarksGT applies the GT predicate on the "OfficeRemarks" field.
func OfficeRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldOfficeRemarks, v))
}

// OfficeRemarksGTE applies the GTE predicate on the "OfficeRemarks" field.
func OfficeRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldOfficeRemarks, v))
}

// OfficeRemarksLT applies the LT predicate on the "OfficeRemarks" field.
func OfficeRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldOfficeRemarks, v))
}

// OfficeRemarksLTE applies the LTE predicate on the "OfficeRemarks" field.
func OfficeRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldOfficeRemarks, v))
}

// OfficeRemarksContains applies the Contains predicate on the "OfficeRemarks" field.
func OfficeRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldOfficeRemarks, v))
}

// OfficeRemarksHasPrefix applies the HasPrefix predicate on the "OfficeRemarks" field.
func OfficeRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldOfficeRemarks, v))
}

// OfficeRemarksHasSuffix applies the HasSuffix predicate on the "OfficeRemarks" field.
func OfficeRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldOfficeRemarks, v))
}

// OfficeRemarksIsNil applies the IsNil predicate on the "OfficeRemarks" field.
func OfficeRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldOfficeRemarks))
}

// OfficeRemarksNotNil applies the NotNil predicate on the "OfficeRemarks" field.
func OfficeRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldOfficeRemarks))
}

// OfficeRemarksEqualFold applies the EqualFold predicate on the "OfficeRemarks" field.
func OfficeRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldOfficeRemarks, v))
}

// OfficeRemarksContainsFold applies the ContainsFold predicate on the "OfficeRemarks" field.
func OfficeRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldOfficeRemarks, v))
}

// RoleEQ applies the EQ predicate on the "Role" field.
func RoleEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRole, v))
}

// RoleNEQ applies the NEQ predicate on the "Role" field.
func RoleNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRole, v))
}

// RoleIn applies the In predicate on the "Role" field.
func RoleIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldRole, vs...))
}

// RoleNotIn applies the NotIn predicate on the "Role" field.
func RoleNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldRole, vs...))
}

// RoleGT applies the GT predicate on the "Role" field.
func RoleGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldRole, v))
}

// RoleGTE applies the GTE predicate on the "Role" field.
func RoleGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldRole, v))
}

// RoleLT applies the LT predicate on the "Role" field.
func RoleLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldRole, v))
}

// RoleLTE applies the LTE predicate on the "Role" field.
func RoleLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldRole, v))
}

// RoleContains applies the Contains predicate on the "Role" field.
func RoleContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldRole, v))
}

// RoleHasPrefix applies the HasPrefix predicate on the "Role" field.
func RoleHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldRole, v))
}

// RoleHasSuffix applies the HasSuffix predicate on the "Role" field.
func RoleHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldRole, v))
}

// RoleEqualFold applies the EqualFold predicate on the "Role" field.
func RoleEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldRole, v))
}

// RoleContainsFold applies the ContainsFold predicate on the "Role" field.
func RoleContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldRole, v))
}

// RoleVerifiedEQ applies the EQ predicate on the "RoleVerified" field.
func RoleVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleVerified, v))
}

// RoleVerifiedNEQ applies the NEQ predicate on the "RoleVerified" field.
func RoleVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRoleVerified, v))
}

// RoleRemStatusEQ applies the EQ predicate on the "RoleRemStatus" field.
func RoleRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleRemStatus, v))
}

// RoleRemStatusNEQ applies the NEQ predicate on the "RoleRemStatus" field.
func RoleRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRoleRemStatus, v))
}

// RoleRemarksEQ applies the EQ predicate on the "RoleRemarks" field.
func RoleRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleRemarks, v))
}

// RoleRemarksNEQ applies the NEQ predicate on the "RoleRemarks" field.
func RoleRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRoleRemarks, v))
}

// RoleRemarksIn applies the In predicate on the "RoleRemarks" field.
func RoleRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldRoleRemarks, vs...))
}

// RoleRemarksNotIn applies the NotIn predicate on the "RoleRemarks" field.
func RoleRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldRoleRemarks, vs...))
}

// RoleRemarksGT applies the GT predicate on the "RoleRemarks" field.
func RoleRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldRoleRemarks, v))
}

// RoleRemarksGTE applies the GTE predicate on the "RoleRemarks" field.
func RoleRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldRoleRemarks, v))
}

// RoleRemarksLT applies the LT predicate on the "RoleRemarks" field.
func RoleRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldRoleRemarks, v))
}

// RoleRemarksLTE applies the LTE predicate on the "RoleRemarks" field.
func RoleRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldRoleRemarks, v))
}

// RoleRemarksContains applies the Contains predicate on the "RoleRemarks" field.
func RoleRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldRoleRemarks, v))
}

// RoleRemarksHasPrefix applies the HasPrefix predicate on the "RoleRemarks" field.
func RoleRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldRoleRemarks, v))
}

// RoleRemarksHasSuffix applies the HasSuffix predicate on the "RoleRemarks" field.
func RoleRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldRoleRemarks, v))
}

// RoleRemarksEqualFold applies the EqualFold predicate on the "RoleRemarks" field.
func RoleRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldRoleRemarks, v))
}

// RoleRemarksContainsFold applies the ContainsFold predicate on the "RoleRemarks" field.
func RoleRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldRoleRemarks, v))
}

// DCCSEQ applies the EQ predicate on the "DCCS" field.
func DCCSEQ(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCS, v))
}

// DCCSNEQ applies the NEQ predicate on the "DCCS" field.
func DCCSNEQ(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCCS, v))
}

// DCCSIn applies the In predicate on the "DCCS" field.
func DCCSIn(vs ...time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDCCS, vs...))
}

// DCCSNotIn applies the NotIn predicate on the "DCCS" field.
func DCCSNotIn(vs ...time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDCCS, vs...))
}

// DCCSGT applies the GT predicate on the "DCCS" field.
func DCCSGT(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDCCS, v))
}

// DCCSGTE applies the GTE predicate on the "DCCS" field.
func DCCSGTE(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDCCS, v))
}

// DCCSLT applies the LT predicate on the "DCCS" field.
func DCCSLT(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDCCS, v))
}

// DCCSLTE applies the LTE predicate on the "DCCS" field.
func DCCSLTE(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDCCS, v))
}

// DCCSVerifiedEQ applies the EQ predicate on the "DCCSVerified" field.
func DCCSVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCSVerified, v))
}

// DCCSVerifiedNEQ applies the NEQ predicate on the "DCCSVerified" field.
func DCCSVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCCSVerified, v))
}

// DCCSRemStatusEQ applies the EQ predicate on the "DCCSRemStatus" field.
func DCCSRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCSRemStatus, v))
}

// DCCSRemStatusNEQ applies the NEQ predicate on the "DCCSRemStatus" field.
func DCCSRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCCSRemStatus, v))
}

// DCCSRemarksEQ applies the EQ predicate on the "DCCSRemarks" field.
func DCCSRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCCSRemarks, v))
}

// DCCSRemarksNEQ applies the NEQ predicate on the "DCCSRemarks" field.
func DCCSRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCCSRemarks, v))
}

// DCCSRemarksIn applies the In predicate on the "DCCSRemarks" field.
func DCCSRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDCCSRemarks, vs...))
}

// DCCSRemarksNotIn applies the NotIn predicate on the "DCCSRemarks" field.
func DCCSRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDCCSRemarks, vs...))
}

// DCCSRemarksGT applies the GT predicate on the "DCCSRemarks" field.
func DCCSRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDCCSRemarks, v))
}

// DCCSRemarksGTE applies the GTE predicate on the "DCCSRemarks" field.
func DCCSRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDCCSRemarks, v))
}

// DCCSRemarksLT applies the LT predicate on the "DCCSRemarks" field.
func DCCSRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDCCSRemarks, v))
}

// DCCSRemarksLTE applies the LTE predicate on the "DCCSRemarks" field.
func DCCSRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDCCSRemarks, v))
}

// DCCSRemarksContains applies the Contains predicate on the "DCCSRemarks" field.
func DCCSRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDCCSRemarks, v))
}

// DCCSRemarksHasPrefix applies the HasPrefix predicate on the "DCCSRemarks" field.
func DCCSRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDCCSRemarks, v))
}

// DCCSRemarksHasSuffix applies the HasSuffix predicate on the "DCCSRemarks" field.
func DCCSRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDCCSRemarks, v))
}

// DCCSRemarksIsNil applies the IsNil predicate on the "DCCSRemarks" field.
func DCCSRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDCCSRemarks))
}

// DCCSRemarksNotNil applies the NotNil predicate on the "DCCSRemarks" field.
func DCCSRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDCCSRemarks))
}

// DCCSRemarksEqualFold applies the EqualFold predicate on the "DCCSRemarks" field.
func DCCSRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDCCSRemarks, v))
}

// DCCSRemarksContainsFold applies the ContainsFold predicate on the "DCCSRemarks" field.
func DCCSRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDCCSRemarks, v))
}

// DCInPresentCadreEQ applies the EQ predicate on the "DCInPresentCadre" field.
func DCInPresentCadreEQ(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadre, v))
}

// DCInPresentCadreNEQ applies the NEQ predicate on the "DCInPresentCadre" field.
func DCInPresentCadreNEQ(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCInPresentCadre, v))
}

// DCInPresentCadreIn applies the In predicate on the "DCInPresentCadre" field.
func DCInPresentCadreIn(vs ...time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDCInPresentCadre, vs...))
}

// DCInPresentCadreNotIn applies the NotIn predicate on the "DCInPresentCadre" field.
func DCInPresentCadreNotIn(vs ...time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDCInPresentCadre, vs...))
}

// DCInPresentCadreGT applies the GT predicate on the "DCInPresentCadre" field.
func DCInPresentCadreGT(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDCInPresentCadre, v))
}

// DCInPresentCadreGTE applies the GTE predicate on the "DCInPresentCadre" field.
func DCInPresentCadreGTE(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDCInPresentCadre, v))
}

// DCInPresentCadreLT applies the LT predicate on the "DCInPresentCadre" field.
func DCInPresentCadreLT(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDCInPresentCadre, v))
}

// DCInPresentCadreLTE applies the LTE predicate on the "DCInPresentCadre" field.
func DCInPresentCadreLTE(v time.Time) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDCInPresentCadre, v))
}

// DCInPresentCadreVerifiedEQ applies the EQ predicate on the "DCInPresentCadreVerified" field.
func DCInPresentCadreVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadreVerified, v))
}

// DCInPresentCadreVerifiedNEQ applies the NEQ predicate on the "DCInPresentCadreVerified" field.
func DCInPresentCadreVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCInPresentCadreVerified, v))
}

// DCInPresentCadreRemStatusEQ applies the EQ predicate on the "DCInPresentCadreRemStatus" field.
func DCInPresentCadreRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadreRemStatus, v))
}

// DCInPresentCadreRemStatusNEQ applies the NEQ predicate on the "DCInPresentCadreRemStatus" field.
func DCInPresentCadreRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCInPresentCadreRemStatus, v))
}

// DCInPresentCadreRemarksEQ applies the EQ predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksNEQ applies the NEQ predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksIn applies the In predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldDCInPresentCadreRemarks, vs...))
}

// DCInPresentCadreRemarksNotIn applies the NotIn predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldDCInPresentCadreRemarks, vs...))
}

// DCInPresentCadreRemarksGT applies the GT predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksGTE applies the GTE predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksLT applies the LT predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksLTE applies the LTE predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksContains applies the Contains predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksHasPrefix applies the HasPrefix predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksHasSuffix applies the HasSuffix predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksIsNil applies the IsNil predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldDCInPresentCadreRemarks))
}

// DCInPresentCadreRemarksNotNil applies the NotNil predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldDCInPresentCadreRemarks))
}

// DCInPresentCadreRemarksEqualFold applies the EqualFold predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldDCInPresentCadreRemarks, v))
}

// DCInPresentCadreRemarksContainsFold applies the ContainsFold predicate on the "DCInPresentCadreRemarks" field.
func DCInPresentCadreRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldDCInPresentCadreRemarks, v))
}

// APSWorkingEQ applies the EQ predicate on the "APSWorking" field.
func APSWorkingEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorking, v))
}

// APSWorkingNEQ applies the NEQ predicate on the "APSWorking" field.
func APSWorkingNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldAPSWorking, v))
}

// APSWorkingIsNil applies the IsNil predicate on the "APSWorking" field.
func APSWorkingIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldAPSWorking))
}

// APSWorkingNotNil applies the NotNil predicate on the "APSWorking" field.
func APSWorkingNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldAPSWorking))
}

// APSWorkingVerifiedEQ applies the EQ predicate on the "APSWorkingVerified" field.
func APSWorkingVerifiedEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorkingVerified, v))
}

// APSWorkingVerifiedNEQ applies the NEQ predicate on the "APSWorkingVerified" field.
func APSWorkingVerifiedNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldAPSWorkingVerified, v))
}

// APSWorkingRemStatusEQ applies the EQ predicate on the "APSWorkingRemStatus" field.
func APSWorkingRemStatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorkingRemStatus, v))
}

// APSWorkingRemStatusNEQ applies the NEQ predicate on the "APSWorkingRemStatus" field.
func APSWorkingRemStatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldAPSWorkingRemStatus, v))
}

// APSWorkingRemarksEQ applies the EQ predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksNEQ applies the NEQ predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksNEQ(v string) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksIn applies the In predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldAPSWorkingRemarks, vs...))
}

// APSWorkingRemarksNotIn applies the NotIn predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksNotIn(vs ...string) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldAPSWorkingRemarks, vs...))
}

// APSWorkingRemarksGT applies the GT predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksGT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksGTE applies the GTE predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksGTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksLT applies the LT predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksLT(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksLTE applies the LTE predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksLTE(v string) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksContains applies the Contains predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksContains(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContains(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksHasPrefix applies the HasPrefix predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksHasPrefix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasPrefix(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksHasSuffix applies the HasSuffix predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksHasSuffix(v string) predicate.Employees {
	return predicate.Employees(sql.FieldHasSuffix(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksIsNil applies the IsNil predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldAPSWorkingRemarks))
}

// APSWorkingRemarksNotNil applies the NotNil predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldAPSWorkingRemarks))
}

// APSWorkingRemarksEqualFold applies the EqualFold predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksEqualFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldEqualFold(FieldAPSWorkingRemarks, v))
}

// APSWorkingRemarksContainsFold applies the ContainsFold predicate on the "APSWorkingRemarks" field.
func APSWorkingRemarksContainsFold(v string) predicate.Employees {
	return predicate.Employees(sql.FieldContainsFold(FieldAPSWorkingRemarks, v))
}

// ProfilestatusEQ applies the EQ predicate on the "profilestatus" field.
func ProfilestatusEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldProfilestatus, v))
}

// ProfilestatusNEQ applies the NEQ predicate on the "profilestatus" field.
func ProfilestatusNEQ(v bool) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldProfilestatus, v))
}

// RoleUserCodeEQ applies the EQ predicate on the "RoleUserCode" field.
func RoleUserCodeEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldEQ(FieldRoleUserCode, v))
}

// RoleUserCodeNEQ applies the NEQ predicate on the "RoleUserCode" field.
func RoleUserCodeNEQ(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldNEQ(FieldRoleUserCode, v))
}

// RoleUserCodeIn applies the In predicate on the "RoleUserCode" field.
func RoleUserCodeIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldIn(FieldRoleUserCode, vs...))
}

// RoleUserCodeNotIn applies the NotIn predicate on the "RoleUserCode" field.
func RoleUserCodeNotIn(vs ...int32) predicate.Employees {
	return predicate.Employees(sql.FieldNotIn(FieldRoleUserCode, vs...))
}

// RoleUserCodeGT applies the GT predicate on the "RoleUserCode" field.
func RoleUserCodeGT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGT(FieldRoleUserCode, v))
}

// RoleUserCodeGTE applies the GTE predicate on the "RoleUserCode" field.
func RoleUserCodeGTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldGTE(FieldRoleUserCode, v))
}

// RoleUserCodeLT applies the LT predicate on the "RoleUserCode" field.
func RoleUserCodeLT(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLT(FieldRoleUserCode, v))
}

// RoleUserCodeLTE applies the LTE predicate on the "RoleUserCode" field.
func RoleUserCodeLTE(v int32) predicate.Employees {
	return predicate.Employees(sql.FieldLTE(FieldRoleUserCode, v))
}

// RoleUserCodeIsNil applies the IsNil predicate on the "RoleUserCode" field.
func RoleUserCodeIsNil() predicate.Employees {
	return predicate.Employees(sql.FieldIsNull(FieldRoleUserCode))
}

// RoleUserCodeNotNil applies the NotNil predicate on the "RoleUserCode" field.
func RoleUserCodeNotNil() predicate.Employees {
	return predicate.Employees(sql.FieldNotNull(FieldRoleUserCode))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Employees) predicate.Employees {
	return predicate.Employees(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Employees) predicate.Employees {
	return predicate.Employees(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Employees) predicate.Employees {
	return predicate.Employees(func(s *sql.Selector) {
		p(s.Not())
	})
}
