// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminLoginColumns holds the columns for the "AdminLogin" table.
	AdminLoginColumns = []*schema.Column{
		{Name: "LoginId", Type: field.TypeInt32, Increment: true},
		{Name: "role_name", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "employeed_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "emailid", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeInt64, Nullable: true},
		{Name: "username", Type: field.TypeString},
		{Name: "otp", Type: field.TypeInt32, Nullable: true},
		{Name: "password", Type: field.TypeString},
		{Name: "verify_remarks", Type: field.TypeString, Nullable: true},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
	}
	// AdminLoginTable holds the schema information for the "AdminLogin" table.
	AdminLoginTable = &schema.Table{
		Name:       "AdminLogin",
		Columns:    AdminLoginColumns,
		PrimaryKey: []*schema.Column{AdminLoginColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "AdminLogin_RoleMaster_roles",
				Columns:    []*schema.Column{AdminLoginColumns[12]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminMasterColumns holds the columns for the "AdminMaster" table.
	AdminMasterColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "designation", Type: field.TypeString, Nullable: true},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "role_user_description", Type: field.TypeString, Nullable: true},
		{Name: "mobile", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true, Default: "Cept@123"},
		{Name: "facility_id_uniqueid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "facility_id", Type: field.TypeString, Nullable: true},
		{Name: "authority_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "facility_type", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "circle_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "circle_office_name", Type: field.TypeString, Nullable: true},
		{Name: "uid_token", Type: field.TypeString, Nullable: true},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "otp", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "otp_saved_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "otp_triggered_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "otp_expiry_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "otp_remarks", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "modified_by_id", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "modified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "modified_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "modified_by_designantion", Type: field.TypeString, Nullable: true},
		{Name: "modified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "deleted_by", Type: field.TypeString, Nullable: true},
		{Name: "deletedbyid", Type: field.TypeString, Nullable: true},
		{Name: "new_password_request", Type: field.TypeBool, Nullable: true},
		{Name: "event_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "uuid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "updatedby", Type: field.TypeString, Nullable: true},
		{Name: "updated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// AdminMasterTable holds the schema information for the "AdminMaster" table.
	AdminMasterTable = &schema.Table{
		Name:       "AdminMaster",
		Columns:    AdminMasterColumns,
		PrimaryKey: []*schema.Column{AdminMasterColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "adminmaster_employee_id_role_user_code_facility_id_statuss",
				Unique:  true,
				Columns: []*schema.Column{AdminMasterColumns[1], AdminMasterColumns[4], AdminMasterColumns[11], AdminMasterColumns[19]},
			},
			{
				Name:    "adminmaster_user_name_statuss",
				Unique:  true,
				Columns: []*schema.Column{AdminMasterColumns[8], AdminMasterColumns[19]},
			},
		},
	}
	// AgeEligibilityColumns holds the columns for the "AgeEligibility" table.
	AgeEligibilityColumns = []*schema.Column{
		{Name: "AgeElibilityCode", Type: field.TypeInt32, Increment: true},
		{Name: "eligibillity_code", Type: field.TypeInt32, Nullable: true},
		{Name: "age", Type: field.TypeInt32, Nullable: true},
		{Name: "category_id", Type: field.TypeInt32, Nullable: true},
	}
	// AgeEligibilityTable holds the schema information for the "AgeEligibility" table.
	AgeEligibilityTable = &schema.Table{
		Name:       "AgeEligibility",
		Columns:    AgeEligibilityColumns,
		PrimaryKey: []*schema.Column{AgeEligibilityColumns[0]},
	}
	// ApplicationColumns holds the columns for the "Application" table.
	ApplicationColumns = []*schema.Column{
		{Name: "ApplicationCode", Type: field.TypeInt32, Increment: true},
		{Name: "employee_id", Type: field.TypeInt32},
		{Name: "hall_ticket_number", Type: field.TypeString, Nullable: true},
		{Name: "applied_stamp", Type: field.TypeTime},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true},
		{Name: "notify_code", Type: field.TypeInt32, Nullable: true},
	}
	// ApplicationTable holds the schema information for the "Application" table.
	ApplicationTable = &schema.Table{
		Name:       "Application",
		Columns:    ApplicationColumns,
		PrimaryKey: []*schema.Column{ApplicationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Application_Center_applications",
				Columns:    []*schema.Column{ApplicationColumns[4]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Application_Notification_applications",
				Columns:    []*schema.Column{ApplicationColumns[5]},
				RefColumns: []*schema.Column{NotificationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CadreEligibleConfigurationColumns holds the columns for the "CadreEligibleConfiguration" table.
	CadreEligibleConfigurationColumns = []*schema.Column{
		{Name: "cadreEligibleCode", Type: field.TypeInt64, Increment: true},
		{Name: "exam_code", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "post_id", Type: field.TypeInt64, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "post_description", Type: field.TypeString, Nullable: true},
		{Name: "gds_service", Type: field.TypeInt64, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "age_criteria", Type: field.TypeInt64, Nullable: true},
		{Name: "service_criteria", Type: field.TypeInt64, Nullable: true},
		{Name: "driving_licence_criteria", Type: field.TypeInt64, Nullable: true},
		{Name: "computer_knowledge", Type: field.TypeInt64, Nullable: true},
		{Name: "eligibility_based_on_level_of_pay_matrix", Type: field.TypeInt64, Nullable: true},
		{Name: "education_code", Type: field.TypeInt64, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "verifiedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "verifiedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "deletedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "deletedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// CadreEligibleConfigurationTable holds the schema information for the "CadreEligibleConfiguration" table.
	CadreEligibleConfigurationTable = &schema.Table{
		Name:       "CadreEligibleConfiguration",
		Columns:    CadreEligibleConfigurationColumns,
		PrimaryKey: []*schema.Column{CadreEligibleConfigurationColumns[0]},
	}
	// CadreChoiceIPColumns holds the columns for the "Cadre_Choice_IP" table.
	CadreChoiceIPColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "cadre_pref_no", Type: field.TypeString, Nullable: true},
		{Name: "cadre_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// CadreChoiceIPTable holds the schema information for the "Cadre_Choice_IP" table.
	CadreChoiceIPTable = &schema.Table{
		Name:       "Cadre_Choice_IP",
		Columns:    CadreChoiceIPColumns,
		PrimaryKey: []*schema.Column{CadreChoiceIPColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Cadre_Choice_IP_Exam_Applications_IP_CadrePref_Ref",
				Columns:    []*schema.Column{CadreChoiceIPColumns[6]},
				RefColumns: []*schema.Column{ExamApplicationsIPColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CadreChoiceMTSPMMGColumns holds the columns for the "Cadre_Choice_MTSPMMG" table.
	CadreChoiceMTSPMMGColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "place_pref_no", Type: field.TypeInt64},
		{Name: "place_pref_value", Type: field.TypeString},
		{Name: "feeder_cader", Type: field.TypeString, Nullable: true},
		{Name: "feeder_cader_date_of_joining", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// CadreChoiceMTSPMMGTable holds the schema information for the "Cadre_Choice_MTSPMMG" table.
	CadreChoiceMTSPMMGTable = &schema.Table{
		Name:       "Cadre_Choice_MTSPMMG",
		Columns:    CadreChoiceMTSPMMGColumns,
		PrimaryKey: []*schema.Column{CadreChoiceMTSPMMGColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Cadre_Choice_MTSPMMG_Exam_Application_MTSPMMG_CadrePref_Ref",
				Columns:    []*schema.Column{CadreChoiceMTSPMMGColumns[8]},
				RefColumns: []*schema.Column{ExamApplicationMTSPMMGColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CadreChoicePAColumns holds the columns for the "Cadre_Choice_PA" table.
	CadreChoicePAColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "place_pref_no", Type: field.TypeInt64},
		{Name: "place_pref_value", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// CadreChoicePATable holds the schema information for the "Cadre_Choice_PA" table.
	CadreChoicePATable = &schema.Table{
		Name:       "Cadre_Choice_PA",
		Columns:    CadreChoicePAColumns,
		PrimaryKey: []*schema.Column{CadreChoicePAColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Cadre_Choice_PA_Exam_Applications_GDSPA_CadrePref_Ref",
				Columns:    []*schema.Column{CadreChoicePAColumns[6]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CadreChoicePMColumns holds the columns for the "Cadre_Choice_PM" table.
	CadreChoicePMColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "group", Type: field.TypeString},
		{Name: "cadre_pref_no", Type: field.TypeInt64},
		{Name: "cadre", Type: field.TypeString},
		{Name: "post_pref_no", Type: field.TypeInt64},
		{Name: "post_pref_value", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// CadreChoicePMTable holds the schema information for the "Cadre_Choice_PM" table.
	CadreChoicePMTable = &schema.Table{
		Name:       "Cadre_Choice_PM",
		Columns:    CadreChoicePMColumns,
		PrimaryKey: []*schema.Column{CadreChoicePMColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Cadre_Choice_PM_Exam_Applications_GDSPM_CadrePrefRefGDSPM",
				Columns:    []*schema.Column{CadreChoicePMColumns[9]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPMColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CadreChoicePMPAColumns holds the columns for the "Cadre_Choice_PMPA" table.
	CadreChoicePMPAColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "place_pref_no", Type: field.TypeInt64},
		{Name: "place_pref_value", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// CadreChoicePMPATable holds the schema information for the "Cadre_Choice_PMPA" table.
	CadreChoicePMPATable = &schema.Table{
		Name:       "Cadre_Choice_PMPA",
		Columns:    CadreChoicePMPAColumns,
		PrimaryKey: []*schema.Column{CadreChoicePMPAColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Cadre_Choice_PMPA_Exam_Applications_PMPA_CadrePref_Ref",
				Columns:    []*schema.Column{CadreChoicePMPAColumns[6]},
				RefColumns: []*schema.Column{ExamApplicationsPMPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CadreChoicePSColumns holds the columns for the "Cadre_Choice_PS" table.
	CadreChoicePSColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "cadre_pref_no", Type: field.TypeString, Nullable: true},
		{Name: "cadre_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// CadreChoicePSTable holds the schema information for the "Cadre_Choice_PS" table.
	CadreChoicePSTable = &schema.Table{
		Name:       "Cadre_Choice_PS",
		Columns:    CadreChoicePSColumns,
		PrimaryKey: []*schema.Column{CadreChoicePSColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Cadre_Choice_PS_Exam_Applications_PS_CadrePrefPS_Ref",
				Columns:    []*schema.Column{CadreChoicePSColumns[6]},
				RefColumns: []*schema.Column{ExamApplicationsPSColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoryMininumMarkMappingColumns holds the columns for the "CategoryMininumMarkMapping" table.
	CategoryMininumMarkMappingColumns = []*schema.Column{
		{Name: "categoryMininumMarkCode", Type: field.TypeInt64, Increment: true},
		{Name: "exam_code", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "paper_code", Type: field.TypeInt64, Nullable: true},
		{Name: "paper_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_id", Type: field.TypeInt64, Nullable: true},
		{Name: "disability_type_code", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_description", Type: field.TypeString, Nullable: true},
		{Name: "minimum_marks", Type: field.TypeInt64, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "verifiedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "verifiedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "deletedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "deletedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// CategoryMininumMarkMappingTable holds the schema information for the "CategoryMininumMarkMapping" table.
	CategoryMininumMarkMappingTable = &schema.Table{
		Name:       "CategoryMininumMarkMapping",
		Columns:    CategoryMininumMarkMappingColumns,
		PrimaryKey: []*schema.Column{CategoryMininumMarkMappingColumns[0]},
	}
	// CenterColumns holds the columns for the "Center" table.
	CenterColumns = []*schema.Column{
		{Name: "CenterCode", Type: field.TypeInt32, Increment: true},
		{Name: "city_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "nodal_officer_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "exam_center_name", Type: field.TypeString, Nullable: true},
		{Name: "region_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "circle_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "division_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "facility_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "exam_name_code", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "na_user_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "admin_circle_office_id", Type: field.TypeString, Nullable: true},
		{Name: "address", Type: field.TypeString, Nullable: true},
		{Name: "landmark", Type: field.TypeString, Nullable: true},
		{Name: "center_city_name", Type: field.TypeString, Nullable: true},
		{Name: "pincode", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "max_seats", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "no_alloted", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "pending_seats", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "status", Type: field.TypeBool, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "conducted_by", Type: field.TypeString, Nullable: true},
		{Name: "conducted_by_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "papers", Type: field.TypeJSON, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "exam_papers_centers", Type: field.TypeInt32, Nullable: true},
	}
	// CenterTable holds the schema information for the "Center" table.
	CenterTable = &schema.Table{
		Name:       "Center",
		Columns:    CenterColumns,
		PrimaryKey: []*schema.Column{CenterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Center_Exam_examcentresip",
				Columns:    []*schema.Column{CenterColumns[27]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Center_exam_papers_centers",
				Columns:    []*schema.Column{CenterColumns[28]},
				RefColumns: []*schema.Column{ExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CircleSummaryForNOColumns holds the columns for the "CircleSummaryForNO" table.
	CircleSummaryForNOColumns = []*schema.Column{
		{Name: "CircleSID", Type: field.TypeInt32, Increment: true},
		{Name: "circle_office_id", Type: field.TypeString},
		{Name: "circle_office_name", Type: field.TypeString},
		{Name: "approve_hall_ticket_genration_ip", Type: field.TypeBool, Nullable: true},
		{Name: "approve_hall_ticket_genration_ps", Type: field.TypeBool, Nullable: true},
		{Name: "approve_hall_ticket_genration_pm", Type: field.TypeBool, Nullable: true},
		{Name: "approve_hall_ticket_genration_pa", Type: field.TypeBool, Nullable: true},
	}
	// CircleSummaryForNOTable holds the schema information for the "CircleSummaryForNO" table.
	CircleSummaryForNOTable = &schema.Table{
		Name:       "CircleSummaryForNO",
		Columns:    CircleSummaryForNOColumns,
		PrimaryKey: []*schema.Column{CircleSummaryForNOColumns[0]},
	}
	// DirectorateUsersColumns holds the columns for the "DirectorateUsers" table.
	DirectorateUsersColumns = []*schema.Column{
		{Name: "RoleUserCode", Type: field.TypeInt32, Increment: true},
		{Name: "role", Type: field.TypeString},
		{Name: "employeed_id", Type: field.TypeInt32},
		{Name: "employee_name", Type: field.TypeString},
		{Name: "email_id", Type: field.TypeString},
		{Name: "mobile_number", Type: field.TypeInt64},
		{Name: "sequence_number", Type: field.TypeInt32, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
	}
	// DirectorateUsersTable holds the schema information for the "DirectorateUsers" table.
	DirectorateUsersTable = &schema.Table{
		Name:       "DirectorateUsers",
		Columns:    DirectorateUsersColumns,
		PrimaryKey: []*schema.Column{DirectorateUsersColumns[0]},
	}
	// DisabilityColumns holds the columns for the "Disability" table.
	DisabilityColumns = []*schema.Column{
		{Name: "DisabilityTypeID", Type: field.TypeInt32, Increment: true},
		{Name: "disability_type_code", Type: field.TypeString},
		{Name: "disability_type_description", Type: field.TypeString},
		{Name: "disability_percentage", Type: field.TypeInt32},
		{Name: "disability_flag", Type: field.TypeEnum, Enums: []string{"Temporary", "Permanent"}},
		{Name: "hall_category_code", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "statuss", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_papers_dis_ref", Type: field.TypeInt32, Nullable: true},
	}
	// DisabilityTable holds the schema information for the "Disability" table.
	DisabilityTable = &schema.Table{
		Name:       "Disability",
		Columns:    DisabilityColumns,
		PrimaryKey: []*schema.Column{DisabilityColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Disability_exam_papers_dis_ref",
				Columns:    []*schema.Column{DisabilityColumns[23]},
				RefColumns: []*schema.Column{ExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DivisionChoiceMTSPMMGColumns holds the columns for the "Division_Choice_MTSPMMG" table.
	DivisionChoiceMTSPMMGColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "group", Type: field.TypeString, Nullable: true},
		{Name: "cadre_pref_no", Type: field.TypeInt64, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "place_pref_no", Type: field.TypeInt64, Nullable: true},
		{Name: "place_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "post_pref_no", Type: field.TypeInt64, Nullable: true},
		{Name: "posting_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// DivisionChoiceMTSPMMGTable holds the schema information for the "Division_Choice_MTSPMMG" table.
	DivisionChoiceMTSPMMGTable = &schema.Table{
		Name:       "Division_Choice_MTSPMMG",
		Columns:    DivisionChoiceMTSPMMGColumns,
		PrimaryKey: []*schema.Column{DivisionChoiceMTSPMMGColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Division_Choice_MTSPMMG_Exam_Application_MTSPMMG_CirclePrefRefMTSPMMG",
				Columns:    []*schema.Column{DivisionChoiceMTSPMMGColumns[11]},
				RefColumns: []*schema.Column{ExamApplicationMTSPMMGColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DivisionChoicePAColumns holds the columns for the "Division_Choice_PA" table.
	DivisionChoicePAColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "place_pref_no", Type: field.TypeInt64, Nullable: true},
		{Name: "place_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// DivisionChoicePATable holds the schema information for the "Division_Choice_PA" table.
	DivisionChoicePATable = &schema.Table{
		Name:       "Division_Choice_PA",
		Columns:    DivisionChoicePAColumns,
		PrimaryKey: []*schema.Column{DivisionChoicePAColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Division_Choice_PA_Exam_Applications_GDSPA_CirclePrefRefGDSPA",
				Columns:    []*schema.Column{DivisionChoicePAColumns[6]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DivisionChoicePMColumns holds the columns for the "Division_Choice_PM" table.
	DivisionChoicePMColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "group", Type: field.TypeString},
		{Name: "cadre_pref_no", Type: field.TypeInt64},
		{Name: "cadre", Type: field.TypeString},
		{Name: "post_pref_no", Type: field.TypeInt64},
		{Name: "posting_pref_value", Type: field.TypeString},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// DivisionChoicePMTable holds the schema information for the "Division_Choice_PM" table.
	DivisionChoicePMTable = &schema.Table{
		Name:       "Division_Choice_PM",
		Columns:    DivisionChoicePMColumns,
		PrimaryKey: []*schema.Column{DivisionChoicePMColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Division_Choice_PM_Exam_Applications_GDSPM_CirclePrefRefGDSPM",
				Columns:    []*schema.Column{DivisionChoicePMColumns[9]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPMColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DivisionChoicePMPAColumns holds the columns for the "Division_Choice_PMPA" table.
	DivisionChoicePMPAColumns = []*schema.Column{
		{Name: "CadrePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
		{Name: "place_pref_no", Type: field.TypeInt64, Nullable: true},
		{Name: "place_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "exam_applications_pmpa_circle_pref_ref_pmpa", Type: field.TypeInt64, Nullable: true},
	}
	// DivisionChoicePMPATable holds the schema information for the "Division_Choice_PMPA" table.
	DivisionChoicePMPATable = &schema.Table{
		Name:       "Division_Choice_PMPA",
		Columns:    DivisionChoicePMPAColumns,
		PrimaryKey: []*schema.Column{DivisionChoicePMPAColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Division_Choice_PMPA_Exam_Applications_PMPA_CirclePrefRefPMPA",
				Columns:    []*schema.Column{DivisionChoicePMPAColumns[7]},
				RefColumns: []*schema.Column{ExamApplicationsPMPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EducationDetailsColumns holds the columns for the "EducationDetails" table.
	EducationDetailsColumns = []*schema.Column{
		{Name: "educationCode", Type: field.TypeInt64, Increment: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "status", Type: field.TypeString},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// EducationDetailsTable holds the schema information for the "EducationDetails" table.
	EducationDetailsTable = &schema.Table{
		Name:       "EducationDetails",
		Columns:    EducationDetailsColumns,
		PrimaryKey: []*schema.Column{EducationDetailsColumns[0]},
	}
	// EligibilityCadrePayMatrixColumns holds the columns for the "EligibilityCadrePayMatrix" table.
	EligibilityCadrePayMatrixColumns = []*schema.Column{
		{Name: "CadrePaymatrixCode", Type: field.TypeInt64, Increment: true},
		{Name: "cadre_eligible_configuration_cadre_eligible_code", Type: field.TypeInt64, Nullable: true},
		{Name: "post_id", Type: field.TypeInt64, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "post_description", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "verifiedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "verifiedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "deletedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "deletedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// EligibilityCadrePayMatrixTable holds the schema information for the "EligibilityCadrePayMatrix" table.
	EligibilityCadrePayMatrixTable = &schema.Table{
		Name:       "EligibilityCadrePayMatrix",
		Columns:    EligibilityCadrePayMatrixColumns,
		PrimaryKey: []*schema.Column{EligibilityCadrePayMatrixColumns[0]},
	}
	// EligibilityMasterColumns holds the columns for the "EligibilityMaster" table.
	EligibilityMasterColumns = []*schema.Column{
		{Name: "EligibilityCode", Type: field.TypeInt32, Increment: true},
		{Name: "exam_name", Type: field.TypeString},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "gds_service", Type: field.TypeBool, Default: false},
		{Name: "age_criteria", Type: field.TypeInt32, Nullable: true},
		{Name: "service_criteria", Type: field.TypeInt32, Nullable: true},
		{Name: "driving_license_criteria", Type: field.TypeBool, Default: false},
		{Name: "computer_knowledge", Type: field.TypeBool, Default: false},
		{Name: "level_of_pay_matrix_eligibility", Type: field.TypeBool, Default: false},
		{Name: "education", Type: field.TypeString},
		{Name: "notify_code", Type: field.TypeInt32, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "paper_description", Type: field.TypeString},
		{Name: "minimum_marks", Type: field.TypeInt32},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt32, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
		{Name: "employee_posts_post_eligibility", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "paper_code", Type: field.TypeInt32, Nullable: true},
	}
	// EligibilityMasterTable holds the schema information for the "EligibilityMaster" table.
	EligibilityMasterTable = &schema.Table{
		Name:       "EligibilityMaster",
		Columns:    EligibilityMasterColumns,
		PrimaryKey: []*schema.Column{EligibilityMasterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "EligibilityMaster_EmployeePosts_PostEligibility",
				Columns:    []*schema.Column{EligibilityMasterColumns[31]},
				RefColumns: []*schema.Column{EmployeePostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "EligibilityMaster_Exam_ExamEligibility",
				Columns:    []*schema.Column{EligibilityMasterColumns[32]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "EligibilityMaster_exam_papers_ExamPaperEligibility",
				Columns:    []*schema.Column{EligibilityMasterColumns[33]},
				RefColumns: []*schema.Column{ExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeeCadreColumns holds the columns for the "EmployeeCadre" table.
	EmployeeCadreColumns = []*schema.Column{
		{Name: "cadreid", Type: field.TypeInt32, Increment: true},
		{Name: "cadrecode", Type: field.TypeString},
		{Name: "cadredescription", Type: field.TypeString},
		{Name: "pay_level", Type: field.TypeString},
		{Name: "scale", Type: field.TypeString},
		{Name: "examconfiguration_examcode", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_short_description", Type: field.TypeString, Nullable: true},
		{Name: "exam_long_description", Type: field.TypeString, Nullable: true},
		{Name: "employee_post_post_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_group_group_id", Type: field.TypeInt32, Nullable: true},
		{Name: "group_description", Type: field.TypeString, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "post_description", Type: field.TypeString, Nullable: true},
		{Name: "base_cadre", Type: field.TypeInt32, Nullable: true},
		{Name: "gds_service", Type: field.TypeInt32, Nullable: true},
		{Name: "age_criteria", Type: field.TypeInt32, Nullable: true},
		{Name: "service_criteria", Type: field.TypeInt32, Nullable: true},
		{Name: "driving_licence_criteria", Type: field.TypeInt32, Nullable: true},
		{Name: "computer_knowledge", Type: field.TypeInt32, Nullable: true},
		{Name: "eligibilty_based_on_level_of_paymatrix", Type: field.TypeInt32, Nullable: true},
		{Name: "education_details_education_code", Type: field.TypeInt32, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt32, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
	}
	// EmployeeCadreTable holds the schema information for the "EmployeeCadre" table.
	EmployeeCadreTable = &schema.Table{
		Name:       "EmployeeCadre",
		Columns:    EmployeeCadreColumns,
		PrimaryKey: []*schema.Column{EmployeeCadreColumns[0]},
	}
	// EmployeeCategoryColumns holds the columns for the "EmployeeCategory" table.
	EmployeeCategoryColumns = []*schema.Column{
		{Name: "UniqueID", Type: field.TypeInt32, Increment: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "category_description", Type: field.TypeString, Nullable: true},
		{Name: "minimum_marks", Type: field.TypeInt32, Nullable: true},
		{Name: "hall_category_code", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "examconfiguration_examcode", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_short_description", Type: field.TypeString, Nullable: true},
		{Name: "exam_long_description", Type: field.TypeString, Nullable: true},
		{Name: "exam_paper_code_paper_code", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_category_category_id", Type: field.TypeInt32, Nullable: true},
		{Name: "eligibility_master_category_eligibility", Type: field.TypeInt32, Nullable: true},
	}
	// EmployeeCategoryTable holds the schema information for the "EmployeeCategory" table.
	EmployeeCategoryTable = &schema.Table{
		Name:       "EmployeeCategory",
		Columns:    EmployeeCategoryColumns,
		PrimaryKey: []*schema.Column{EmployeeCategoryColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "EmployeeCategory_EligibilityMaster_CategoryEligibility",
				Columns:    []*schema.Column{EmployeeCategoryColumns[27]},
				RefColumns: []*schema.Column{EligibilityMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeeDesignationColumns holds the columns for the "EmployeeDesignation" table.
	EmployeeDesignationColumns = []*schema.Column{
		{Name: "DesignationID", Type: field.TypeInt32, Increment: true},
		{Name: "post_id", Type: field.TypeInt32, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "post_description", Type: field.TypeString, Nullable: true},
		{Name: "designation_code", Type: field.TypeString, Nullable: true},
		{Name: "designation_description", Type: field.TypeString},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "verifiedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "verifiedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "deletedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "deletedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "paper_status", Type: field.TypeString, Size: 10},
		{Name: "calendar_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code_ps", Type: field.TypeInt32, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
	}
	// EmployeeDesignationTable holds the schema information for the "EmployeeDesignation" table.
	EmployeeDesignationTable = &schema.Table{
		Name:       "EmployeeDesignation",
		Columns:    EmployeeDesignationColumns,
		PrimaryKey: []*schema.Column{EmployeeDesignationColumns[0]},
	}
	// EmployeeGroupColumns holds the columns for the "EmployeeGroup" table.
	EmployeeGroupColumns = []*schema.Column{
		{Name: "groupid", Type: field.TypeInt32, Increment: true},
		{Name: "group_code", Type: field.TypeString, Nullable: true},
		{Name: "group_description", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt32, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
	}
	// EmployeeGroupTable holds the schema information for the "EmployeeGroup" table.
	EmployeeGroupTable = &schema.Table{
		Name:       "EmployeeGroup",
		Columns:    EmployeeGroupColumns,
		PrimaryKey: []*schema.Column{EmployeeGroupColumns[0]},
	}
	// EmployeeMasterColumns holds the columns for the "EmployeeMaster" table.
	EmployeeMasterColumns = []*schema.Column{
		{Name: "EmpID", Type: field.TypeInt64, Increment: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "employee_category_code", Type: field.TypeString, Nullable: true},
		{Name: "employee_category", Type: field.TypeString, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "facility_id", Type: field.TypeString, Nullable: true},
		{Name: "office_name", Type: field.TypeString, Nullable: true},
		{Name: "controlling_authority_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_authority_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_authority_faciliy_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_authority_name", Type: field.TypeString, Nullable: true},
		{Name: "pincode", Type: field.TypeString, Nullable: true},
		{Name: "circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "verify_status", Type: field.TypeBool, Default: false},
		{Name: "uid_token", Type: field.TypeString, Nullable: true},
		{Name: "createdby", Type: field.TypeString, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "modified_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "modified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "modified_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "modified_by_designantion", Type: field.TypeString, Nullable: true},
		{Name: "modified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "sms_otp", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "sms_triggered_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "sms_verify_status", Type: field.TypeBool, Default: false},
		{Name: "email_otp", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "email_triggered_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "email_verify_status", Type: field.TypeBool, Default: false},
		{Name: "final_submit_status", Type: field.TypeBool, Default: false},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "user_master_usermaster_ref", Type: field.TypeInt64, Nullable: true},
	}
	// EmployeeMasterTable holds the schema information for the "EmployeeMaster" table.
	EmployeeMasterTable = &schema.Table{
		Name:       "EmployeeMaster",
		Columns:    EmployeeMasterColumns,
		PrimaryKey: []*schema.Column{EmployeeMasterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "EmployeeMaster_UserMaster_UsermasterRef",
				Columns:    []*schema.Column{EmployeeMasterColumns[50]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "employeemaster_employee_id_statuss",
				Unique:  true,
				Columns: []*schema.Column{EmployeeMasterColumns[1], EmployeeMasterColumns[19]},
			},
			{
				Name:    "employeemaster_controlling_authority_facility_id_statuss",
				Unique:  false,
				Columns: []*schema.Column{EmployeeMasterColumns[13], EmployeeMasterColumns[19]},
			},
		},
	}
	// EmployeePostsColumns holds the columns for the "EmployeePosts" table.
	EmployeePostsColumns = []*schema.Column{
		{Name: "PostID", Type: field.TypeInt32, Increment: true},
		{Name: "post_code", Type: field.TypeString},
		{Name: "post_description", Type: field.TypeString, Nullable: true},
		{Name: "group", Type: field.TypeString, Nullable: true},
		{Name: "pay_level", Type: field.TypeString, Nullable: true},
		{Name: "scale", Type: field.TypeString, Nullable: true},
		{Name: "base_cadre_flag", Type: field.TypeBool, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt32, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true},
		{Name: "group_description", Type: field.TypeString, Nullable: true},
		{Name: "eligibility_master_post_eligibility", Type: field.TypeInt32, Nullable: true},
	}
	// EmployeePostsTable holds the schema information for the "EmployeePosts" table.
	EmployeePostsTable = &schema.Table{
		Name:       "EmployeePosts",
		Columns:    EmployeePostsColumns,
		PrimaryKey: []*schema.Column{EmployeePostsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "EmployeePosts_EligibilityMaster_PostEligibility",
				Columns:    []*schema.Column{EmployeePostsColumns[25]},
				RefColumns: []*schema.Column{EligibilityMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// EmployeesColumns holds the columns for the "Employees" table.
	EmployeesColumns = []*schema.Column{
		{Name: "RegistrationID", Type: field.TypeInt32, Increment: true},
		{Name: "employeed_id", Type: field.TypeInt32},
		{Name: "id_verified", Type: field.TypeBool, Default: false},
		{Name: "id_rem_status", Type: field.TypeBool, Default: false},
		{Name: "id_remarks", Type: field.TypeString, Nullable: true},
		{Name: "employee_name", Type: field.TypeString},
		{Name: "name_verified", Type: field.TypeBool, Default: false},
		{Name: "name_rem_status", Type: field.TypeBool, Default: false},
		{Name: "name_remarks", Type: field.TypeString, Nullable: true},
		{Name: "employee_fathers_name", Type: field.TypeString},
		{Name: "fathers_name_verified", Type: field.TypeBool, Default: false},
		{Name: "fathers_name_rem_status", Type: field.TypeBool, Default: false},
		{Name: "fathers_name_remarks", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "dob_verified", Type: field.TypeBool, Default: false},
		{Name: "dob_rem_status", Type: field.TypeBool, Default: false},
		{Name: "dob_remarks", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"Male", "Female"}},
		{Name: "gender_verified", Type: field.TypeBool, Default: false},
		{Name: "gender_rem_status", Type: field.TypeBool, Default: false},
		{Name: "gender_remarks", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeInt64, Nullable: true},
		{Name: "mobile_number_verified", Type: field.TypeBool, Default: false},
		{Name: "mobile_number_rem_status", Type: field.TypeBool, Default: false},
		{Name: "mobile_number_remarks", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "email_id_verified", Type: field.TypeBool, Default: false},
		{Name: "email_id_rem_status", Type: field.TypeBool, Default: false},
		{Name: "email_id_remarks", Type: field.TypeString, Nullable: true},
		{Name: "categoryid", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_category_code", Type: field.TypeString, Nullable: true},
		{Name: "employee_category", Type: field.TypeString},
		{Name: "employee_category_code_verified", Type: field.TypeBool, Default: false},
		{Name: "employee_category_code_rem_status", Type: field.TypeBool, Default: false},
		{Name: "employee_category_code_remarks", Type: field.TypeString, Nullable: true},
		{Name: "with_disability", Type: field.TypeString},
		{Name: "with_disability_verified", Type: field.TypeBool, Default: false},
		{Name: "with_disability_rem_status", Type: field.TypeBool, Default: false},
		{Name: "with_disability_remarks", Type: field.TypeBool, Nullable: true},
		{Name: "disability_type", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_verified", Type: field.TypeBool, Default: false},
		{Name: "disability_type_rem_status", Type: field.TypeBool, Default: false},
		{Name: "disability_type_remarks", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeInt32, Nullable: true},
		{Name: "disability_percentage_verified", Type: field.TypeBool, Default: false},
		{Name: "disability_percentage_rem_status", Type: field.TypeBool, Default: false},
		{Name: "disability_percentage_remarks", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString},
		{Name: "signature_verified", Type: field.TypeBool, Default: false},
		{Name: "signature_rem_status", Type: field.TypeBool, Default: false},
		{Name: "signature_remarks", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString},
		{Name: "photo_verified", Type: field.TypeBool, Default: false},
		{Name: "photo_rem_status", Type: field.TypeBool, Default: false},
		{Name: "photo_remarks", Type: field.TypeString, Nullable: true},
		{Name: "post_id", Type: field.TypeInt32, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString},
		{Name: "employee_post_verified", Type: field.TypeBool, Default: false},
		{Name: "employee_post_rem_status", Type: field.TypeBool, Default: false},
		{Name: "employee_post_remarks", Type: field.TypeString, Nullable: true},
		{Name: "designation_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_designation", Type: field.TypeString},
		{Name: "employee_designation_verified", Type: field.TypeBool, Default: false},
		{Name: "employee_designation_rem_status", Type: field.TypeBool, Default: false},
		{Name: "employee_designation_remarks", Type: field.TypeString, Nullable: true},
		{Name: "circle_id", Type: field.TypeInt32, Nullable: true},
		{Name: "circle_name", Type: field.TypeString},
		{Name: "circle_verified", Type: field.TypeBool, Default: false},
		{Name: "circle_rem_status", Type: field.TypeBool, Default: false},
		{Name: "circle_remarks", Type: field.TypeString, Nullable: true},
		{Name: "region_id", Type: field.TypeInt32, Nullable: true},
		{Name: "region_name", Type: field.TypeString, Nullable: true},
		{Name: "region_verified", Type: field.TypeBool, Default: false},
		{Name: "region_rem_status", Type: field.TypeBool, Default: false},
		{Name: "region_remarks", Type: field.TypeString, Nullable: true},
		{Name: "division_id", Type: field.TypeInt32, Nullable: true},
		{Name: "division_name", Type: field.TypeString, Nullable: true},
		{Name: "division_verified", Type: field.TypeBool, Default: false},
		{Name: "division_rem_status", Type: field.TypeBool, Default: false},
		{Name: "division_remarks", Type: field.TypeString},
		{Name: "office_id", Type: field.TypeInt32, Nullable: true},
		{Name: "office_name", Type: field.TypeString},
		{Name: "office_verified", Type: field.TypeBool, Default: false},
		{Name: "office_rem_status", Type: field.TypeBool, Default: false},
		{Name: "office_remarks", Type: field.TypeString, Nullable: true},
		{Name: "role", Type: field.TypeString},
		{Name: "role_verified", Type: field.TypeBool, Default: false},
		{Name: "role_rem_status", Type: field.TypeBool, Default: false},
		{Name: "role_remarks", Type: field.TypeString},
		{Name: "dccs", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "dccs_verified", Type: field.TypeBool, Default: false},
		{Name: "dccs_rem_status", Type: field.TypeBool, Default: false},
		{Name: "dccs_remarks", Type: field.TypeString, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "dc_in_present_cadre_verified", Type: field.TypeBool, Default: false},
		{Name: "dc_in_present_cadre_rem_status", Type: field.TypeBool, Default: false},
		{Name: "dc_in_present_cadre_remarks", Type: field.TypeString, Nullable: true},
		{Name: "aps_working", Type: field.TypeBool, Nullable: true},
		{Name: "aps_working_verified", Type: field.TypeBool, Default: false},
		{Name: "aps_working_rem_status", Type: field.TypeBool, Default: false},
		{Name: "aps_working_remarks", Type: field.TypeString, Nullable: true},
		{Name: "profilestatus", Type: field.TypeBool, Default: false},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
		{Name: "directorate_users_employee_user", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_posts_emp_posts", Type: field.TypeInt32, Nullable: true},
	}
	// EmployeesTable holds the schema information for the "Employees" table.
	EmployeesTable = &schema.Table{
		Name:       "Employees",
		Columns:    EmployeesColumns,
		PrimaryKey: []*schema.Column{EmployeesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Employees_DirectorateUsers_employee_user",
				Columns:    []*schema.Column{EmployeesColumns[104]},
				RefColumns: []*schema.Column{DirectorateUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Employees_EmployeePosts_emp_posts",
				Columns:    []*schema.Column{EmployeesColumns[105]},
				RefColumns: []*schema.Column{EmployeePostsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ErrorLogsTableColumns holds the columns for the "ErrorLogsTable" table.
	ErrorLogsTableColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt64, Increment: true},
		{Name: "userid", Type: field.TypeString, Nullable: true},
		{Name: "uniqueid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "usertype", Type: field.TypeString, Nullable: true},
		{Name: "userdetails", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "action", Type: field.TypeString, Nullable: true},
		{Name: "ipaddress", Type: field.TypeString, Nullable: true},
		{Name: "devicetype", Type: field.TypeString, Nullable: true},
		{Name: "os", Type: field.TypeString, Nullable: true},
		{Name: "browser", Type: field.TypeString, Nullable: true},
		{Name: "latitude", Type: field.TypeFloat64, Nullable: true, Default: 0},
		{Name: "longitude", Type: field.TypeFloat64, Nullable: true, Default: 0},
		{Name: "eventtime", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "assigned_to", Type: field.TypeString, Nullable: true},
		{Name: "remarks_new", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "closed_on", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// ErrorLogsTableTable holds the schema information for the "ErrorLogsTable" table.
	ErrorLogsTableTable = &schema.Table{
		Name:       "ErrorLogsTable",
		Columns:    ErrorLogsTableColumns,
		PrimaryKey: []*schema.Column{ErrorLogsTableColumns[0]},
	}
	// ExamColumns holds the columns for the "Exam" table.
	ExamColumns = []*schema.Column{
		{Name: "UniqueID", Type: field.TypeInt32, Increment: true},
		{Name: "exam_type", Type: field.TypeString},
		{Name: "exam_name", Type: field.TypeString},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "calender_issued_by", Type: field.TypeString, Nullable: true},
		{Name: "notification_by", Type: field.TypeString},
		{Name: "conducted_by", Type: field.TypeString},
		{Name: "nodal_officer_level", Type: field.TypeString, Nullable: true},
		{Name: "tentative_notification_mandatory_date", Type: field.TypeBool, Default: false},
		{Name: "local_language", Type: field.TypeBool, Default: false},
		{Name: "option_for_post", Type: field.TypeBool, Default: false},
		{Name: "option_to_write_exam_other_than_parent", Type: field.TypeBool, Default: false},
		{Name: "table_name", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "verifiedbyid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "verifiedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "verifiedby_employeeid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "verifiedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "deletedbyid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deletedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "deletedby_employeeid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deletedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "num_of_papers", Type: field.TypeInt32},
		{Name: "calendar_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "paper_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "status", Type: field.TypeString},
		{Name: "exam_type_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "vacancy_year_exams", Type: field.TypeInt32, Nullable: true},
	}
	// ExamTable holds the schema information for the "Exam" table.
	ExamTable = &schema.Table{
		Name:       "Exam",
		Columns:    ExamColumns,
		PrimaryKey: []*schema.Column{ExamColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Exam_VacancyYears_exams",
				Columns:    []*schema.Column{ExamColumns[38]},
				RefColumns: []*schema.Column{VacancyYearsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamCalendarColumns holds the columns for the "ExamCalendar" table.
	ExamCalendarColumns = []*schema.Column{
		{Name: "CalendarCode", Type: field.TypeInt32, Increment: true},
		{Name: "exam_year", Type: field.TypeInt32},
		{Name: "exam_name", Type: field.TypeString},
		{Name: "notification_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "model_notification_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "application_end_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "approved_order_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "tentative_result_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "created_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "approved_order_number", Type: field.TypeString},
		{Name: "vacancy_years", Type: field.TypeJSON, Nullable: true},
		{Name: "exam_papers", Type: field.TypeJSON, Nullable: true},
		{Name: "exam_code_ps", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "paper_code", Type: field.TypeInt32, Nullable: true},
		{Name: "vacancy_year_code", Type: field.TypeInt32, Nullable: true},
	}
	// ExamCalendarTable holds the schema information for the "ExamCalendar" table.
	ExamCalendarTable = &schema.Table{
		Name:       "ExamCalendar",
		Columns:    ExamCalendarColumns,
		PrimaryKey: []*schema.Column{ExamCalendarColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ExamCalendar_Exam_exams_ref",
				Columns:    []*schema.Column{ExamCalendarColumns[13]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ExamCalendar_exam_papers_papers_ref",
				Columns:    []*schema.Column{ExamCalendarColumns[14]},
				RefColumns: []*schema.Column{ExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ExamCalendar_VacancyYears_vacancy_ref",
				Columns:    []*schema.Column{ExamCalendarColumns[15]},
				RefColumns: []*schema.Column{VacancyYearsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamCategoryDisabilityMappingColumns holds the columns for the "ExamCategoryDisabilityMapping" table.
	ExamCategoryDisabilityMappingColumns = []*schema.Column{
		{Name: "UniqueID", Type: field.TypeInt32, Increment: true},
		{Name: "exam_code", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "category_disability", Type: field.TypeString, Nullable: true},
		{Name: "category_disability_code", Type: field.TypeString, Nullable: true},
		{Name: "category_disability_description", Type: field.TypeString, Nullable: true},
		{Name: "age_exception", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "service_exception", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "driving_license", Type: field.TypeBool, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// ExamCategoryDisabilityMappingTable holds the schema information for the "ExamCategoryDisabilityMapping" table.
	ExamCategoryDisabilityMappingTable = &schema.Table{
		Name:       "ExamCategoryDisabilityMapping",
		Columns:    ExamCategoryDisabilityMappingColumns,
		PrimaryKey: []*schema.Column{ExamCategoryDisabilityMappingColumns[0]},
	}
	// ExamCenterHallColumns holds the columns for the "ExamCenterHall" table.
	ExamCenterHallColumns = []*schema.Column{
		{Name: "ExamCenterHall", Type: field.TypeInt32, Increment: true},
		{Name: "city_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "exam_center_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "center_city_name", Type: field.TypeString, Nullable: true},
		{Name: "conducted_by_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "conducted_by", Type: field.TypeString, Nullable: true},
		{Name: "hall_name", Type: field.TypeString, Nullable: true},
		{Name: "admin_circle_office_id", Type: field.TypeString, Nullable: true},
		{Name: "mapping_identification_number", Type: field.TypeJSON, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "modified_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "modified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "modified_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "modified_by_designantion", Type: field.TypeString, Nullable: true},
		{Name: "modified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "no_seats", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true, Default: 0},
	}
	// ExamCenterHallTable holds the schema information for the "ExamCenterHall" table.
	ExamCenterHallTable = &schema.Table{
		Name:       "ExamCenterHall",
		Columns:    ExamCenterHallColumns,
		PrimaryKey: []*schema.Column{ExamCenterHallColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ExamCenterHall_Center_ExaCenterHallRef",
				Columns:    []*schema.Column{ExamCenterHallColumns[30]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamCityCenterColumns holds the columns for the "ExamCityCenter" table.
	ExamCityCenterColumns = []*schema.Column{
		{Name: "ExamCityCentreCode", Type: field.TypeInt32, Increment: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "conducted_by", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_name", Type: field.TypeString, Nullable: true},
		{Name: "notification_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "notification_number", Type: field.TypeString, Nullable: true},
		{Name: "center_city_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "deletedbyid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deletedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "deletedby_employeeid", Type: field.TypeInt64, Nullable: true, Default: 0},
		{Name: "deletedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "circle_city_name", Type: field.TypeString, Nullable: true},
		{Name: "division_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "region_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "division_name", Type: field.TypeString, Nullable: true},
		{Name: "region_id", Type: field.TypeInt32, Nullable: true},
		{Name: "region_name", Type: field.TypeString, Nullable: true},
		{Name: "region_city_name", Type: field.TypeString, Nullable: true},
		{Name: "centre_city_name", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "centre_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "circle_id", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "center_examscentres", Type: field.TypeInt32, Nullable: true},
	}
	// ExamCityCenterTable holds the schema information for the "ExamCityCenter" table.
	ExamCityCenterTable = &schema.Table{
		Name:       "ExamCityCenter",
		Columns:    ExamCityCenterColumns,
		PrimaryKey: []*schema.Column{ExamCityCenterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ExamCityCenter_Center_Examscentres",
				Columns:    []*schema.Column{ExamCityCenterColumns[35]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamNotificationsColumns holds the columns for the "ExamNotifications" table.
	ExamNotificationsColumns = []*schema.Column{
		{Name: "NotificationCode", Type: field.TypeInt32, Increment: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_master_request_last_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "employee_master_request_approval_last_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_register_last_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "application_start_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "application_end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "application_correction_start_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "application_correction_last_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "application_verification_last_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "center_allotment_end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "nodal_officer_approval_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "admit_card_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "crucial_date", Type: field.TypeJSON, Nullable: true},
		{Name: "designation", Type: field.TypeString, Nullable: true},
		{Name: "officer_name", Type: field.TypeString, Nullable: true},
		{Name: "notification_order_number", Type: field.TypeString, Nullable: true},
		{Name: "notesheet_scanned_copy", Type: field.TypeString, Nullable: true},
		{Name: "notification_number", Type: field.TypeString, Nullable: true},
		{Name: "flag", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "circle_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "circle_office_name", Type: field.TypeString, Nullable: true},
		{Name: "issued_by", Type: field.TypeString, Nullable: true},
		{Name: "order_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "approved_by", Type: field.TypeString, Nullable: true},
		{Name: "approved_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "approved_by_name", Type: field.TypeString, Nullable: true},
		{Name: "approved_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "resubmitted_application_verification_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "papers", Type: field.TypeJSON, Nullable: true},
		{Name: "notification_status", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "notification_re_issue_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "edit_flag_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "notification_remarks", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_exam_notifications_ref", Type: field.TypeInt32, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// ExamNotificationsTable holds the schema information for the "ExamNotifications" table.
	ExamNotificationsTable = &schema.Table{
		Name:       "ExamNotifications",
		Columns:    ExamNotificationsColumns,
		PrimaryKey: []*schema.Column{ExamNotificationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ExamNotifications_Exam_Exam_Notifications_Ref",
				Columns:    []*schema.Column{ExamNotificationsColumns[46]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "ExamNotifications_UserMaster_User_ID_Ref",
				Columns:    []*schema.Column{ExamNotificationsColumns[47]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamPapersColumns holds the columns for the "exam_papers" table.
	ExamPapersColumns = []*schema.Column{
		{Name: "PaperCode", Type: field.TypeInt32, Increment: true},
		{Name: "paper_description", Type: field.TypeString},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "paper_type_code", Type: field.TypeInt32, Nullable: true},
		{Name: "paper_type_name", Type: field.TypeString, Nullable: true},
		{Name: "competitive_qualifying", Type: field.TypeBool, Default: false},
		{Name: "exception_for_disability", Type: field.TypeBool, Default: false},
		{Name: "maximum_marks", Type: field.TypeInt},
		{Name: "duration", Type: field.TypeInt},
		{Name: "local_language_allowed_question_paper", Type: field.TypeString, Size: 10},
		{Name: "local_language_allowed_answer_paper", Type: field.TypeString, Size: 10},
		{Name: "disability_type_id", Type: field.TypeInt32, Nullable: true},
		{Name: "from_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "to_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "verifiedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "verifiedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "verifiedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "deletedbyid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedbyusername", Type: field.TypeString, Nullable: true},
		{Name: "deletedby_employeeid", Type: field.TypeInt64, Nullable: true},
		{Name: "deletedby_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "paper_status", Type: field.TypeString, Size: 10},
		{Name: "calendar_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code_ps", Type: field.TypeInt32, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_dis_ref", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_papers", Type: field.TypeInt32, Nullable: true},
	}
	// ExamPapersTable holds the schema information for the "exam_papers" table.
	ExamPapersTable = &schema.Table{
		Name:       "exam_papers",
		Columns:    ExamPapersColumns,
		PrimaryKey: []*schema.Column{ExamPapersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "exam_papers_Disability_dis_ref",
				Columns:    []*schema.Column{ExamPapersColumns[37]},
				RefColumns: []*schema.Column{DisabilityColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "exam_papers_Exam_papers",
				Columns:    []*schema.Column{ExamPapersColumns[38]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamPostMappingColumns holds the columns for the "ExamPostMapping" table.
	ExamPostMappingColumns = []*schema.Column{
		{Name: "UniqueID", Type: field.TypeInt, Increment: true},
		{Name: "exam_code", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_short_description", Type: field.TypeString, Nullable: true},
		{Name: "post_type", Type: field.TypeInt, Nullable: true},
		{Name: "post_type_description", Type: field.TypeString, Nullable: true},
		{Name: "from_post_code", Type: field.TypeString, Nullable: true},
		{Name: "from_post_description", Type: field.TypeString, Nullable: true},
		{Name: "to_post_code", Type: field.TypeString, Nullable: true},
		{Name: "to_post_description", Type: field.TypeString, Nullable: true},
		{Name: "age_criteria", Type: field.TypeInt, Nullable: true},
		{Name: "service_criteria", Type: field.TypeInt, Nullable: true},
		{Name: "education_code", Type: field.TypeInt32, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeString, Nullable: true},
	}
	// ExamPostMappingTable holds the schema information for the "ExamPostMapping" table.
	ExamPostMappingTable = &schema.Table{
		Name:       "ExamPostMapping",
		Columns:    ExamPostMappingColumns,
		PrimaryKey: []*schema.Column{ExamPostMappingColumns[0]},
	}
	// ExamTypeColumns holds the columns for the "ExamType" table.
	ExamTypeColumns = []*schema.Column{
		{Name: "ExamTypeCode", Type: field.TypeInt32, Increment: true},
		{Name: "exam_type", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
	}
	// ExamTypeTable holds the schema information for the "ExamType" table.
	ExamTypeTable = &schema.Table{
		Name:       "ExamType",
		Columns:    ExamTypeColumns,
		PrimaryKey: []*schema.Column{ExamTypeColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ExamType_Exam_exams_type",
				Columns:    []*schema.Column{ExamTypeColumns[3]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ExamApplicationMTSPMMGColumns holds the columns for the "Exam_Application_MTSPMMG" table.
	ExamApplicationMTSPMMGColumns = []*schema.Column{
		{Name: "ApplicationID", Type: field.TypeInt64, Increment: true},
		{Name: "application_number", Type: field.TypeString, Nullable: true},
		{Name: "appln_submitted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "category_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_code", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeInt32, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_code", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_description", Type: field.TypeString, Nullable: true},
		{Name: "present_post_code", Type: field.TypeString, Nullable: true},
		{Name: "present_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_code", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_joining_date", Type: field.TypeString, Nullable: true},
		{Name: "designation_id", Type: field.TypeString, Nullable: true},
		{Name: "present_designation", Type: field.TypeString, Nullable: true},
		{Name: "education_code", Type: field.TypeString, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "facility_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_pincode", Type: field.TypeInt32, Nullable: true},
		{Name: "working_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_name", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "in_deputation", Type: field.TypeString, Nullable: true},
		{Name: "deputation_type", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_name", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_name", Type: field.TypeString, Nullable: true},
		{Name: "center_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "centre_preference", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "signature_path", Type: field.TypeString, Nullable: true},
		{Name: "photo_path", Type: field.TypeString, Nullable: true},
		{Name: "temp_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "candidate_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "va_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "va_user_name", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "va_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "na_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "na_user_name", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "na_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "appliaction_remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "ca_previous_remarks", Type: field.TypeString, Nullable: true},
		{Name: "punishment_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "disciplinary_case_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_number", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "hall_ticket_generated_flag", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag_by_no", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_generated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "temporary_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "option_used", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "doj_in_eligible_post", Type: field.TypeString, Nullable: true},
		{Name: "division_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "gds_engagement", Type: field.TypeJSON, Nullable: true},
		{Name: "facility_name", Type: field.TypeString, Nullable: true},
		{Name: "service_length", Type: field.TypeJSON, Nullable: true},
		{Name: "non_qualifying_service", Type: field.TypeJSON, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_id", Type: field.TypeString, Nullable: true},
		{Name: "post_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "unit_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "center_id", Type: field.TypeInt32, Nullable: true},
		{Name: "claiming_qualifying_service", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_pincode", Type: field.TypeString, Nullable: true},
		{Name: "recommended_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_wdl_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_center_hall", Type: field.TypeInt32, Nullable: true},
		{Name: "hall_name", Type: field.TypeString, Nullable: true},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true},
		{Name: "circle_sid", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_city_center_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
	}
	// ExamApplicationMTSPMMGTable holds the schema information for the "Exam_Application_MTSPMMG" table.
	ExamApplicationMTSPMMGTable = &schema.Table{
		Name:       "Exam_Application_MTSPMMG",
		Columns:    ExamApplicationMTSPMMGColumns,
		PrimaryKey: []*schema.Column{ExamApplicationMTSPMMGColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Exam_Application_MTSPMMG_Center_ExamCentresRefMTSPMMG",
				Columns:    []*schema.Column{ExamApplicationMTSPMMGColumns[122]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Application_MTSPMMG_CircleSummaryForNO_CircleRefsForHallTicketMTSPMMG",
				Columns:    []*schema.Column{ExamApplicationMTSPMMGColumns[123]},
				RefColumns: []*schema.Column{CircleSummaryForNOColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Application_MTSPMMG_Exam_ExamMasterRefMTSPMMG",
				Columns:    []*schema.Column{ExamApplicationMTSPMMGColumns[124]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Application_MTSPMMG_ExamCityCenter_ExamCityCenterMTSPMMGRef",
				Columns:    []*schema.Column{ExamApplicationMTSPMMGColumns[125]},
				RefColumns: []*schema.Column{ExamCityCenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Application_MTSPMMG_RoleMaster_Roles_MTSPMMG_Ref",
				Columns:    []*schema.Column{ExamApplicationMTSPMMGColumns[126]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exam_application_mtspmmg_employee_id_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationMTSPMMGColumns[8], ExamApplicationMTSPMMGColumns[6], ExamApplicationMTSPMMGColumns[69]},
			},
			{
				Name:    "exam_application_mtspmmg_application_number_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationMTSPMMGColumns[1], ExamApplicationMTSPMMGColumns[6], ExamApplicationMTSPMMGColumns[69]},
			},
			{
				Name:    "exam_application_mtspmmg_controlling_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationMTSPMMGColumns[53], ExamApplicationMTSPMMGColumns[6], ExamApplicationMTSPMMGColumns[69]},
			},
			{
				Name:    "exam_application_mtspmmg_nodal_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationMTSPMMGColumns[55], ExamApplicationMTSPMMGColumns[6], ExamApplicationMTSPMMGColumns[69]},
			},
		},
	}
	// ExamApplicationsGDSPAColumns holds the columns for the "Exam_Applications_GDSPA" table.
	ExamApplicationsGDSPAColumns = []*schema.Column{
		{Name: "ApplicationID", Type: field.TypeInt64, Increment: true},
		{Name: "application_number", Type: field.TypeString, Nullable: true},
		{Name: "appln_submitted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "category_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_code", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeInt32, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_code", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_description", Type: field.TypeString, Nullable: true},
		{Name: "present_post_code", Type: field.TypeString, Nullable: true},
		{Name: "present_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_code", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_joining_date", Type: field.TypeString, Nullable: true},
		{Name: "present_designation", Type: field.TypeString, Nullable: true},
		{Name: "education_code", Type: field.TypeString, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "facility_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_pincode", Type: field.TypeInt32, Nullable: true},
		{Name: "working_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_name", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "in_deputation", Type: field.TypeString, Nullable: true},
		{Name: "deputation_type", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_name", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "subdivision_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "subdivision_office_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_name", Type: field.TypeString, Nullable: true},
		{Name: "center_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "centre_preference", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "signature_path", Type: field.TypeString, Nullable: true},
		{Name: "photo_path", Type: field.TypeString, Nullable: true},
		{Name: "temp_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "candidate_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "recommended_status", Type: field.TypeString, Nullable: true},
		{Name: "designation_id", Type: field.TypeString, Nullable: true},
		{Name: "va_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "va_user_name", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "va_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "na_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "na_user_name", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "na_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "appliaction_remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "ca_previous_remarks", Type: field.TypeString, Nullable: true},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "punishment_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "disciplinary_case_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "hall_ticket_number", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "hall_ticket_generated_flag", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag_by_no", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_generated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "temporary_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "option_used", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "doj_in_eligible_post", Type: field.TypeString, Nullable: true},
		{Name: "division_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "service_length", Type: field.TypeJSON, Nullable: true},
		{Name: "non_qualifying_service", Type: field.TypeJSON, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_id", Type: field.TypeString, Nullable: true},
		{Name: "post_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "unit_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "center_id", Type: field.TypeInt32, Nullable: true},
		{Name: "claiming_qualifying_service", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_pincode", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_wdl_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_center_hall", Type: field.TypeInt32, Nullable: true},
		{Name: "hall_name", Type: field.TypeString, Nullable: true},
		{Name: "facility_name", Type: field.TypeString, Nullable: true},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true},
		{Name: "circle_sid", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_city_center_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
		{Name: "user_master_users_gdspa_ref", Type: field.TypeInt64, Nullable: true},
	}
	// ExamApplicationsGDSPATable holds the schema information for the "Exam_Applications_GDSPA" table.
	ExamApplicationsGDSPATable = &schema.Table{
		Name:       "Exam_Applications_GDSPA",
		Columns:    ExamApplicationsGDSPAColumns,
		PrimaryKey: []*schema.Column{ExamApplicationsGDSPAColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Exam_Applications_GDSPA_Center_ExamCentresRefGDSPA",
				Columns:    []*schema.Column{ExamApplicationsGDSPAColumns[123]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPA_CircleSummaryForNO_CircleRefsForHallTicketGDSPA",
				Columns:    []*schema.Column{ExamApplicationsGDSPAColumns[124]},
				RefColumns: []*schema.Column{CircleSummaryForNOColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPA_Exam_ExamMasterRefGDSPA",
				Columns:    []*schema.Column{ExamApplicationsGDSPAColumns[125]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPA_ExamCityCenter_ExamCityCenterGDSPARef",
				Columns:    []*schema.Column{ExamApplicationsGDSPAColumns[126]},
				RefColumns: []*schema.Column{ExamCityCenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPA_RoleMaster_Roles_GDSPA_Ref",
				Columns:    []*schema.Column{ExamApplicationsGDSPAColumns[127]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPA_UserMaster_UsersGDSPARef",
				Columns:    []*schema.Column{ExamApplicationsGDSPAColumns[128]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exam_applications_gdspa_employee_id_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsGDSPAColumns[8], ExamApplicationsGDSPAColumns[6], ExamApplicationsGDSPAColumns[70]},
			},
			{
				Name:    "exam_applications_gdspa_application_number_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsGDSPAColumns[1], ExamApplicationsGDSPAColumns[6], ExamApplicationsGDSPAColumns[70]},
			},
			{
				Name:    "exam_applications_gdspa_controlling_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsGDSPAColumns[52], ExamApplicationsGDSPAColumns[6], ExamApplicationsGDSPAColumns[70]},
			},
			{
				Name:    "exam_applications_gdspa_nodal_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsGDSPAColumns[56], ExamApplicationsGDSPAColumns[6], ExamApplicationsGDSPAColumns[70]},
			},
		},
	}
	// ExamApplicationsGDSPMColumns holds the columns for the "Exam_Applications_GDSPM" table.
	ExamApplicationsGDSPMColumns = []*schema.Column{
		{Name: "ApplicationID", Type: field.TypeInt64, Increment: true},
		{Name: "application_number", Type: field.TypeString, Nullable: true},
		{Name: "appln_submitted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "category_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_code", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeInt32, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_code", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_description", Type: field.TypeString, Nullable: true},
		{Name: "present_post_code", Type: field.TypeString, Nullable: true},
		{Name: "present_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_code", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_joining_date", Type: field.TypeString, Nullable: true},
		{Name: "designation_id", Type: field.TypeString, Nullable: true},
		{Name: "present_designation", Type: field.TypeString, Nullable: true},
		{Name: "education_code", Type: field.TypeString, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "facility_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_pincode", Type: field.TypeInt32, Nullable: true},
		{Name: "working_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_name", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "in_deputation", Type: field.TypeString, Nullable: true},
		{Name: "deputation_type", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_name", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_name", Type: field.TypeString, Nullable: true},
		{Name: "subdivision_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "subdivision_office_name", Type: field.TypeString, Nullable: true},
		{Name: "center_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "centre_preference", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "signature_path", Type: field.TypeString, Nullable: true},
		{Name: "photo_path", Type: field.TypeString, Nullable: true},
		{Name: "temp_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "candidate_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "recommended_status", Type: field.TypeString, Nullable: true},
		{Name: "application_wdl_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "va_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "va_user_name", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "va_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "na_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "na_user_name", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "na_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "appliaction_remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "ca_previous_remarks", Type: field.TypeString, Nullable: true},
		{Name: "punishment_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "disciplinary_case_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_number", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "hall_ticket_generated_flag", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag_by_no", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_generated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "temporary_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "option_used", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "doj_in_eligible_post", Type: field.TypeString, Nullable: true},
		{Name: "division_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "service_length", Type: field.TypeJSON, Nullable: true},
		{Name: "non_qualifying_service", Type: field.TypeJSON, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_id", Type: field.TypeString, Nullable: true},
		{Name: "post_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "unit_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "center_id", Type: field.TypeInt32, Nullable: true},
		{Name: "claiming_qualifying_service", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_pincode", Type: field.TypeString, Nullable: true},
		{Name: "facility_name", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "exam_center_hall", Type: field.TypeInt32, Nullable: true},
		{Name: "hall_name", Type: field.TypeString, Nullable: true},
		{Name: "gds_engagement", Type: field.TypeJSON, Nullable: true},
		{Name: "pm_mail_guard_mts_engagement", Type: field.TypeJSON, Nullable: true},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true},
		{Name: "circle_sid", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_city_center_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
		{Name: "user_master_users_gdspm_ref", Type: field.TypeInt64, Nullable: true},
	}
	// ExamApplicationsGDSPMTable holds the schema information for the "Exam_Applications_GDSPM" table.
	ExamApplicationsGDSPMTable = &schema.Table{
		Name:       "Exam_Applications_GDSPM",
		Columns:    ExamApplicationsGDSPMColumns,
		PrimaryKey: []*schema.Column{ExamApplicationsGDSPMColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Exam_Applications_GDSPM_Center_ExamCentresRefGDSPM",
				Columns:    []*schema.Column{ExamApplicationsGDSPMColumns[125]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPM_CircleSummaryForNO_CircleRefsForHallTicketGDSPM",
				Columns:    []*schema.Column{ExamApplicationsGDSPMColumns[126]},
				RefColumns: []*schema.Column{CircleSummaryForNOColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPM_Exam_ExamMasterRefGDSPM",
				Columns:    []*schema.Column{ExamApplicationsGDSPMColumns[127]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPM_ExamCityCenter_ExamCityCenterGDSPMRef",
				Columns:    []*schema.Column{ExamApplicationsGDSPMColumns[128]},
				RefColumns: []*schema.Column{ExamCityCenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPM_RoleMaster_Roles_GDSPM_Ref",
				Columns:    []*schema.Column{ExamApplicationsGDSPMColumns[129]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_GDSPM_UserMaster_UsersGDSPMRef",
				Columns:    []*schema.Column{ExamApplicationsGDSPMColumns[130]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exam_applications_gdspm_employee_id_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsGDSPMColumns[8], ExamApplicationsGDSPMColumns[6], ExamApplicationsGDSPMColumns[71]},
			},
			{
				Name:    "exam_applications_gdspm_application_number_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsGDSPMColumns[1], ExamApplicationsGDSPMColumns[6], ExamApplicationsGDSPMColumns[71]},
			},
			{
				Name:    "exam_applications_gdspm_controlling_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsGDSPMColumns[53], ExamApplicationsGDSPMColumns[6], ExamApplicationsGDSPMColumns[71]},
			},
			{
				Name:    "exam_applications_gdspm_nodal_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsGDSPMColumns[55], ExamApplicationsGDSPMColumns[6], ExamApplicationsGDSPMColumns[71]},
			},
		},
	}
	// ExamApplicationsIPColumns holds the columns for the "Exam_Applications_IP" table.
	ExamApplicationsIPColumns = []*schema.Column{
		{Name: "ApplicationID", Type: field.TypeInt64, Increment: true},
		{Name: "application_number", Type: field.TypeString, Nullable: true},
		{Name: "appln_submitted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "category_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_code", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeInt32, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_code", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_description", Type: field.TypeString, Nullable: true},
		{Name: "present_post_code", Type: field.TypeString, Nullable: true},
		{Name: "present_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_code", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_joining_date", Type: field.TypeString, Nullable: true},
		{Name: "designation_id", Type: field.TypeString, Nullable: true},
		{Name: "present_designation", Type: field.TypeString, Nullable: true},
		{Name: "education_code", Type: field.TypeString, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "facility_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_pincode", Type: field.TypeInt32, Nullable: true},
		{Name: "working_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_name", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "in_deputation", Type: field.TypeString, Nullable: true},
		{Name: "deputation_type", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_name", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_name", Type: field.TypeString, Nullable: true},
		{Name: "center_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "centre_preference", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "signature_path", Type: field.TypeString, Nullable: true},
		{Name: "photo_path", Type: field.TypeString, Nullable: true},
		{Name: "temp_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "candidate_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "va_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "va_user_name", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "va_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "na_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "na_user_name", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "na_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "appliaction_remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "ca_previous_remarks", Type: field.TypeString, Nullable: true},
		{Name: "punishment_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "disciplinary_case_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_number", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "hall_ticket_generated_flag", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag_by_no", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_generated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "temporary_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "option_used", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "doj_in_eligible_post", Type: field.TypeString, Nullable: true},
		{Name: "division_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "facility_name", Type: field.TypeString, Nullable: true},
		{Name: "service_length", Type: field.TypeJSON, Nullable: true},
		{Name: "non_qualifying_service", Type: field.TypeJSON, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "center_id", Type: field.TypeInt32, Nullable: true},
		{Name: "claiming_qualifying_service", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_pincode", Type: field.TypeString, Nullable: true},
		{Name: "recommended_status", Type: field.TypeString, Nullable: true},
		{Name: "application_wdl_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "hall_identification_number", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "exam_center_hall", Type: field.TypeInt32, Nullable: true},
		{Name: "hall_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_id", Type: field.TypeString, Nullable: true},
		{Name: "ca_corrected", Type: field.TypeString, Nullable: true},
		{Name: "ca_corrected_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true},
		{Name: "circle_sid", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_exam_master_ref", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_city_center_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
		{Name: "user_master_users_ip_ref", Type: field.TypeInt64, Nullable: true},
	}
	// ExamApplicationsIPTable holds the schema information for the "Exam_Applications_IP" table.
	ExamApplicationsIPTable = &schema.Table{
		Name:       "Exam_Applications_IP",
		Columns:    ExamApplicationsIPColumns,
		PrimaryKey: []*schema.Column{ExamApplicationsIPColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Exam_Applications_IP_Center_ExamCentresRef",
				Columns:    []*schema.Column{ExamApplicationsIPColumns[123]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_IP_CircleSummaryForNO_CircleRefsForHallTicketIP",
				Columns:    []*schema.Column{ExamApplicationsIPColumns[124]},
				RefColumns: []*schema.Column{CircleSummaryForNOColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_IP_Exam_ExamMasterRef",
				Columns:    []*schema.Column{ExamApplicationsIPColumns[125]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_IP_ExamCityCenter_ExamCityCenterRef",
				Columns:    []*schema.Column{ExamApplicationsIPColumns[126]},
				RefColumns: []*schema.Column{ExamCityCenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_IP_RoleMaster_Roles_IP_Ref",
				Columns:    []*schema.Column{ExamApplicationsIPColumns[127]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_IP_UserMaster_UsersIPRef",
				Columns:    []*schema.Column{ExamApplicationsIPColumns[128]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exam_applications_ip_employee_id_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsIPColumns[9], ExamApplicationsIPColumns[7], ExamApplicationsIPColumns[70]},
			},
			{
				Name:    "exam_applications_ip_application_number_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsIPColumns[1], ExamApplicationsIPColumns[7], ExamApplicationsIPColumns[70]},
			},
			{
				Name:    "exam_applications_ip_controlling_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsIPColumns[54], ExamApplicationsIPColumns[7], ExamApplicationsIPColumns[70]},
			},
			{
				Name:    "exam_applications_ip_nodal_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsIPColumns[56], ExamApplicationsIPColumns[7], ExamApplicationsIPColumns[70]},
			},
		},
	}
	// ExamApplicationsPMPAColumns holds the columns for the "Exam_Applications_PMPA" table.
	ExamApplicationsPMPAColumns = []*schema.Column{
		{Name: "ApplicationID", Type: field.TypeInt64, Increment: true},
		{Name: "application_number", Type: field.TypeString, Nullable: true},
		{Name: "appln_submitted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "category_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_code", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeInt32, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_code", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_description", Type: field.TypeString, Nullable: true},
		{Name: "present_post_code", Type: field.TypeString, Nullable: true},
		{Name: "present_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_code", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_joining_date", Type: field.TypeString, Nullable: true},
		{Name: "designation_id", Type: field.TypeString, Nullable: true},
		{Name: "present_designation", Type: field.TypeString, Nullable: true},
		{Name: "education_code", Type: field.TypeString, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "facility_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_pincode", Type: field.TypeInt32, Nullable: true},
		{Name: "working_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_name", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "in_deputation", Type: field.TypeString, Nullable: true},
		{Name: "deputation_type", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_name", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_name", Type: field.TypeString, Nullable: true},
		{Name: "center_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "centre_preference", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "candidate_photo", Type: field.TypeBytes, Nullable: true},
		{Name: "candidate_signature", Type: field.TypeBytes, Nullable: true},
		{Name: "signature_path", Type: field.TypeString, Nullable: true},
		{Name: "photo_path", Type: field.TypeString, Nullable: true},
		{Name: "temp_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "candidate_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "va_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "va_user_name", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "va_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "na_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "na_user_name", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "na_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "appliaction_remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "ca_previous_remarks", Type: field.TypeString, Nullable: true},
		{Name: "punishment_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "disciplinary_case_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_number", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "hall_ticket_generated_flag", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag_by_no", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_generated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "temporary_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "option_used", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "doj_in_eligible_post", Type: field.TypeString, Nullable: true},
		{Name: "division_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "latitude_longitude", Type: field.TypeString, Nullable: true},
		{Name: "facility_name", Type: field.TypeString, Nullable: true},
		{Name: "service_length", Type: field.TypeJSON, Nullable: true},
		{Name: "non_qualifying_service", Type: field.TypeJSON, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_id", Type: field.TypeString, Nullable: true},
		{Name: "circle_id", Type: field.TypeInt32, Nullable: true},
		{Name: "region_id", Type: field.TypeInt32, Nullable: true},
		{Name: "division_id", Type: field.TypeInt32, Nullable: true},
		{Name: "post_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "unit_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "pm_mail_guard_mts_engagement", Type: field.TypeJSON, Nullable: true},
		{Name: "center_id", Type: field.TypeInt32, Nullable: true},
		{Name: "claiming_qualifying_service", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_pincode", Type: field.TypeString, Nullable: true},
		{Name: "recommended_status", Type: field.TypeString, Nullable: true},
		{Name: "application_wdl_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "exam_center_hall", Type: field.TypeInt32, Nullable: true},
		{Name: "hall_name", Type: field.TypeString, Nullable: true},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true},
		{Name: "circle_sid", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_city_center_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
		{Name: "user_master_users_pmpa_ref", Type: field.TypeInt64, Nullable: true},
	}
	// ExamApplicationsPMPATable holds the schema information for the "Exam_Applications_PMPA" table.
	ExamApplicationsPMPATable = &schema.Table{
		Name:       "Exam_Applications_PMPA",
		Columns:    ExamApplicationsPMPAColumns,
		PrimaryKey: []*schema.Column{ExamApplicationsPMPAColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Exam_Applications_PMPA_Center_ExamCentresRefPMPA",
				Columns:    []*schema.Column{ExamApplicationsPMPAColumns[129]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PMPA_CircleSummaryForNO_CircleRefsForHallTicketPMPA",
				Columns:    []*schema.Column{ExamApplicationsPMPAColumns[130]},
				RefColumns: []*schema.Column{CircleSummaryForNOColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PMPA_Exam_ExamMasterRefPMPA",
				Columns:    []*schema.Column{ExamApplicationsPMPAColumns[131]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PMPA_ExamCityCenter_ExamCityCenterPMPARef",
				Columns:    []*schema.Column{ExamApplicationsPMPAColumns[132]},
				RefColumns: []*schema.Column{ExamCityCenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PMPA_RoleMaster_Roles_PMPA_Ref",
				Columns:    []*schema.Column{ExamApplicationsPMPAColumns[133]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PMPA_UserMaster_UsersPMPARef",
				Columns:    []*schema.Column{ExamApplicationsPMPAColumns[134]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exam_applications_pmpa_employee_id_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsPMPAColumns[8], ExamApplicationsPMPAColumns[6], ExamApplicationsPMPAColumns[71]},
			},
			{
				Name:    "exam_applications_pmpa_application_number_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsPMPAColumns[1], ExamApplicationsPMPAColumns[6], ExamApplicationsPMPAColumns[71]},
			},
			{
				Name:    "exam_applications_pmpa_controlling_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsPMPAColumns[53], ExamApplicationsPMPAColumns[6], ExamApplicationsPMPAColumns[71]},
			},
			{
				Name:    "exam_applications_pmpa_nodal_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsPMPAColumns[55], ExamApplicationsPMPAColumns[6], ExamApplicationsPMPAColumns[71]},
			},
		},
	}
	// ExamApplicationsPSColumns holds the columns for the "Exam_Applications_PS" table.
	ExamApplicationsPSColumns = []*schema.Column{
		{Name: "ApplicationID", Type: field.TypeInt64, Increment: true},
		{Name: "application_number", Type: field.TypeString, Nullable: true},
		{Name: "appln_submitted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "sms_exam_short_name", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "category_code", Type: field.TypeString, Nullable: true},
		{Name: "category_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_code", Type: field.TypeString, Nullable: true},
		{Name: "disability_type_description", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeInt32, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_code", Type: field.TypeString, Nullable: true},
		{Name: "entry_post_description", Type: field.TypeString, Nullable: true},
		{Name: "present_post_code", Type: field.TypeString, Nullable: true},
		{Name: "present_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_code", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_description", Type: field.TypeString, Nullable: true},
		{Name: "feeder_post_joining_date", Type: field.TypeString, Nullable: true},
		{Name: "designation_id", Type: field.TypeString, Nullable: true},
		{Name: "present_designation", Type: field.TypeString, Nullable: true},
		{Name: "education_code", Type: field.TypeString, Nullable: true},
		{Name: "education_description", Type: field.TypeString, Nullable: true},
		{Name: "facility_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_pincode", Type: field.TypeInt32, Nullable: true},
		{Name: "working_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_circle_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_region_name", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "working_office_division_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_name", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "lien_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "in_deputation", Type: field.TypeString, Nullable: true},
		{Name: "deputation_type", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_unique_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_name", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_id", Type: field.TypeString, Nullable: true},
		{Name: "deputation_controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_office_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_office_name", Type: field.TypeString, Nullable: true},
		{Name: "center_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "centre_preference", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "signature_path", Type: field.TypeString, Nullable: true},
		{Name: "photo_path", Type: field.TypeString, Nullable: true},
		{Name: "temp_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "candidate_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_general_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "va_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "va_user_name", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "va_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "va_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "ca_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "na_user_id", Type: field.TypeInt32, Nullable: true},
		{Name: "na_user_name", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "na_employee_designation", Type: field.TypeString, Nullable: true},
		{Name: "na_remarks", Type: field.TypeString, Nullable: true},
		{Name: "na_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "appliaction_remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "ca_previous_remarks", Type: field.TypeString, Nullable: true},
		{Name: "punishment_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "disciplinary_case_status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_number", Type: field.TypeString, Nullable: true, Default: ""},
		{Name: "hall_ticket_generated_flag", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "generate_hall_ticket_flag_by_no", Type: field.TypeBool, Nullable: true},
		{Name: "hall_ticket_generated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "temporary_hall_ticket", Type: field.TypeString, Nullable: true},
		{Name: "option_used", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "doj_in_eligible_post", Type: field.TypeString, Nullable: true},
		{Name: "division_preferences", Type: field.TypeJSON, Nullable: true},
		{Name: "facility_name", Type: field.TypeString, Nullable: true},
		{Name: "service_length", Type: field.TypeJSON, Nullable: true},
		{Name: "non_qualifying_service", Type: field.TypeJSON, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "center_id", Type: field.TypeInt32, Nullable: true},
		{Name: "claiming_qualifying_service", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_pincode", Type: field.TypeString, Nullable: true},
		{Name: "recommended_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_wdl_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "exam_center_hall", Type: field.TypeInt32, Nullable: true},
		{Name: "hall_name", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_id", Type: field.TypeString, Nullable: true},
		{Name: "center_code", Type: field.TypeInt32, Nullable: true},
		{Name: "circle_sid", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_master_emp_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_city_center_code", Type: field.TypeInt32, Nullable: true, Default: 0},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
		{Name: "user_master_users_ps_ref", Type: field.TypeInt64, Nullable: true},
	}
	// ExamApplicationsPSTable holds the schema information for the "Exam_Applications_PS" table.
	ExamApplicationsPSTable = &schema.Table{
		Name:       "Exam_Applications_PS",
		Columns:    ExamApplicationsPSColumns,
		PrimaryKey: []*schema.Column{ExamApplicationsPSColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Exam_Applications_PS_Center_ExamCentresRefPS",
				Columns:    []*schema.Column{ExamApplicationsPSColumns[119]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PS_CircleSummaryForNO_CircleRefsForHallTicketPS",
				Columns:    []*schema.Column{ExamApplicationsPSColumns[120]},
				RefColumns: []*schema.Column{CircleSummaryForNOColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PS_EmployeeMaster_Emp_Ref",
				Columns:    []*schema.Column{ExamApplicationsPSColumns[121]},
				RefColumns: []*schema.Column{EmployeeMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PS_Exam_ExamMasterRefPS",
				Columns:    []*schema.Column{ExamApplicationsPSColumns[122]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PS_ExamCityCenter_ExamCityCenterPSRef",
				Columns:    []*schema.Column{ExamApplicationsPSColumns[123]},
				RefColumns: []*schema.Column{ExamCityCenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PS_RoleMaster_Roles_PS_Ref",
				Columns:    []*schema.Column{ExamApplicationsPSColumns[124]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Exam_Applications_PS_UserMaster_UsersPSRef",
				Columns:    []*schema.Column{ExamApplicationsPSColumns[125]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "exam_applications_ps_employee_id_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsPSColumns[8], ExamApplicationsPSColumns[6], ExamApplicationsPSColumns[69]},
			},
			{
				Name:    "exam_applications_ps_application_number_exam_year_status",
				Unique:  true,
				Columns: []*schema.Column{ExamApplicationsPSColumns[1], ExamApplicationsPSColumns[6], ExamApplicationsPSColumns[69]},
			},
			{
				Name:    "exam_applications_ps_controlling_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsPSColumns[53], ExamApplicationsPSColumns[6], ExamApplicationsPSColumns[69]},
			},
			{
				Name:    "exam_applications_ps_nodal_office_facility_id_exam_year_status",
				Unique:  false,
				Columns: []*schema.Column{ExamApplicationsPSColumns[55], ExamApplicationsPSColumns[6], ExamApplicationsPSColumns[69]},
			},
		},
	}
	// FacilityMastersColumns holds the columns for the "FacilityMasters" table.
	FacilityMastersColumns = []*schema.Column{
		{Name: "uniqueid", Type: field.TypeInt32, Increment: true},
		{Name: "facility_id", Type: field.TypeString, Nullable: true},
		{Name: "uuid", Type: field.TypeInt64, Nullable: true},
		{Name: "facility_type", Type: field.TypeString, Nullable: true},
		{Name: "facility_id_description", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "reporting_office_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "ho_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "ho_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "sub_division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "sub_division_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "division_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "division_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "region_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "region_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "circle_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "pincode", Type: field.TypeString, Nullable: true},
		{Name: "controlling_authority_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "controlling_authority_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "nodal_officer_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "nodal_officer_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "city_name", Type: field.TypeString, Nullable: true},
		{Name: "hall_circle_code", Type: field.TypeString, Nullable: true},
		{Name: "delivery_non_delivery_office", Type: field.TypeString, Nullable: true},
		{Name: "created_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by", Type: field.TypeString, Nullable: true},
		{Name: "created_by_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_emp_id", Type: field.TypeString, Nullable: true},
		{Name: "circle_code", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "Active"},
		{Name: "event_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// FacilityMastersTable holds the schema information for the "FacilityMasters" table.
	FacilityMastersTable = &schema.Table{
		Name:       "FacilityMasters",
		Columns:    FacilityMastersColumns,
		PrimaryKey: []*schema.Column{FacilityMastersColumns[0]},
	}
	// LoginColumns holds the columns for the "Login" table.
	LoginColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "login_id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "password", Type: field.TypeString},
		{Name: "employeed_id", Type: field.TypeInt32, Nullable: true},
		{Name: "expiremins_token", Type: field.TypeInt32},
		{Name: "expiremins_refresh_token", Type: field.TypeInt32},
		{Name: "role", Type: field.TypeInt32},
		{Name: "token", Type: field.TypeString},
		{Name: "verify_remarks", Type: field.TypeString, Nullable: true},
	}
	// LoginTable holds the schema information for the "Login" table.
	LoginTable = &schema.Table{
		Name:       "Login",
		Columns:    LoginColumns,
		PrimaryKey: []*schema.Column{LoginColumns[0]},
	}
	// LogsTableColumns holds the columns for the "LogsTable" table.
	LogsTableColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt64, Increment: true},
		{Name: "userid", Type: field.TypeString, Nullable: true},
		{Name: "uniqueid", Type: field.TypeInt64, Nullable: true},
		{Name: "usertype", Type: field.TypeString, Nullable: true},
		{Name: "userdetails", Type: field.TypeString, Nullable: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "action", Type: field.TypeString, Nullable: true},
		{Name: "ipaddress", Type: field.TypeString, Nullable: true},
		{Name: "devicetype", Type: field.TypeString, Nullable: true},
		{Name: "os", Type: field.TypeString, Nullable: true},
		{Name: "browser", Type: field.TypeString, Nullable: true},
		{Name: "latitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "longitude", Type: field.TypeFloat64, Nullable: true},
		{Name: "eventtime", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "admin_login_log_data", Type: field.TypeInt32, Nullable: true},
		{Name: "admin_master_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "cadre_eligible_configuration_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "category_mininum_mark_mapping_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "center_log_data", Type: field.TypeInt32, Nullable: true},
		{Name: "education_details_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "eligibility_cadre_pay_matrix_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_master_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_log_data", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_notifications_log_data", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_application_mtspmmg_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_gdspa_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_gdspm_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_ip_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_pmpa_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_ps_log_data", Type: field.TypeInt64, Nullable: true},
		{Name: "login_log_data", Type: field.TypeInt, Nullable: true},
		{Name: "notification_log_data", Type: field.TypeInt32, Nullable: true},
		{Name: "user_master_log_data", Type: field.TypeInt64, Nullable: true},
	}
	// LogsTableTable holds the schema information for the "LogsTable" table.
	LogsTableTable = &schema.Table{
		Name:       "LogsTable",
		Columns:    LogsTableColumns,
		PrimaryKey: []*schema.Column{LogsTableColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "LogsTable_AdminLogin_LogData",
				Columns:    []*schema.Column{LogsTableColumns[14]},
				RefColumns: []*schema.Column{AdminLoginColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_AdminMaster_LogData",
				Columns:    []*schema.Column{LogsTableColumns[15]},
				RefColumns: []*schema.Column{AdminMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_CadreEligibleConfiguration_LogData",
				Columns:    []*schema.Column{LogsTableColumns[16]},
				RefColumns: []*schema.Column{CadreEligibleConfigurationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_CategoryMininumMarkMapping_LogData",
				Columns:    []*schema.Column{LogsTableColumns[17]},
				RefColumns: []*schema.Column{CategoryMininumMarkMappingColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Center_LogData",
				Columns:    []*schema.Column{LogsTableColumns[18]},
				RefColumns: []*schema.Column{CenterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_EducationDetails_LogData",
				Columns:    []*schema.Column{LogsTableColumns[19]},
				RefColumns: []*schema.Column{EducationDetailsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_EligibilityCadrePayMatrix_LogData",
				Columns:    []*schema.Column{LogsTableColumns[20]},
				RefColumns: []*schema.Column{EligibilityCadrePayMatrixColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_EmployeeMaster_LogData",
				Columns:    []*schema.Column{LogsTableColumns[21]},
				RefColumns: []*schema.Column{EmployeeMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Exam_LogData",
				Columns:    []*schema.Column{LogsTableColumns[22]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_ExamNotifications_LogData",
				Columns:    []*schema.Column{LogsTableColumns[23]},
				RefColumns: []*schema.Column{ExamNotificationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Exam_Application_MTSPMMG_LogData",
				Columns:    []*schema.Column{LogsTableColumns[24]},
				RefColumns: []*schema.Column{ExamApplicationMTSPMMGColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Exam_Applications_GDSPA_LogData",
				Columns:    []*schema.Column{LogsTableColumns[25]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Exam_Applications_GDSPM_LogData",
				Columns:    []*schema.Column{LogsTableColumns[26]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPMColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Exam_Applications_IP_LogData",
				Columns:    []*schema.Column{LogsTableColumns[27]},
				RefColumns: []*schema.Column{ExamApplicationsIPColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Exam_Applications_PMPA_LogData",
				Columns:    []*schema.Column{LogsTableColumns[28]},
				RefColumns: []*schema.Column{ExamApplicationsPMPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Exam_Applications_PS_LogData",
				Columns:    []*schema.Column{LogsTableColumns[29]},
				RefColumns: []*schema.Column{ExamApplicationsPSColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Login_LogData",
				Columns:    []*schema.Column{LogsTableColumns[30]},
				RefColumns: []*schema.Column{LoginColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_Notification_LogData",
				Columns:    []*schema.Column{LogsTableColumns[31]},
				RefColumns: []*schema.Column{NotificationColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "LogsTable_UserMaster_LogData",
				Columns:    []*schema.Column{LogsTableColumns[32]},
				RefColumns: []*schema.Column{UserMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// MessageColumns holds the columns for the "Message" table.
	MessageColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt64, Increment: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "priority", Type: field.TypeInt32, Default: 0},
		{Name: "status", Type: field.TypeBool, Default: false},
	}
	// MessageTable holds the schema information for the "Message" table.
	MessageTable = &schema.Table{
		Name:       "Message",
		Columns:    MessageColumns,
		PrimaryKey: []*schema.Column{MessageColumns[0]},
	}
	// NotificationColumns holds the columns for the "Notification" table.
	NotificationColumns = []*schema.Column{
		{Name: "NotifyCode", Type: field.TypeInt32, Increment: true},
		{Name: "exam_year", Type: field.TypeInt32},
		{Name: "application_start_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "application_end_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "verification_date_by_controller", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "correction_date_by_candidate", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "correction_veriy_date_by_controller", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "hall_ticket_allotment_date_by_nodal_officer", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "hall_ticket_download_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "notify_file", Type: field.TypeString, Nullable: true},
		{Name: "syllabus_file", Type: field.TypeString, Nullable: true},
		{Name: "vacancies_file", Type: field.TypeString, Nullable: true},
		{Name: "exam_code_ps", Type: field.TypeInt32, Nullable: true},
		{Name: "center_allotment_end_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "eligibility_master_notifications", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_calendar_notify_ref", Type: field.TypeInt32, Nullable: true},
	}
	// NotificationTable holds the schema information for the "Notification" table.
	NotificationTable = &schema.Table{
		Name:       "Notification",
		Columns:    NotificationColumns,
		PrimaryKey: []*schema.Column{NotificationColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "Notification_EligibilityMaster_Notifications",
				Columns:    []*schema.Column{NotificationColumns[14]},
				RefColumns: []*schema.Column{EligibilityMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Notification_Exam_notifications",
				Columns:    []*schema.Column{NotificationColumns[15]},
				RefColumns: []*schema.Column{ExamColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "Notification_ExamCalendar_Notify_ref",
				Columns:    []*schema.Column{NotificationColumns[16]},
				RefColumns: []*schema.Column{ExamCalendarColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PDFColumns holds the columns for the "PDF" table.
	PDFColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "path", Type: field.TypeString, Nullable: true},
		{Name: "filename", Type: field.TypeString, Nullable: true},
		{Name: "eventtime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "examcode", Type: field.TypeInt, Nullable: true},
		{Name: "year", Type: field.TypeInt, Nullable: true},
	}
	// PDFTable holds the schema information for the "PDF" table.
	PDFTable = &schema.Table{
		Name:       "PDF",
		Columns:    PDFColumns,
		PrimaryKey: []*schema.Column{PDFColumns[0]},
	}
	// PaperTypesColumns holds the columns for the "PaperTypes" table.
	PaperTypesColumns = []*schema.Column{
		{Name: "PaperTypeCode", Type: field.TypeInt32, Increment: true},
		{Name: "paper_type_description", Type: field.TypeString, Size: 100},
		{Name: "sequence_number", Type: field.TypeInt32, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "status", Type: field.TypeString},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "paper_code", Type: field.TypeInt32, Nullable: true},
	}
	// PaperTypesTable holds the schema information for the "PaperTypes" table.
	PaperTypesTable = &schema.Table{
		Name:       "PaperTypes",
		Columns:    PaperTypesColumns,
		PrimaryKey: []*schema.Column{PaperTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "PaperTypes_exam_papers_exampapers_types",
				Columns:    []*schema.Column{PaperTypesColumns[20]},
				RefColumns: []*schema.Column{ExamPapersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlaceOfPreferenceIPColumns holds the columns for the "PlaceOfPreferenceIP" table.
	PlaceOfPreferenceIPColumns = []*schema.Column{
		{Name: "PlacePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
		{Name: "place_pref_no", Type: field.TypeInt32, Nullable: true},
		{Name: "place_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "exam_applications_ip_circle_pref_ref", Type: field.TypeInt64, Nullable: true},
	}
	// PlaceOfPreferenceIPTable holds the schema information for the "PlaceOfPreferenceIP" table.
	PlaceOfPreferenceIPTable = &schema.Table{
		Name:       "PlaceOfPreferenceIP",
		Columns:    PlaceOfPreferenceIPColumns,
		PrimaryKey: []*schema.Column{PlaceOfPreferenceIPColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "PlaceOfPreferenceIP_Exam_Applications_IP_CirclePrefRef",
				Columns:    []*schema.Column{PlaceOfPreferenceIPColumns[7]},
				RefColumns: []*schema.Column{ExamApplicationsIPColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PlaceOfPreferencePSColumns holds the columns for the "PlaceOfPreferencePS" table.
	PlaceOfPreferencePSColumns = []*schema.Column{
		{Name: "PlacePrefId", Type: field.TypeInt32, Increment: true},
		{Name: "place_pref_no", Type: field.TypeInt32, Nullable: true},
		{Name: "place_pref_value", Type: field.TypeString, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// PlaceOfPreferencePSTable holds the schema information for the "PlaceOfPreferencePS" table.
	PlaceOfPreferencePSTable = &schema.Table{
		Name:       "PlaceOfPreferencePS",
		Columns:    PlaceOfPreferencePSColumns,
		PrimaryKey: []*schema.Column{PlaceOfPreferencePSColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "PlaceOfPreferencePS_Exam_Applications_PS_CirclePrefRefPS",
				Columns:    []*schema.Column{PlaceOfPreferencePSColumns[6]},
				RefColumns: []*schema.Column{ExamApplicationsPSColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PostExamPapersColumns holds the columns for the "post_exam_papers" table.
	PostExamPapersColumns = []*schema.Column{
		{Name: "Id", Type: field.TypeInt32, Increment: true},
		{Name: "exam_configuration_exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_short_description", Type: field.TypeString, Nullable: true},
		{Name: "exam_long_description", Type: field.TypeString, Nullable: true},
		{Name: "exam_paper_code", Type: field.TypeString, Nullable: true},
		{Name: "paper_description", Type: field.TypeString, Nullable: true},
		{Name: "employee_post_post_id", Type: field.TypeString, Nullable: true},
		{Name: "employee_group_group_id", Type: field.TypeString, Nullable: true},
		{Name: "group_description", Type: field.TypeString, Nullable: true},
		{Name: "post_code", Type: field.TypeString, Nullable: true},
		{Name: "post_description", Type: field.TypeString, Nullable: true},
		{Name: "base_cadre", Type: field.TypeInt, Nullable: true},
		{Name: "pay_level", Type: field.TypeString, Nullable: true},
		{Name: "scale", Type: field.TypeString, Nullable: true},
		{Name: "order_number", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "verified_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "verified_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "verified_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "verified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// PostExamPapersTable holds the schema information for the "post_exam_papers" table.
	PostExamPapersTable = &schema.Table{
		Name:       "post_exam_papers",
		Columns:    PostExamPapersColumns,
		PrimaryKey: []*schema.Column{PostExamPapersColumns[0]},
	}
	// RecommendationsGDSPAApplicationsColumns holds the columns for the "RecommendationsGDSPAApplications" table.
	RecommendationsGDSPAApplicationsColumns = []*schema.Column{
		{Name: "RecommendationId", Type: field.TypeInt64, Increment: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name_code", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "vacancy_year", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "ca_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "no_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "no_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "no_user_name", Type: field.TypeString, Nullable: true},
		{Name: "no_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// RecommendationsGDSPAApplicationsTable holds the schema information for the "RecommendationsGDSPAApplications" table.
	RecommendationsGDSPAApplicationsTable = &schema.Table{
		Name:       "RecommendationsGDSPAApplications",
		Columns:    RecommendationsGDSPAApplicationsColumns,
		PrimaryKey: []*schema.Column{RecommendationsGDSPAApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "RecommendationsGDSPAApplications_Exam_Applications_GDSPA_GDSPAApplicationsRef",
				Columns:    []*schema.Column{RecommendationsGDSPAApplicationsColumns[17]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RecommendationsGDSPMApplicationsColumns holds the columns for the "RecommendationsGDSPMApplications" table.
	RecommendationsGDSPMApplicationsColumns = []*schema.Column{
		{Name: "RecommendationId", Type: field.TypeInt64, Increment: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name_code", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "vacancy_year", Type: field.TypeInt32, Nullable: true},
		{Name: "post", Type: field.TypeString, Nullable: true},
		{Name: "eligible", Type: field.TypeBool, Nullable: true},
		{Name: "ca_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "ca_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "no_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "no_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "no_user_name", Type: field.TypeString, Nullable: true},
		{Name: "no_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "exam_applications_gdspm_gdspm_applications_ref", Type: field.TypeInt64, Nullable: true},
	}
	// RecommendationsGDSPMApplicationsTable holds the schema information for the "RecommendationsGDSPMApplications" table.
	RecommendationsGDSPMApplicationsTable = &schema.Table{
		Name:       "RecommendationsGDSPMApplications",
		Columns:    RecommendationsGDSPMApplicationsColumns,
		PrimaryKey: []*schema.Column{RecommendationsGDSPMApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "RecommendationsGDSPMApplications_Exam_Applications_GDSPM_GDSPMApplicationsRef",
				Columns:    []*schema.Column{RecommendationsGDSPMApplicationsColumns[20]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPMColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RecommendationsIPApplicationsColumns holds the columns for the "RecommendationsIPApplications" table.
	RecommendationsIPApplicationsColumns = []*schema.Column{
		{Name: "RecommendationId", Type: field.TypeInt64, Increment: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name_code", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "vacancy_year", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "ca_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "no_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "no_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "no_user_name", Type: field.TypeString, Nullable: true},
		{Name: "no_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "exam_applications_ip_ip_applications_ref", Type: field.TypeInt64, Nullable: true},
	}
	// RecommendationsIPApplicationsTable holds the schema information for the "RecommendationsIPApplications" table.
	RecommendationsIPApplicationsTable = &schema.Table{
		Name:       "RecommendationsIPApplications",
		Columns:    RecommendationsIPApplicationsColumns,
		PrimaryKey: []*schema.Column{RecommendationsIPApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "RecommendationsIPApplications_Exam_Applications_IP_IPApplicationsRef",
				Columns:    []*schema.Column{RecommendationsIPApplicationsColumns[18]},
				RefColumns: []*schema.Column{ExamApplicationsIPColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RecommendationsMTSPMMGApplicationsColumns holds the columns for the "RecommendationsMTSPMMGApplications" table.
	RecommendationsMTSPMMGApplicationsColumns = []*schema.Column{
		{Name: "RecommendationId", Type: field.TypeInt64, Increment: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name_code", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "exam_name", Type: field.TypeString, Nullable: true},
		{Name: "vacancy_year", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "ca_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "no_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "no_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "no_user_name", Type: field.TypeString, Nullable: true},
		{Name: "no_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
	}
	// RecommendationsMTSPMMGApplicationsTable holds the schema information for the "RecommendationsMTSPMMGApplications" table.
	RecommendationsMTSPMMGApplicationsTable = &schema.Table{
		Name:       "RecommendationsMTSPMMGApplications",
		Columns:    RecommendationsMTSPMMGApplicationsColumns,
		PrimaryKey: []*schema.Column{RecommendationsMTSPMMGApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "RecommendationsMTSPMMGApplications_Exam_Application_MTSPMMG_MTSPMMGApplicationsRef",
				Columns:    []*schema.Column{RecommendationsMTSPMMGApplicationsColumns[18]},
				RefColumns: []*schema.Column{ExamApplicationMTSPMMGColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RecommendationsPMPAApplicationsColumns holds the columns for the "RecommendationsPMPAApplications" table.
	RecommendationsPMPAApplicationsColumns = []*schema.Column{
		{Name: "RecommendationId", Type: field.TypeInt64, Increment: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name_code", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "vacancy_year", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "ca_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "no_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "no_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "no_user_name", Type: field.TypeString, Nullable: true},
		{Name: "no_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "exam_applications_pmpa_pmpa_applications_ref", Type: field.TypeInt64, Nullable: true},
	}
	// RecommendationsPMPAApplicationsTable holds the schema information for the "RecommendationsPMPAApplications" table.
	RecommendationsPMPAApplicationsTable = &schema.Table{
		Name:       "RecommendationsPMPAApplications",
		Columns:    RecommendationsPMPAApplicationsColumns,
		PrimaryKey: []*schema.Column{RecommendationsPMPAApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "RecommendationsPMPAApplications_Exam_Applications_PMPA_PMPAApplicationsRef",
				Columns:    []*schema.Column{RecommendationsPMPAApplicationsColumns[18]},
				RefColumns: []*schema.Column{ExamApplicationsPMPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RecommendationsPSApplicationsColumns holds the columns for the "RecommendationsPSApplications" table.
	RecommendationsPSApplicationsColumns = []*schema.Column{
		{Name: "RecommendationId", Type: field.TypeInt64, Increment: true},
		{Name: "application_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_name_code", Type: field.TypeString, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "vacancy_year", Type: field.TypeInt32, Nullable: true},
		{Name: "ca_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "ca_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "no_recommendations", Type: field.TypeString, Nullable: true},
		{Name: "no_updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "no_user_name", Type: field.TypeString, Nullable: true},
		{Name: "no_remarks", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "generate_hall_ticket_flag", Type: field.TypeBool, Nullable: true},
		{Name: "exam_applications_ps_ps_applications_ref", Type: field.TypeInt64, Nullable: true},
	}
	// RecommendationsPSApplicationsTable holds the schema information for the "RecommendationsPSApplications" table.
	RecommendationsPSApplicationsTable = &schema.Table{
		Name:       "RecommendationsPSApplications",
		Columns:    RecommendationsPSApplicationsColumns,
		PrimaryKey: []*schema.Column{RecommendationsPSApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "RecommendationsPSApplications_Exam_Applications_PS_PSApplicationsRef",
				Columns:    []*schema.Column{RecommendationsPSApplicationsColumns[18]},
				RefColumns: []*schema.Column{ExamApplicationsPSColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ReversalApplicationIPColumns holds the columns for the "Reversal_Application_IP" table.
	ReversalApplicationIPColumns = []*schema.Column{
		{Name: "ApplicationID", Type: field.TypeInt64, Increment: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"Male", "Female"}},
		{Name: "mobile_number", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "employee_category", Type: field.TypeString, Nullable: true},
		{Name: "cadre", Type: field.TypeString, Nullable: true},
		{Name: "employee_post", Type: field.TypeString, Nullable: true},
		{Name: "facility_id", Type: field.TypeString, Nullable: true},
		{Name: "dccs", Type: field.TypeString, Nullable: true},
		{Name: "dc_in_present_cadre", Type: field.TypeString, Nullable: true},
		{Name: "deputation_office_id", Type: field.TypeString, Nullable: true},
		{Name: "disability_type", Type: field.TypeString, Nullable: true},
		{Name: "disability_percentage", Type: field.TypeString, Nullable: true},
		{Name: "education", Type: field.TypeString, Nullable: true},
		{Name: "exam_code_ip", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_year", Type: field.TypeString, Nullable: true},
		{Name: "centre_preference", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "photo", Type: field.TypeString, Nullable: true},
		{Name: "application_status", Type: field.TypeString, Nullable: true},
		{Name: "reversal_appln_submitted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "va_remarks", Type: field.TypeString, Nullable: true},
		{Name: "va_user_name", Type: field.TypeString, Nullable: true},
		{Name: "va_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "ca_remarks", Type: field.TypeString, Nullable: true},
		{Name: "ca_user_name", Type: field.TypeString, Nullable: true},
		{Name: "ca_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "appliaction_remarks", Type: field.TypeString, Nullable: true},
		{Name: "updated_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
	}
	// ReversalApplicationIPTable holds the schema information for the "Reversal_Application_IP" table.
	ReversalApplicationIPTable = &schema.Table{
		Name:       "Reversal_Application_IP",
		Columns:    ReversalApplicationIPColumns,
		PrimaryKey: []*schema.Column{ReversalApplicationIPColumns[0]},
	}
	// RoleMasterColumns holds the columns for the "RoleMaster" table.
	RoleMasterColumns = []*schema.Column{
		{Name: "RoleUserCode", Type: field.TypeInt32, Increment: true},
		{Name: "role_name", Type: field.TypeString},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "status", Type: field.TypeBool, Default: true},
		{Name: "role_code", Type: field.TypeInt32, Nullable: true},
	}
	// RoleMasterTable holds the schema information for the "RoleMaster" table.
	RoleMasterTable = &schema.Table{
		Name:       "RoleMaster",
		Columns:    RoleMasterColumns,
		PrimaryKey: []*schema.Column{RoleMasterColumns[0]},
	}
	// ServiceRequestColumns holds the columns for the "ServiceRequest" table.
	ServiceRequestColumns = []*schema.Column{
		{Name: "ID", Type: field.TypeInt64, Increment: true},
		{Name: "remarks", Type: field.TypeString, Nullable: true},
		{Name: "action", Type: field.TypeString, Nullable: true},
		{Name: "pushed_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "updated_by", Type: field.TypeString, Nullable: true},
		{Name: "updated_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "assigned_to", Type: field.TypeString, Nullable: true},
		{Name: "remarks_new", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Nullable: true},
		{Name: "closed_on", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// ServiceRequestTable holds the schema information for the "ServiceRequest" table.
	ServiceRequestTable = &schema.Table{
		Name:       "ServiceRequest",
		Columns:    ServiceRequestColumns,
		PrimaryKey: []*schema.Column{ServiceRequestColumns[0]},
	}
	// SmsEmailLogTableColumns holds the columns for the "SmsEmailLogTable" table.
	SmsEmailLogTableColumns = []*schema.Column{
		{Name: "UniqueID", Type: field.TypeInt64, Increment: true},
		{Name: "type", Type: field.TypeString, Nullable: true},
		{Name: "mobile_email", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "event_code", Type: field.TypeString, Nullable: true},
		{Name: "event_description", Type: field.TypeString, Nullable: true},
		{Name: "api_response", Type: field.TypeString, Nullable: true},
		{Name: "api_response_description", Type: field.TypeString, Nullable: true},
		{Name: "eventtime", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
	}
	// SmsEmailLogTableTable holds the schema information for the "SmsEmailLogTable" table.
	SmsEmailLogTableTable = &schema.Table{
		Name:       "SmsEmailLogTable",
		Columns:    SmsEmailLogTableColumns,
		PrimaryKey: []*schema.Column{SmsEmailLogTableColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "employeed_id", Type: field.TypeString, Unique: true},
		{Name: "id_verified", Type: field.TypeBool, Default: false},
		{Name: "id_rem_status", Type: field.TypeBool, Default: false},
		{Name: "id_remarks", Type: field.TypeString},
		{Name: "employeed_name", Type: field.TypeString},
		{Name: "name_verified", Type: field.TypeBool, Default: false},
		{Name: "name_rem_status", Type: field.TypeBool, Default: false},
		{Name: "name_remarks", Type: field.TypeString},
		{Name: "dob", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "dob_verified", Type: field.TypeBool, Default: false},
		{Name: "dob_rem_status", Type: field.TypeBool, Default: false},
		{Name: "dob_remarks", Type: field.TypeString},
		{Name: "gender", Type: field.TypeEnum, Enums: []string{"Male", "Female"}},
		{Name: "gender_verified", Type: field.TypeBool, Default: false},
		{Name: "gender_rem_status", Type: field.TypeBool, Default: false},
		{Name: "gender_remarks", Type: field.TypeString},
		{Name: "cadreid", Type: field.TypeInt32},
		{Name: "cadreid_verified", Type: field.TypeBool, Default: false},
		{Name: "cadreid_rem_status", Type: field.TypeBool, Default: false},
		{Name: "cadreid_remarks", Type: field.TypeString},
		{Name: "office_id", Type: field.TypeInt32},
		{Name: "office_id_verified", Type: field.TypeBool, Default: false},
		{Name: "office_id_rem_status", Type: field.TypeBool, Default: false},
		{Name: "office_id_remarks", Type: field.TypeString},
		{Name: "ph", Type: field.TypeBool},
		{Name: "ph_verified", Type: field.TypeBool, Default: false},
		{Name: "ph_rem_status", Type: field.TypeBool, Default: false},
		{Name: "ph_remarks", Type: field.TypeString},
		{Name: "ph_details", Type: field.TypeString, Nullable: true},
		{Name: "ph_details_verified", Type: field.TypeBool, Default: false},
		{Name: "ph_details_rem_status", Type: field.TypeBool, Default: false},
		{Name: "ph_details_remarks", Type: field.TypeString},
		{Name: "aps_working", Type: field.TypeBool},
		{Name: "aps_working_verified", Type: field.TypeBool, Default: false},
		{Name: "aps_working_rem_status", Type: field.TypeBool, Default: false},
		{Name: "aps_working_remarks", Type: field.TypeString},
		{Name: "profilestatus", Type: field.TypeBool, Default: false},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserMasterColumns holds the columns for the "UserMaster" table.
	UserMasterColumns = []*schema.Column{
		{Name: "UserID", Type: field.TypeInt64, Increment: true},
		{Name: "employee_id", Type: field.TypeInt64, Nullable: true},
		{Name: "employee_name", Type: field.TypeString, Nullable: true},
		{Name: "mobile", Type: field.TypeString, Nullable: true},
		{Name: "email_id", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true, Default: false},
		{Name: "statuss", Type: field.TypeString, Nullable: true, Default: "active"},
		{Name: "otp", Type: field.TypeInt32, Nullable: true},
		{Name: "otp_new", Type: field.TypeInt32, Nullable: true},
		{Name: "email_otp_new", Type: field.TypeInt32, Nullable: true},
		{Name: "otp_remarks", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "otp_triggered_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "otp_saved_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "otp_expiry_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "new_password_request", Type: field.TypeBool, Nullable: true},
		{Name: "email_otp", Type: field.TypeInt32, Nullable: true},
		{Name: "email_otp_remarks", Type: field.TypeString, Nullable: true},
		{Name: "email_created_at", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "email_otp_triggered_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "email_otp_saved_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "email_otp_expiry_time", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "email_new_password_request", Type: field.TypeBool, Nullable: true},
		{Name: "uid_token", Type: field.TypeString, Nullable: true},
		{Name: "created_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "created_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "created_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "created_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "deleted_by_id", Type: field.TypeInt64, Nullable: true},
		{Name: "deleted_by_employee_id", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_user_name", Type: field.TypeString, Nullable: true},
		{Name: "deleted_by_designation", Type: field.TypeString, Nullable: true},
		{Name: "deleted_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "facility_id", Type: field.TypeString, Nullable: true},
		{Name: "circle_facility_id", Type: field.TypeString, Nullable: true},
		{Name: "circle_facility_name", Type: field.TypeString, Nullable: true},
		{Name: "designation", Type: field.TypeString, Nullable: true},
		{Name: "updatedby", Type: field.TypeString, Nullable: true},
		{Name: "updated_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "modifiedby", Type: field.TypeString, Nullable: true},
		{Name: "modified_date", Type: field.TypeTime, Nullable: true, SchemaType: map[string]string{"postgres": "timestamp"}},
		{Name: "operationstatus", Type: field.TypeString, Nullable: true},
		{Name: "exam_code", Type: field.TypeInt32, Nullable: true},
		{Name: "exam_code_ps", Type: field.TypeInt32, Nullable: true},
		{Name: "gender", Type: field.TypeEnum, Nullable: true, Enums: []string{"Male", "Female"}},
		{Name: "dob", Type: field.TypeString, Nullable: true},
		{Name: "created_by", Type: field.TypeString, Nullable: true, Default: "API"},
		{Name: "circle_summary_for_no_circleusers", Type: field.TypeInt32, Nullable: true},
		{Name: "employee_master_usermaster_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_application_mtspmmg_users_mtspmmg_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_gdspa_users_gdspa_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_gdspm_users_gdspm_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_ip_users_ip_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_pmpa_users_pmpa_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "exam_applications_ps_users_ps_ref", Type: field.TypeInt64, Nullable: true},
		{Name: "role_user_code", Type: field.TypeInt32, Nullable: true},
	}
	// UserMasterTable holds the schema information for the "UserMaster" table.
	UserMasterTable = &schema.Table{
		Name:       "UserMaster",
		Columns:    UserMasterColumns,
		PrimaryKey: []*schema.Column{UserMasterColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "UserMaster_CircleSummaryForNO_circleusers",
				Columns:    []*schema.Column{UserMasterColumns[50]},
				RefColumns: []*schema.Column{CircleSummaryForNOColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_EmployeeMaster_UsermasterRef",
				Columns:    []*schema.Column{UserMasterColumns[51]},
				RefColumns: []*schema.Column{EmployeeMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_Exam_Application_MTSPMMG_UsersMTSPMMGRef",
				Columns:    []*schema.Column{UserMasterColumns[52]},
				RefColumns: []*schema.Column{ExamApplicationMTSPMMGColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_Exam_Applications_GDSPA_UsersGDSPARef",
				Columns:    []*schema.Column{UserMasterColumns[53]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_Exam_Applications_GDSPM_UsersGDSPMRef",
				Columns:    []*schema.Column{UserMasterColumns[54]},
				RefColumns: []*schema.Column{ExamApplicationsGDSPMColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_Exam_Applications_IP_UsersIPRef",
				Columns:    []*schema.Column{UserMasterColumns[55]},
				RefColumns: []*schema.Column{ExamApplicationsIPColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_Exam_Applications_PMPA_UsersPMPARef",
				Columns:    []*schema.Column{UserMasterColumns[56]},
				RefColumns: []*schema.Column{ExamApplicationsPMPAColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_Exam_Applications_PS_UsersPSRef",
				Columns:    []*schema.Column{UserMasterColumns[57]},
				RefColumns: []*schema.Column{ExamApplicationsPSColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "UserMaster_RoleMaster_Roles_Ref",
				Columns:    []*schema.Column{UserMasterColumns[58]},
				RefColumns: []*schema.Column{RoleMasterColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "usermaster_employee_id_user_name_statuss",
				Unique:  true,
				Columns: []*schema.Column{UserMasterColumns[1], UserMasterColumns[5], UserMasterColumns[8]},
			},
		},
	}
	// VacancyYearsColumns holds the columns for the "VacancyYears" table.
	VacancyYearsColumns = []*schema.Column{
		{Name: "VacancyYearCode", Type: field.TypeInt32, Increment: true},
		{Name: "from_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "to_date", Type: field.TypeTime, SchemaType: map[string]string{"postgres": "date"}},
		{Name: "notify_code", Type: field.TypeInt32, Nullable: true},
		{Name: "vacancy_year", Type: field.TypeString},
		{Name: "calendar_code", Type: field.TypeInt32, Nullable: true},
		{Name: "notification_vacancy_years", Type: field.TypeInt32, Nullable: true},
	}
	// VacancyYearsTable holds the schema information for the "VacancyYears" table.
	VacancyYearsTable = &schema.Table{
		Name:       "VacancyYears",
		Columns:    VacancyYearsColumns,
		PrimaryKey: []*schema.Column{VacancyYearsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "VacancyYears_Notification_vacancy_years",
				Columns:    []*schema.Column{VacancyYearsColumns[6]},
				RefColumns: []*schema.Column{NotificationColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VersionColumns holds the columns for the "Version" table.
	VersionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "ui_version", Type: field.TypeString, Nullable: true},
		{Name: "api_version", Type: field.TypeString, Nullable: true},
		{Name: "api_type", Type: field.TypeInt32, Nullable: true},
	}
	// VersionTable holds the schema information for the "Version" table.
	VersionTable = &schema.Table{
		Name:       "Version",
		Columns:    VersionColumns,
		PrimaryKey: []*schema.Column{VersionColumns[0]},
	}
	// NotificationNotifyRefColumns holds the columns for the "notification_notify_ref" table.
	NotificationNotifyRefColumns = []*schema.Column{
		{Name: "notification_id", Type: field.TypeInt32},
		{Name: "notify_ref_id", Type: field.TypeInt32},
	}
	// NotificationNotifyRefTable holds the schema information for the "notification_notify_ref" table.
	NotificationNotifyRefTable = &schema.Table{
		Name:       "notification_notify_ref",
		Columns:    NotificationNotifyRefColumns,
		PrimaryKey: []*schema.Column{NotificationNotifyRefColumns[0], NotificationNotifyRefColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "notification_notify_ref_notification_id",
				Columns:    []*schema.Column{NotificationNotifyRefColumns[0]},
				RefColumns: []*schema.Column{NotificationColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "notification_notify_ref_notify_ref_id",
				Columns:    []*schema.Column{NotificationNotifyRefColumns[1]},
				RefColumns: []*schema.Column{NotificationColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminLoginTable,
		AdminMasterTable,
		AgeEligibilityTable,
		ApplicationTable,
		CadreEligibleConfigurationTable,
		CadreChoiceIPTable,
		CadreChoiceMTSPMMGTable,
		CadreChoicePATable,
		CadreChoicePMTable,
		CadreChoicePMPATable,
		CadreChoicePSTable,
		CategoryMininumMarkMappingTable,
		CenterTable,
		CircleSummaryForNOTable,
		DirectorateUsersTable,
		DisabilityTable,
		DivisionChoiceMTSPMMGTable,
		DivisionChoicePATable,
		DivisionChoicePMTable,
		DivisionChoicePMPATable,
		EducationDetailsTable,
		EligibilityCadrePayMatrixTable,
		EligibilityMasterTable,
		EmployeeCadreTable,
		EmployeeCategoryTable,
		EmployeeDesignationTable,
		EmployeeGroupTable,
		EmployeeMasterTable,
		EmployeePostsTable,
		EmployeesTable,
		ErrorLogsTableTable,
		ExamTable,
		ExamCalendarTable,
		ExamCategoryDisabilityMappingTable,
		ExamCenterHallTable,
		ExamCityCenterTable,
		ExamNotificationsTable,
		ExamPapersTable,
		ExamPostMappingTable,
		ExamTypeTable,
		ExamApplicationMTSPMMGTable,
		ExamApplicationsGDSPATable,
		ExamApplicationsGDSPMTable,
		ExamApplicationsIPTable,
		ExamApplicationsPMPATable,
		ExamApplicationsPSTable,
		FacilityMastersTable,
		LoginTable,
		LogsTableTable,
		MessageTable,
		NotificationTable,
		PDFTable,
		PaperTypesTable,
		PlaceOfPreferenceIPTable,
		PlaceOfPreferencePSTable,
		PostExamPapersTable,
		RecommendationsGDSPAApplicationsTable,
		RecommendationsGDSPMApplicationsTable,
		RecommendationsIPApplicationsTable,
		RecommendationsMTSPMMGApplicationsTable,
		RecommendationsPMPAApplicationsTable,
		RecommendationsPSApplicationsTable,
		ReversalApplicationIPTable,
		RoleMasterTable,
		ServiceRequestTable,
		SmsEmailLogTableTable,
		UsersTable,
		UserMasterTable,
		VacancyYearsTable,
		VersionTable,
		NotificationNotifyRefTable,
	}
)

func init() {
	AdminLoginTable.ForeignKeys[0].RefTable = RoleMasterTable
	AdminLoginTable.Annotation = &entsql.Annotation{
		Table: "AdminLogin",
	}
	AdminMasterTable.Annotation = &entsql.Annotation{
		Table: "AdminMaster",
	}
	AgeEligibilityTable.Annotation = &entsql.Annotation{
		Table: "AgeEligibility",
	}
	ApplicationTable.ForeignKeys[0].RefTable = CenterTable
	ApplicationTable.ForeignKeys[1].RefTable = NotificationTable
	ApplicationTable.Annotation = &entsql.Annotation{
		Table: "Application",
	}
	CadreEligibleConfigurationTable.Annotation = &entsql.Annotation{
		Table: "CadreEligibleConfiguration",
	}
	CadreChoiceIPTable.ForeignKeys[0].RefTable = ExamApplicationsIPTable
	CadreChoiceIPTable.Annotation = &entsql.Annotation{
		Table: "Cadre_Choice_IP",
	}
	CadreChoiceMTSPMMGTable.ForeignKeys[0].RefTable = ExamApplicationMTSPMMGTable
	CadreChoiceMTSPMMGTable.Annotation = &entsql.Annotation{
		Table: "Cadre_Choice_MTSPMMG",
	}
	CadreChoicePATable.ForeignKeys[0].RefTable = ExamApplicationsGDSPATable
	CadreChoicePATable.Annotation = &entsql.Annotation{
		Table: "Cadre_Choice_PA",
	}
	CadreChoicePMTable.ForeignKeys[0].RefTable = ExamApplicationsGDSPMTable
	CadreChoicePMTable.Annotation = &entsql.Annotation{
		Table: "Cadre_Choice_PM",
	}
	CadreChoicePMPATable.ForeignKeys[0].RefTable = ExamApplicationsPMPATable
	CadreChoicePMPATable.Annotation = &entsql.Annotation{
		Table: "Cadre_Choice_PMPA",
	}
	CadreChoicePSTable.ForeignKeys[0].RefTable = ExamApplicationsPSTable
	CadreChoicePSTable.Annotation = &entsql.Annotation{
		Table: "Cadre_Choice_PS",
	}
	CategoryMininumMarkMappingTable.Annotation = &entsql.Annotation{
		Table: "CategoryMininumMarkMapping",
	}
	CenterTable.ForeignKeys[0].RefTable = ExamTable
	CenterTable.ForeignKeys[1].RefTable = ExamPapersTable
	CenterTable.Annotation = &entsql.Annotation{
		Table: "Center",
	}
	CircleSummaryForNOTable.Annotation = &entsql.Annotation{
		Table: "CircleSummaryForNO",
	}
	DirectorateUsersTable.Annotation = &entsql.Annotation{
		Table: "DirectorateUsers",
	}
	DisabilityTable.ForeignKeys[0].RefTable = ExamPapersTable
	DisabilityTable.Annotation = &entsql.Annotation{
		Table: "Disability",
	}
	DivisionChoiceMTSPMMGTable.ForeignKeys[0].RefTable = ExamApplicationMTSPMMGTable
	DivisionChoiceMTSPMMGTable.Annotation = &entsql.Annotation{
		Table: "Division_Choice_MTSPMMG",
	}
	DivisionChoicePATable.ForeignKeys[0].RefTable = ExamApplicationsGDSPATable
	DivisionChoicePATable.Annotation = &entsql.Annotation{
		Table: "Division_Choice_PA",
	}
	DivisionChoicePMTable.ForeignKeys[0].RefTable = ExamApplicationsGDSPMTable
	DivisionChoicePMTable.Annotation = &entsql.Annotation{
		Table: "Division_Choice_PM",
	}
	DivisionChoicePMPATable.ForeignKeys[0].RefTable = ExamApplicationsPMPATable
	DivisionChoicePMPATable.Annotation = &entsql.Annotation{
		Table: "Division_Choice_PMPA",
	}
	EducationDetailsTable.Annotation = &entsql.Annotation{
		Table: "EducationDetails",
	}
	EligibilityCadrePayMatrixTable.Annotation = &entsql.Annotation{
		Table: "EligibilityCadrePayMatrix",
	}
	EligibilityMasterTable.ForeignKeys[0].RefTable = EmployeePostsTable
	EligibilityMasterTable.ForeignKeys[1].RefTable = ExamTable
	EligibilityMasterTable.ForeignKeys[2].RefTable = ExamPapersTable
	EligibilityMasterTable.Annotation = &entsql.Annotation{
		Table: "EligibilityMaster",
	}
	EmployeeCadreTable.Annotation = &entsql.Annotation{
		Table: "EmployeeCadre",
	}
	EmployeeCategoryTable.ForeignKeys[0].RefTable = EligibilityMasterTable
	EmployeeCategoryTable.Annotation = &entsql.Annotation{
		Table: "EmployeeCategory",
	}
	EmployeeDesignationTable.Annotation = &entsql.Annotation{
		Table: "EmployeeDesignation",
	}
	EmployeeGroupTable.Annotation = &entsql.Annotation{
		Table: "EmployeeGroup",
	}
	EmployeeMasterTable.ForeignKeys[0].RefTable = UserMasterTable
	EmployeeMasterTable.Annotation = &entsql.Annotation{
		Table: "EmployeeMaster",
	}
	EmployeePostsTable.ForeignKeys[0].RefTable = EligibilityMasterTable
	EmployeePostsTable.Annotation = &entsql.Annotation{
		Table: "EmployeePosts",
	}
	EmployeesTable.ForeignKeys[0].RefTable = DirectorateUsersTable
	EmployeesTable.ForeignKeys[1].RefTable = EmployeePostsTable
	EmployeesTable.Annotation = &entsql.Annotation{
		Table: "Employees",
	}
	ErrorLogsTableTable.Annotation = &entsql.Annotation{
		Table: "ErrorLogsTable",
	}
	ExamTable.ForeignKeys[0].RefTable = VacancyYearsTable
	ExamTable.Annotation = &entsql.Annotation{
		Table: "Exam",
	}
	ExamCalendarTable.ForeignKeys[0].RefTable = ExamTable
	ExamCalendarTable.ForeignKeys[1].RefTable = ExamPapersTable
	ExamCalendarTable.ForeignKeys[2].RefTable = VacancyYearsTable
	ExamCalendarTable.Annotation = &entsql.Annotation{
		Table: "ExamCalendar",
	}
	ExamCategoryDisabilityMappingTable.Annotation = &entsql.Annotation{
		Table: "ExamCategoryDisabilityMapping",
	}
	ExamCenterHallTable.ForeignKeys[0].RefTable = CenterTable
	ExamCenterHallTable.Annotation = &entsql.Annotation{
		Table: "ExamCenterHall",
	}
	ExamCityCenterTable.ForeignKeys[0].RefTable = CenterTable
	ExamCityCenterTable.Annotation = &entsql.Annotation{
		Table: "ExamCityCenter",
	}
	ExamNotificationsTable.ForeignKeys[0].RefTable = ExamTable
	ExamNotificationsTable.ForeignKeys[1].RefTable = UserMasterTable
	ExamNotificationsTable.Annotation = &entsql.Annotation{
		Table: "ExamNotifications",
	}
	ExamPapersTable.ForeignKeys[0].RefTable = DisabilityTable
	ExamPapersTable.ForeignKeys[1].RefTable = ExamTable
	ExamPostMappingTable.Annotation = &entsql.Annotation{
		Table: "ExamPostMapping",
	}
	ExamTypeTable.ForeignKeys[0].RefTable = ExamTable
	ExamTypeTable.Annotation = &entsql.Annotation{
		Table: "ExamType",
	}
	ExamApplicationMTSPMMGTable.ForeignKeys[0].RefTable = CenterTable
	ExamApplicationMTSPMMGTable.ForeignKeys[1].RefTable = CircleSummaryForNOTable
	ExamApplicationMTSPMMGTable.ForeignKeys[2].RefTable = ExamTable
	ExamApplicationMTSPMMGTable.ForeignKeys[3].RefTable = ExamCityCenterTable
	ExamApplicationMTSPMMGTable.ForeignKeys[4].RefTable = RoleMasterTable
	ExamApplicationMTSPMMGTable.Annotation = &entsql.Annotation{
		Table: "Exam_Application_MTSPMMG",
	}
	ExamApplicationsGDSPATable.ForeignKeys[0].RefTable = CenterTable
	ExamApplicationsGDSPATable.ForeignKeys[1].RefTable = CircleSummaryForNOTable
	ExamApplicationsGDSPATable.ForeignKeys[2].RefTable = ExamTable
	ExamApplicationsGDSPATable.ForeignKeys[3].RefTable = ExamCityCenterTable
	ExamApplicationsGDSPATable.ForeignKeys[4].RefTable = RoleMasterTable
	ExamApplicationsGDSPATable.ForeignKeys[5].RefTable = UserMasterTable
	ExamApplicationsGDSPATable.Annotation = &entsql.Annotation{
		Table: "Exam_Applications_GDSPA",
	}
	ExamApplicationsGDSPMTable.ForeignKeys[0].RefTable = CenterTable
	ExamApplicationsGDSPMTable.ForeignKeys[1].RefTable = CircleSummaryForNOTable
	ExamApplicationsGDSPMTable.ForeignKeys[2].RefTable = ExamTable
	ExamApplicationsGDSPMTable.ForeignKeys[3].RefTable = ExamCityCenterTable
	ExamApplicationsGDSPMTable.ForeignKeys[4].RefTable = RoleMasterTable
	ExamApplicationsGDSPMTable.ForeignKeys[5].RefTable = UserMasterTable
	ExamApplicationsGDSPMTable.Annotation = &entsql.Annotation{
		Table: "Exam_Applications_GDSPM",
	}
	ExamApplicationsIPTable.ForeignKeys[0].RefTable = CenterTable
	ExamApplicationsIPTable.ForeignKeys[1].RefTable = CircleSummaryForNOTable
	ExamApplicationsIPTable.ForeignKeys[2].RefTable = ExamTable
	ExamApplicationsIPTable.ForeignKeys[3].RefTable = ExamCityCenterTable
	ExamApplicationsIPTable.ForeignKeys[4].RefTable = RoleMasterTable
	ExamApplicationsIPTable.ForeignKeys[5].RefTable = UserMasterTable
	ExamApplicationsIPTable.Annotation = &entsql.Annotation{
		Table: "Exam_Applications_IP",
	}
	ExamApplicationsPMPATable.ForeignKeys[0].RefTable = CenterTable
	ExamApplicationsPMPATable.ForeignKeys[1].RefTable = CircleSummaryForNOTable
	ExamApplicationsPMPATable.ForeignKeys[2].RefTable = ExamTable
	ExamApplicationsPMPATable.ForeignKeys[3].RefTable = ExamCityCenterTable
	ExamApplicationsPMPATable.ForeignKeys[4].RefTable = RoleMasterTable
	ExamApplicationsPMPATable.ForeignKeys[5].RefTable = UserMasterTable
	ExamApplicationsPMPATable.Annotation = &entsql.Annotation{
		Table: "Exam_Applications_PMPA",
	}
	ExamApplicationsPSTable.ForeignKeys[0].RefTable = CenterTable
	ExamApplicationsPSTable.ForeignKeys[1].RefTable = CircleSummaryForNOTable
	ExamApplicationsPSTable.ForeignKeys[2].RefTable = EmployeeMasterTable
	ExamApplicationsPSTable.ForeignKeys[3].RefTable = ExamTable
	ExamApplicationsPSTable.ForeignKeys[4].RefTable = ExamCityCenterTable
	ExamApplicationsPSTable.ForeignKeys[5].RefTable = RoleMasterTable
	ExamApplicationsPSTable.ForeignKeys[6].RefTable = UserMasterTable
	ExamApplicationsPSTable.Annotation = &entsql.Annotation{
		Table: "Exam_Applications_PS",
	}
	FacilityMastersTable.Annotation = &entsql.Annotation{
		Table: "FacilityMasters",
	}
	LoginTable.Annotation = &entsql.Annotation{
		Table: "Login",
	}
	LogsTableTable.ForeignKeys[0].RefTable = AdminLoginTable
	LogsTableTable.ForeignKeys[1].RefTable = AdminMasterTable
	LogsTableTable.ForeignKeys[2].RefTable = CadreEligibleConfigurationTable
	LogsTableTable.ForeignKeys[3].RefTable = CategoryMininumMarkMappingTable
	LogsTableTable.ForeignKeys[4].RefTable = CenterTable
	LogsTableTable.ForeignKeys[5].RefTable = EducationDetailsTable
	LogsTableTable.ForeignKeys[6].RefTable = EligibilityCadrePayMatrixTable
	LogsTableTable.ForeignKeys[7].RefTable = EmployeeMasterTable
	LogsTableTable.ForeignKeys[8].RefTable = ExamTable
	LogsTableTable.ForeignKeys[9].RefTable = ExamNotificationsTable
	LogsTableTable.ForeignKeys[10].RefTable = ExamApplicationMTSPMMGTable
	LogsTableTable.ForeignKeys[11].RefTable = ExamApplicationsGDSPATable
	LogsTableTable.ForeignKeys[12].RefTable = ExamApplicationsGDSPMTable
	LogsTableTable.ForeignKeys[13].RefTable = ExamApplicationsIPTable
	LogsTableTable.ForeignKeys[14].RefTable = ExamApplicationsPMPATable
	LogsTableTable.ForeignKeys[15].RefTable = ExamApplicationsPSTable
	LogsTableTable.ForeignKeys[16].RefTable = LoginTable
	LogsTableTable.ForeignKeys[17].RefTable = NotificationTable
	LogsTableTable.ForeignKeys[18].RefTable = UserMasterTable
	LogsTableTable.Annotation = &entsql.Annotation{
		Table: "LogsTable",
	}
	MessageTable.Annotation = &entsql.Annotation{
		Table: "Message",
	}
	NotificationTable.ForeignKeys[0].RefTable = EligibilityMasterTable
	NotificationTable.ForeignKeys[1].RefTable = ExamTable
	NotificationTable.ForeignKeys[2].RefTable = ExamCalendarTable
	NotificationTable.Annotation = &entsql.Annotation{
		Table: "Notification",
	}
	PDFTable.Annotation = &entsql.Annotation{
		Table: "PDF",
	}
	PaperTypesTable.ForeignKeys[0].RefTable = ExamPapersTable
	PaperTypesTable.Annotation = &entsql.Annotation{
		Table: "PaperTypes",
	}
	PlaceOfPreferenceIPTable.ForeignKeys[0].RefTable = ExamApplicationsIPTable
	PlaceOfPreferenceIPTable.Annotation = &entsql.Annotation{
		Table: "PlaceOfPreferenceIP",
	}
	PlaceOfPreferencePSTable.ForeignKeys[0].RefTable = ExamApplicationsPSTable
	PlaceOfPreferencePSTable.Annotation = &entsql.Annotation{
		Table: "PlaceOfPreferencePS",
	}
	RecommendationsGDSPAApplicationsTable.ForeignKeys[0].RefTable = ExamApplicationsGDSPATable
	RecommendationsGDSPAApplicationsTable.Annotation = &entsql.Annotation{
		Table: "RecommendationsGDSPAApplications",
	}
	RecommendationsGDSPMApplicationsTable.ForeignKeys[0].RefTable = ExamApplicationsGDSPMTable
	RecommendationsGDSPMApplicationsTable.Annotation = &entsql.Annotation{
		Table: "RecommendationsGDSPMApplications",
	}
	RecommendationsIPApplicationsTable.ForeignKeys[0].RefTable = ExamApplicationsIPTable
	RecommendationsIPApplicationsTable.Annotation = &entsql.Annotation{
		Table: "RecommendationsIPApplications",
	}
	RecommendationsMTSPMMGApplicationsTable.ForeignKeys[0].RefTable = ExamApplicationMTSPMMGTable
	RecommendationsMTSPMMGApplicationsTable.Annotation = &entsql.Annotation{
		Table: "RecommendationsMTSPMMGApplications",
	}
	RecommendationsPMPAApplicationsTable.ForeignKeys[0].RefTable = ExamApplicationsPMPATable
	RecommendationsPMPAApplicationsTable.Annotation = &entsql.Annotation{
		Table: "RecommendationsPMPAApplications",
	}
	RecommendationsPSApplicationsTable.ForeignKeys[0].RefTable = ExamApplicationsPSTable
	RecommendationsPSApplicationsTable.Annotation = &entsql.Annotation{
		Table: "RecommendationsPSApplications",
	}
	ReversalApplicationIPTable.Annotation = &entsql.Annotation{
		Table: "Reversal_Application_IP",
	}
	RoleMasterTable.Annotation = &entsql.Annotation{
		Table: "RoleMaster",
	}
	ServiceRequestTable.Annotation = &entsql.Annotation{
		Table: "ServiceRequest",
	}
	SmsEmailLogTableTable.Annotation = &entsql.Annotation{
		Table: "SmsEmailLogTable",
	}
	UserMasterTable.ForeignKeys[0].RefTable = CircleSummaryForNOTable
	UserMasterTable.ForeignKeys[1].RefTable = EmployeeMasterTable
	UserMasterTable.ForeignKeys[2].RefTable = ExamApplicationMTSPMMGTable
	UserMasterTable.ForeignKeys[3].RefTable = ExamApplicationsGDSPATable
	UserMasterTable.ForeignKeys[4].RefTable = ExamApplicationsGDSPMTable
	UserMasterTable.ForeignKeys[5].RefTable = ExamApplicationsIPTable
	UserMasterTable.ForeignKeys[6].RefTable = ExamApplicationsPMPATable
	UserMasterTable.ForeignKeys[7].RefTable = ExamApplicationsPSTable
	UserMasterTable.ForeignKeys[8].RefTable = RoleMasterTable
	UserMasterTable.Annotation = &entsql.Annotation{
		Table: "UserMaster",
	}
	VacancyYearsTable.ForeignKeys[0].RefTable = NotificationTable
	VacancyYearsTable.Annotation = &entsql.Annotation{
		Table: "VacancyYears",
	}
	VersionTable.Annotation = &entsql.Annotation{
		Table: "Version",
	}
	NotificationNotifyRefTable.ForeignKeys[0].RefTable = NotificationTable
	NotificationNotifyRefTable.ForeignKeys[1].RefTable = NotificationTable
}
